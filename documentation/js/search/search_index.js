var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.231,1,1.475]],["body/classes/AbstractDocument.html",[0,0.396,1,2.533,2,0.768,3,0.171,4,0.149,5,0.149,6,4.056,7,1.881,8,4.579,9,0.307,10,1.637,11,3.066,12,0.503,13,0.016,14,2.909,15,1.576,16,2.062,17,2.062,18,2.516,19,0.382,20,4.688,21,0.241,22,1.131,23,3.447,24,2.223,25,1.04,26,1.983,27,4.688,28,3.639,29,0.363,30,4.688,31,3.639,32,3.639,33,0.171,34,2.539,35,4.688,36,4.056,37,2.694,38,4.688,39,4.688,40,4.688,41,1.279,42,4.688,43,0.012,44,0.012]],["title/injectables/AbstractRepository.html",[45,0.892,46,1.872]],["body/injectables/AbstractRepository.html",[0,0.163,1,1.045,3,0.099,4,0.087,5,0.087,9,0.179,12,0.472,13,0.016,19,0.505,21,0.18,26,0.776,29,0.357,33,0.099,37,4.527,41,1.502,43,0.008,44,0.012,45,0.951,46,1.997,47,1.093,48,2.361,49,0.912,50,1.918,51,1.999,52,2.728,53,3.356,54,2.518,55,4.059,56,0.511,57,2.729,58,3.014,59,2.729,60,1.017,61,0.407,62,1.017,63,2.518,64,3.029,65,2.729,66,1.409,67,1.809,68,1.807,69,2.518,70,1.32,71,2.729,72,3.126,73,1.807,74,2.518,75,4.298,76,2.729,77,2.518,78,3.361,79,4.059,80,3.808,81,1.442,82,3.8,83,2.518,84,2.729,85,2.518,86,2.518,87,3.616,88,2.729,89,1.898,90,2.518,91,2.518,92,4.111,93,0.581,94,2.729,95,2.729,96,0.581,97,0.971,98,1.324,99,2.729,100,2.729,101,2.163,102,2.729,103,2.729,104,1.26,105,2.729,106,2.729,107,2.729,108,2.729,109,2.729,110,2.729,111,2.729]],["title/controllers/ClassManagementController.html",[112,1.616,113,2.735]],["body/controllers/ClassManagementController.html",[0,0.425,3,0.119,4,0.104,5,0.104,9,0.214,12,0.356,13,0.016,15,1.843,19,0.446,21,0.231,22,0.785,29,0.283,33,0.119,41,0.889,43,0.009,44,0.009,49,1.039,50,1.859,52,2.411,56,0.61,60,0.767,61,0.307,62,0.767,66,1.295,67,1.57,70,1.167,72,2.995,73,2.059,93,0.693,96,1.167,97,1.035,98,1.05,101,1.715,112,1.964,113,3.891,114,1.366,115,2.295,116,3.936,117,2.312,118,1.995,119,2.969,120,3.323,121,2.868,122,3.445,123,3.257,124,3.936,125,3.6,126,2.818,127,2.868,128,1.57,129,1.806,130,1.447,131,1.995,132,3.634,133,3.257,134,3.323,135,3.386,136,2.691,137,2.4,138,3.257,139,2.275,140,3.445,141,4.05,142,1.669,143,1.366,144,2.528,145,2.139,146,4.254,147,4.254,148,3.671,149,1.995,150,2.818,151,1.995,152,1.764,153,2.528,154,3.257,155,1.366,156,0.785,157,1.872,158,1.432,159,1.504,160,1.964,161,4.05,162,2.818,163,3.257,164,1.366,165,2.818,166,2.312,167,1.843,168,3.257,169,3.257,170,2.312,171,3.257,172,2.528,173,3.257]],["title/modules/ClassManagementModule.html",[174,0.632,175,2.735]],["body/modules/ClassManagementModule.html",[0,0.395,3,0.148,4,0.129,5,0.129,13,0.016,21,0.279,22,0.979,24,1.364,25,0.9,33,0.148,43,0.011,44,0.011,93,0.864,113,4.375,114,2.288,115,2.089,116,2.665,148,4.339,149,2.486,151,3.342,152,2.198,153,3.149,174,1.01,175,5.432,176,1.625,177,1.784,178,2.198,179,2.198,180,1.971,181,3.158,182,2.079,183,3.51,184,3.51,185,3.51,186,3.837,187,3.341,188,4.071,189,2.955,190,2.198,191,2.198,192,3.149,193,2.795,194,1.02,195,3.136,196,2.88,197,2.486,198,2.88,199,2.198,200,3.872,201,1.971,202,3.872,203,2.88,204,3.149,205,2.079,206,3.342,207,3.51,208,1.971,209,2.88,210,2.88,211,1.874,212,2.88,213,3.149,214,4.058,215,4.058,216,3.51]],["title/injectables/ClassManagementRepository.html",[45,0.892,188,2.215]],["body/injectables/ClassManagementRepository.html",[0,0.198,3,0.121,4,0.106,5,0.106,7,1.348,9,0.217,12,0.505,13,0.016,19,0.541,21,0.233,24,1.593,25,0.735,26,1.574,29,0.402,33,0.121,37,4.371,41,0.904,43,0.01,44,0.012,45,1.097,46,3.401,47,1.327,49,1.052,50,1.894,51,1.946,52,2.656,53,3.23,54,2.903,55,3.915,56,0.62,58,3.23,60,1.09,61,0.436,62,1.09,63,2.029,64,2.903,66,1.304,67,1.674,68,1.457,69,2.029,70,1.285,72,2.923,73,1.457,74,2.029,75,4.072,77,2.029,78,2.997,79,3.7,80,3.471,81,1.162,82,2.903,83,2.029,85,2.029,86,2.029,87,3.39,89,1.53,90,2.029,91,2.029,93,0.705,97,0.519,115,1.815,116,3.112,155,1.988,156,1.143,188,3.471,194,0.833,201,2.688,203,2.351,217,2.351,218,2.175,219,3.313,220,3.634,221,2.341,222,2.175,223,2.175,224,2.175,225,2.175,226,2.175,227,1.327,228,3.313,229,2.175]],["title/injectables/ClassManagementService.html",[45,0.892,148,2.36]],["body/injectables/ClassManagementService.html",[0,0.387,3,0.141,4,0.123,5,0.123,9,0.253,12,0.401,13,0.016,19,0.489,21,0.235,25,0.857,29,0.319,33,0.141,43,0.011,44,0.011,45,1.22,47,1.546,49,1.171,50,1.828,52,2.32,56,0.988,60,0.864,61,0.346,62,0.864,66,1.317,67,1.691,70,1.279,72,3.069,73,2.32,93,0.822,96,0.822,97,0.826,101,1.933,115,2.473,116,4.241,119,2.857,121,3.231,122,3.712,129,1.5,131,3.231,134,3.744,135,3.575,136,3.032,137,2.586,139,2.563,140,3.712,141,4.563,143,2.212,148,3.956,155,2.212,156,1.272,167,1.298,188,4.106,201,1.876,203,2.74,205,1.978,227,1.546,230,2.74,231,3.861,232,3.34,233,2.32,234,3.34,235,3.34,236,3.34,237,3.861,238,3.861]],["title/classes/CreatePotentialClassCommand.html",[0,0.231,151,2.36]],["body/classes/CreatePotentialClassCommand.html",[0,0.414,2,0.752,3,0.167,4,0.146,5,0.146,9,0.301,10,1.615,12,0.45,13,0.016,19,0.482,21,0.216,22,1.107,29,0.278,33,0.167,43,0.012,44,0.012,56,0.859,60,0.752,61,0.301,62,0.752,89,3.024,96,1.394,97,0.718,115,2.507,120,5.081,124,4.702,128,1.715,129,2.085,130,2.023,150,3.97,151,4.237,155,2.482,156,1.427,239,3.764,240,3.97,241,2.482,242,4.648,243,3.031,244,3.97,245,4.59,246,3.024,247,4.011,248,2.623,249,4.59,250,2.638]],["title/classes/CreatePotentialClassCommandHandler.html",[0,0.231,251,2.991]],["body/classes/CreatePotentialClassCommandHandler.html",[0,0.35,2,0.957,3,0.133,4,0.117,5,0.117,9,0.24,12,0.386,13,0.016,19,0.414,21,0.23,22,0.882,29,0.307,33,0.133,41,0.999,43,0.01,44,0.01,49,1.128,50,1.53,51,1.179,56,0.952,60,0.833,61,0.333,62,0.833,66,1.037,67,1.653,96,0.779,97,0.914,98,2.034,104,1.69,115,2.237,120,2.597,128,0.958,130,1.131,137,2.036,151,4.398,153,2.84,155,2.132,156,1.522,158,2.235,159,2.347,160,2.647,164,2.782,165,4.398,166,3.608,167,1.709,188,4.127,201,1.778,205,1.874,206,3.114,207,3.165,208,1.778,233,2.235,239,3.357,241,2.132,251,4.899,252,3.165,253,4.146,254,2.922,255,2.597,256,4.48,257,3.659,258,4.708,259,3.608,260,3.659,261,3.946,262,4.398,263,2.604,264,3.608,265,3.608,266,2.597,267,3.659,268,2.241,269,1.982,270,2.597,271,1.778,272,3.659,273,3.659,274,3.659,275,3.659,276,3.165,277,3.659,278,3.659,279,2.84]],["title/classes/CreatePotentialModuleCommand.html",[0,0.231,280,2.36]],["body/classes/CreatePotentialModuleCommand.html",[0,0.387,2,0.733,3,0.163,4,0.143,5,0.143,9,0.293,10,1.588,12,0.442,13,0.016,19,0.474,21,0.212,22,1.079,29,0.352,33,0.163,41,1.588,43,0.012,44,0.012,56,0.837,60,0.733,61,0.293,62,0.733,96,1.376,97,0.7,128,1.86,129,1.839,130,2.194,156,1.403,160,2.44,174,1.164,239,3.717,241,2.44,242,4.59,243,2.981,246,2.987,247,3.962,248,2.59,250,2.57,280,4.196,281,2.713,282,3.869,283,5.04,284,3.869,285,4.663,286,4.473,287,5.034,288,4.473,289,3.869]],["title/classes/CreatePotentialModuleCommandHandler.html",[0,0.231,290,2.991]],["body/classes/CreatePotentialModuleCommandHandler.html",[0,0.224,2,0.612,3,0.136,4,0.119,5,0.119,9,0.245,12,0.392,13,0.016,19,0.42,21,0.232,22,0.901,29,0.312,33,0.136,41,1.02,43,0.01,44,0.01,49,1.145,50,1.547,51,2.227,56,0.966,60,0.845,61,0.338,62,0.845,66,1.052,67,1.668,96,0.795,97,0.585,98,2.052,104,1.726,128,1.89,130,1.594,137,2.066,160,3.11,164,2.163,167,1.734,174,1.161,176,2.066,205,1.914,208,1.816,239,3.395,241,2.163,253,4.193,254,2.965,255,2.652,256,4.744,258,3.661,259,3.661,261,4.004,264,3.661,265,3.661,266,2.652,268,2.289,269,3.2,270,2.652,271,1.816,279,2.901,280,3.902,281,2.478,283,2.652,290,4.004,291,3.233,292,4.071,293,3.737,294,3.737,295,2.901,296,3.16,297,3.233,298,3.737,299,1.914,300,3.737,301,3.737,302,3.737,303,3.737,304,2.901,305,1.204,306,3.737]],["title/classes/CreatePotentialStudentCommand.html",[0,0.231,307,2.531]],["body/classes/CreatePotentialStudentCommand.html",[0,0.422,2,0.716,3,0.159,4,0.139,5,0.139,9,0.287,10,1.565,12,0.436,13,0.016,19,0.467,21,0.209,22,1.543,29,0.347,33,0.159,43,0.012,44,0.012,51,2.061,56,1.271,60,0.716,61,0.287,62,0.716,96,1.361,97,0.684,128,1.846,129,1.819,130,1.771,160,2.404,174,0.94,239,3.676,241,2.848,242,5.004,243,3.277,307,4.459,308,1.608,309,4.201,310,3.782,311,3.425,312,2.937,313,4.135,314,3.782,315,4.372,316,3.108,317,4.372,318,2.678,319,3.782]],["title/classes/CreatePotentialStudentCommandHandler.html",[0,0.231,320,2.735]],["body/classes/CreatePotentialStudentCommandHandler.html",[0,0.376,2,0.518,3,0.115,4,0.101,5,0.101,9,0.207,12,0.349,13,0.016,19,0.373,21,0.215,22,0.763,29,0.326,33,0.115,41,1.251,43,0.009,44,0.009,49,1.017,50,1.412,51,1.737,56,1.107,60,0.751,61,0.301,62,0.751,66,0.935,67,1.548,96,0.673,97,0.844,98,1.905,104,1.461,128,1.644,129,1.681,130,0.977,156,1.426,159,1.461,160,3.002,164,2.831,166,3.254,167,1.541,205,1.62,208,1.537,239,3.099,241,1.923,253,3.827,254,3.398,255,2.245,256,4.791,258,3.827,259,3.254,265,3.254,266,2.245,268,1.937,269,3.203,270,2.245,271,3.049,276,2.736,304,4.185,307,4.7,308,1.355,309,3.541,311,3.28,313,2.483,320,4.196,321,2.736,322,3.622,323,5.913,324,3.558,325,4.113,326,3.163,327,3.029,328,3.558,329,3.163,330,2.348,331,4.584,332,3.883,333,3.966,334,2.635,335,3.966,336,2.736,337,2.736,338,3.163,339,2.455,340,1.818,341,2.736,342,2.736,343,2.736,344,2.227,345,3.163,346,3.163,347,3.163,348,3.163,349,3.163,350,3.163,351,2.245,352,2.736,353,3.163]],["title/classes/CreatePotentialTestCommand.html",[0,0.231,354,2.531]],["body/classes/CreatePotentialTestCommand.html",[0,0.388,2,0.735,3,0.163,4,0.143,5,0.143,9,0.294,10,1.591,12,0.443,13,0.016,19,0.475,21,0.212,22,1.081,29,0.352,33,0.163,43,0.012,44,0.012,56,0.839,60,0.735,61,0.294,62,0.735,89,2.99,96,1.378,97,0.702,127,3.57,128,1.861,129,1.842,130,2.196,156,1.406,160,2.444,241,2.444,242,4.596,243,2.986,246,2.99,248,2.594,250,2.577,318,2.747,354,4.503,355,2.594,356,5.026,357,3.879,358,3.453,359,4.153,360,3.879,361,4.484,362,4.484,363,3.879]],["title/classes/CreatePotentialTestCommandHandler.html",[0,0.231,364,2.735]],["body/classes/CreatePotentialTestCommandHandler.html",[0,0.353,2,0.611,3,0.136,4,0.119,5,0.119,9,0.244,12,0.392,13,0.016,19,0.419,21,0.232,22,0.899,29,0.312,33,0.136,41,1.018,43,0.01,44,0.01,49,1.143,50,1.545,51,1.202,56,0.964,60,0.844,61,0.338,62,0.844,66,1.051,67,1.667,96,0.794,97,0.584,98,2.051,104,1.722,137,2.063,142,2.639,156,1.242,158,1.64,160,3.108,164,2.16,166,2.647,167,1.731,208,1.812,233,1.64,241,2.16,253,4.188,254,2.96,255,2.647,256,4.517,258,4.188,259,3.656,261,3.998,264,3.656,265,3.656,266,2.647,268,2.284,269,3.617,270,2.647,271,1.812,279,2.894,304,2.894,327,1.91,354,4.737,355,2.363,356,4.58,358,3.092,359,2.02,364,3.656,365,3.226,366,3.383,367,4.068,368,3.729,369,3.729,370,4.456,371,3.226,372,2.449,373,3.226,374,2.894,375,3.729,376,3.729,377,1.91,378,3.729,379,3.729,380,3.729]],["title/classes/CreateTeacherDto.html",[0,0.231,381,2.36]],["body/classes/CreateTeacherDto.html",[0,0.446,1,2.759,2,0.706,3,0.157,4,0.137,5,0.137,7,1.92,9,0.282,10,1.549,11,2.496,12,0.432,13,0.016,14,1.894,15,1.908,16,1.894,17,1.894,18,1.806,19,0.462,21,0.207,29,0.26,33,0.157,34,3.075,43,0.011,44,0.011,51,1.829,61,0.482,70,1.437,129,1.92,130,1.754,174,0.93,194,1.596,221,1.578,246,2.622,247,3.478,248,2.274,308,1.427,316,2.758,381,3.478,382,4.911,383,3.343,384,2.528,385,5.239,386,2.829,387,4.308,388,4.911,389,4.911,390,1.989,391,3.728,392,3.728,393,2.638]],["title/modules/DatabaseModule.html",[174,0.632,186,2.087]],["body/modules/DatabaseModule.html",[0,0.253,3,0.154,4,0.135,5,0.135,13,0.016,21,0.244,25,0.937,26,1.905,29,0.405,33,0.154,34,2.288,43,0.011,44,0.011,66,0.862,81,1.966,93,0.899,97,0.661,130,1.305,139,2.052,156,1.019,174,1.174,176,1.692,177,2.464,186,3.407,193,2.164,197,3.433,199,2.288,248,2.519,263,2.164,271,2.723,305,1.806,327,2.164,330,2.871,394,4.224,395,5.832,396,2.774,397,4.754,398,4.224,399,5.605,400,3.279,401,4.224,402,2.588,403,3.279,404,4.224,405,4.35,406,3.279,407,4.399,408,3.279,409,4.35,410,3.68,411,4.35,412,4.224,413,3.654,414,4.224,415,4.464,416,3.279,417,2.164]],["title/controllers/ModuleManagementController.html",[112,1.616,418,2.735]],["body/controllers/ModuleManagementController.html",[0,0.19,3,0.116,4,0.101,5,0.101,9,0.208,12,0.35,13,0.016,15,1.818,19,0.44,21,0.229,22,0.767,29,0.327,33,0.116,41,0.868,43,0.009,44,0.009,49,1.021,50,1.848,51,1.483,52,2.973,56,0.595,60,0.754,61,0.302,62,0.754,66,1.283,67,1.552,70,1.151,72,2.973,73,2.024,93,0.677,96,1.151,97,0.847,98,1.025,101,1.686,112,2.268,114,1.334,117,2.257,118,1.948,119,3.211,121,2.819,122,3.407,125,4.13,128,1.552,129,1.789,130,1.422,131,1.948,132,3.572,135,3.359,136,2.645,137,2.374,140,3.407,142,2.358,143,1.93,144,3.572,145,2.088,146,3.838,147,3.838,149,1.948,152,1.723,160,1.334,167,1.818,170,2.257,172,2.468,174,1.174,280,1.948,281,2.486,283,3.266,285,3.893,289,2.751,295,2.468,322,4.016,366,3.022,418,3.266,419,3.893,420,5.374,421,4.603,422,4.603,423,4.603,424,3.18,425,3.18,426,5.089,427,3.18,428,3.18,429,3.981,430,3.313,431,3.18,432,3.18,433,3.18,434,3.18,435,3.18]],["title/modules/ModuleManagementModule.html",[174,0.632,436,2.735]],["body/modules/ModuleManagementModule.html",[0,0.208,3,0.127,4,0.111,5,0.111,13,0.016,21,0.28,22,0.839,24,1.649,25,0.772,26,0.989,29,0.21,31,2.699,33,0.127,43,0.01,44,0.01,61,0.322,93,0.74,114,2.589,119,3.079,128,0.911,149,2.13,152,1.883,157,1.998,158,2.157,160,1.458,164,1.458,174,1.261,176,1.393,177,2.499,178,1.883,179,1.883,180,1.689,181,3.335,182,1.781,186,3.659,187,3.162,189,2.657,190,1.883,191,1.883,192,2.699,193,2.513,194,0.874,195,2.819,197,2.13,198,2.468,199,1.883,200,3.482,204,2.699,205,1.781,208,1.689,209,2.468,210,2.468,211,1.606,212,2.468,213,2.699,233,1.529,271,1.689,280,3.005,281,2.057,292,3.882,295,2.699,296,3.005,297,3.008,299,1.781,352,3.008,366,3.221,396,3.221,402,3.005,407,2.283,418,4.034,419,2.283,430,4.138,436,5.293,437,3.008,438,3.008,439,3.477,440,3.482,441,3.807,442,3.807,443,3.477,444,3.482,445,2.468,446,1.781,447,2.468,448,2.468,449,2.468,450,3.008]],["title/injectables/ModuleManagementRepository.html",[45,0.892,292,2.215]],["body/injectables/ModuleManagementRepository.html",[0,0.373,3,0.113,4,0.099,5,0.099,7,1.665,9,0.203,12,0.494,13,0.016,19,0.529,21,0.227,24,1.517,25,0.687,26,1.515,29,0.406,33,0.113,37,4.328,41,0.845,43,0.009,44,0.012,45,1.044,46,3.339,47,1.24,49,1.002,50,1.865,51,1.886,52,2.574,53,3.156,54,2.765,55,3.812,56,0.58,58,3.156,60,1.065,61,0.426,62,1.065,63,1.896,64,2.765,66,1.269,67,1.63,68,1.361,69,1.896,70,1.246,72,2.857,73,1.361,74,1.896,75,3.979,77,1.896,78,2.885,79,3.585,80,3.364,81,1.086,82,2.765,83,1.896,85,1.896,86,1.896,87,3.262,89,1.43,90,1.896,91,1.896,93,0.659,97,0.485,142,2.312,143,1.893,155,1.893,156,1.088,159,2.084,174,0.74,194,0.778,217,2.197,218,2.033,220,3.498,221,2.28,222,2.033,223,2.033,224,2.033,225,2.033,226,2.033,227,1.24,229,2.033,233,2.574,271,2.193,281,1.893,292,3.364,299,3.188,419,2.964,445,2.197,451,2.765,452,4.514,453,3.203,454,4.514,455,3.096,456,2.765,457,3.096]],["title/injectables/ModuleManagementService.html",[45,0.892,430,2.36]],["body/injectables/ModuleManagementService.html",[0,0.354,3,0.136,4,0.119,5,0.119,9,0.245,12,0.392,13,0.016,19,0.481,21,0.232,25,0.829,29,0.312,33,0.136,43,0.01,44,0.01,45,1.193,47,1.497,49,1.145,50,1.81,52,2.268,56,0.966,60,0.845,61,0.338,62,0.845,66,1.299,67,1.668,70,1.257,72,3.039,73,2.268,81,1.81,93,0.795,96,0.795,97,0.808,101,1.89,119,3.45,121,3.16,122,3.661,131,3.16,134,3.661,135,3.54,136,2.965,137,2.551,139,2.506,140,3.661,142,2.642,143,2.163,157,2.965,167,1.256,174,1.095,205,1.914,227,1.497,230,2.652,232,3.233,233,2.268,234,3.233,235,3.233,281,2.671,292,4.071,299,1.914,370,4.462,417,1.914,419,4.183,430,3.16,441,4.004,445,2.652,456,2.289,458,5.159,459,3.737,460,4.462,461,3.233,462,3.737,463,3.737]],["title/classes/PotentialClass.html",[0,0.231,201,1.872]],["body/classes/PotentialClass.html",[0,0.279,1,2.664,2,0.764,3,0.17,4,0.149,5,0.149,7,1.7,9,0.306,10,1.631,11,2.629,12,0.502,13,0.016,14,2.051,15,2.218,16,2.051,17,2.051,18,1.956,19,0.537,21,0.24,23,3.792,24,2.009,25,1.035,33,0.218,43,0.012,44,0.012,61,0.433,70,1.272,98,1.503,115,2.526,194,1.172,201,2.904,202,3.31,211,3.213,221,1.708,308,1.172,311,3.205,316,2.904,344,3.205,390,2.153,464,3.619,465,3.662,466,4.663,467,4.663,468,2.856,469,4.034,470,4.034]],["title/classes/PotentialClassRegisteredEvent.html",[0,0.231,206,2.36]],["body/classes/PotentialClassRegisteredEvent.html",[0,0.421,2,0.785,3,0.175,4,0.153,5,0.153,7,1.73,8,4.388,9,0.314,10,1.66,12,0.462,13,0.016,19,0.495,21,0.175,22,1.155,29,0.29,33,0.175,43,0.012,44,0.012,56,0.897,60,0.785,61,0.314,62,0.785,96,1.422,97,0.75,115,2.558,120,5.149,128,1.75,129,1.9,143,2.802,155,2.551,156,1.467,206,4.305,243,3.115,244,4.144,250,2.753,351,4.742,471,5.186,472,3.146,473,4.144,474,5.78,475,4.144,476,3.4]],["title/classes/PotentialClassRegisteredEventHandler.html",[0,0.231,477,2.991]],["body/classes/PotentialClassRegisteredEventHandler.html",[0,0.314,2,0.629,3,0.14,4,0.122,5,0.122,9,0.251,12,0.399,13,0.016,19,0.428,21,0.254,22,0.925,25,0.851,26,1.703,29,0.318,33,0.14,41,1.047,43,0.011,44,0.011,46,1.863,49,1.165,50,1.568,56,0.983,58,3.384,60,0.861,61,0.344,62,0.861,66,0.782,67,1.375,96,1.118,97,0.937,98,1.236,104,1.771,115,2.293,155,2.202,156,1.553,159,2.425,164,2.202,167,1.765,194,0.964,201,3.465,203,2.722,206,4.448,208,1.863,216,3.318,227,1.536,236,3.318,241,2.202,262,4.543,263,2.69,305,1.236,322,3.217,340,3.018,446,1.965,471,4.648,477,4.998,478,2.519,479,4.25,480,3.727,481,3.836,482,3.62,483,3.836,484,4.543,485,4.543,486,3.727,487,3.836,488,2.722,489,3.836,490,2.722,491,3.727,492,2.204,493,3.318,494,3.318,495,3.318]],["title/classes/PotentialModule.html",[0,0.231,299,1.974]],["body/classes/PotentialModule.html",[0,0.419,1,2.484,2,0.64,3,0.142,4,0.124,5,0.124,7,1.512,9,0.256,10,1.451,11,2.337,12,0.493,13,0.016,14,1.717,15,2.181,16,1.717,17,1.717,18,1.637,19,0.528,21,0.236,23,3.729,24,2.281,25,0.866,26,1.719,29,0.236,33,0.194,43,0.011,44,0.011,61,0.445,70,1.131,98,1.258,115,1.495,128,1.834,174,1.148,194,0.981,201,2.936,211,3.234,221,1.43,281,2.721,299,3.477,308,0.981,316,2.936,384,2.558,390,1.803,444,2.771,451,3.702,465,3.702,468,2.391,496,3.03,497,3.904,498,4.605,499,3.904,500,3.904,501,3.377,502,3.377,503,3.377]],["title/classes/PotentialModuleRegisteredEvent.html",[0,0.231,296,2.36]],["body/classes/PotentialModuleRegisteredEvent.html",[0,0.424,2,0.729,3,0.162,4,0.142,5,0.142,7,1.944,8,4.656,9,0.292,10,1.583,12,0.441,13,0.016,19,0.472,21,0.162,22,1.073,29,0.351,33,0.162,41,1.583,43,0.012,44,0.012,56,0.833,60,0.729,61,0.292,62,0.729,96,1.373,97,0.697,128,1.857,129,1.835,130,1.994,156,1.399,164,2.432,174,1.162,243,2.971,246,2.979,247,3.952,248,2.584,250,2.557,281,2.706,283,5.032,284,3.849,287,5.017,296,4.188,334,3.333,472,2.922,473,3.849,475,3.849,476,3.158,504,5.008,505,4.501]],["title/classes/PotentialModuleRegisteredEventHandler.html",[0,0.231,506,2.991]],["body/classes/PotentialModuleRegisteredEventHandler.html",[0,0.239,2,0.654,3,0.145,4,0.127,5,0.127,9,0.262,12,0.41,13,0.016,19,0.439,21,0.257,22,0.963,25,0.886,26,1.136,29,0.326,33,0.145,41,1.09,43,0.011,44,0.011,46,1.94,49,1.198,50,1.601,56,1.01,58,3.181,60,0.884,61,0.354,62,0.884,66,1.101,67,1.715,96,1.149,97,0.625,98,1.287,104,1.844,137,2.162,142,2.765,156,1.302,164,2.957,167,1.814,174,0.654,194,1.003,208,1.94,227,1.599,241,2.264,269,2.923,281,2.564,296,4.6,299,3.355,322,3.306,340,3.102,445,2.834,450,3.454,461,3.454,478,2.622,479,4.339,480,3.83,482,3.502,486,3.83,488,2.834,491,2.834,493,3.454,494,3.454,495,3.454,504,4.745,506,4.189,507,3.993,508,3.993,509,3.993,510,5.397,511,3.993]],["title/classes/PotentialStudent.html",[0,0.231,344,1.872]],["body/classes/PotentialStudent.html",[0,0.391,1,2.596,2,0.577,3,0.128,4,0.112,5,0.112,7,1.407,9,0.231,10,1.35,11,2.175,12,0.497,13,0.016,14,1.547,15,2.198,16,1.547,17,1.547,18,1.476,19,0.532,21,0.18,23,3.758,24,2.086,25,0.781,26,1.407,29,0.421,33,0.18,34,3.362,43,0.01,44,0.01,61,0.407,68,1.547,70,1.513,98,1.134,128,1.625,194,0.884,211,3.284,221,1.289,305,1.134,308,1.643,311,3.015,316,3.631,334,3.567,344,3.015,390,1.625,465,3.802,468,3.03,492,3.567,512,2.731,513,4.279,514,5.369,515,4.949,516,3.519,517,6.151,518,5.519,519,3.519,520,3.519,521,3.519,522,3.044,523,2.498,524,2.498,525,3.044]],["title/classes/PotentialStudentRegisteredEvent.html",[0,0.231,332,2.531]],["body/classes/PotentialStudentRegisteredEvent.html",[0,0.449,2,0.686,3,0.152,4,0.133,5,0.133,7,1.898,8,4.563,9,0.274,10,1.52,12,0.423,13,0.016,19,0.453,21,0.152,22,1.51,29,0.337,33,0.152,43,0.011,44,0.011,56,1.172,60,0.686,61,0.274,62,0.686,96,1.332,97,0.655,128,1.91,129,1.78,164,2.799,174,0.913,241,2.799,243,2.853,250,2.405,308,1.573,311,3.543,312,2.853,313,3.764,314,3.619,332,4.382,334,3.994,351,4.932,385,4.322,472,2.747,474,5.415,476,2.969,505,4.322,526,4.858,527,6.95,528,5.569,529,4.184,530,4.184]],["title/classes/PotentialStudentRegisteredEventHandler.html",[0,0.231,531,2.735]],["body/classes/PotentialStudentRegisteredEventHandler.html",[0,0.219,2,0.6,3,0.133,4,0.117,5,0.117,9,0.24,12,0.386,13,0.016,19,0.414,21,0.25,22,0.882,25,0.812,26,1.041,29,0.382,33,0.133,43,0.01,44,0.01,49,1.128,50,1.53,51,1.179,53,1.778,56,0.952,58,3.067,60,0.833,61,0.333,62,0.833,66,0.746,67,1.331,96,1.082,97,0.573,98,1.882,104,2.347,164,3.058,167,1.709,194,0.92,208,1.778,227,1.465,241,2.647,248,2.34,268,2.241,269,3.164,305,1.179,308,1.468,312,2.604,313,2.754,330,1.874,332,4.715,339,2.84,340,3.812,341,3.165,342,3.165,343,3.165,344,1.778,384,2.47,446,1.874,478,2.403,479,4.708,480,4.146,482,3.421,486,3.608,488,2.597,490,2.597,491,3.608,492,2.103,518,2.84,526,4.534,531,3.608,532,3.165,533,3.165,534,3.659,535,2.103,536,3.659,537,2.84,538,3.659,539,3.659,540,3.165,541,2.84,542,2.403,543,3.659,544,3.659,545,3.659,546,3.659,547,3.659,548,3.165]],["title/classes/PotentialTest.html",[0,0.231,377,1.974]],["body/classes/PotentialTest.html",[0,0.194,1,2.287,2,0.53,3,0.118,4,0.103,5,0.103,7,1.325,9,0.212,10,1.271,11,2.048,12,0.554,13,0.016,14,1.422,15,2.284,16,1.422,17,2.401,18,1.356,19,0.553,21,0.17,23,3.906,24,2.128,25,0.718,26,1.553,29,0.196,33,0.17,43,0.009,44,0.009,61,0.415,70,1.531,81,2.095,98,1.042,128,1.927,174,1.037,194,0.813,211,3.398,221,1.184,316,3.203,324,3.615,355,2.722,358,3.575,377,3.243,390,1.493,451,3.344,465,4.039,468,1.98,498,4.239,523,4.239,549,2.509,550,5.476,551,4.914,552,5.476,553,5.879,554,3.233,555,3.233,556,3.615,557,3.233,558,4.029,559,4.029,560,3.233,561,3.233,562,3.233,563,2.509,564,2.295,565,2.797]],["title/classes/PotentialTestRegisteredEvent.html",[0,0.231,372,2.531]],["body/classes/PotentialTestRegisteredEvent.html",[0,0.391,2,0.746,3,0.166,4,0.145,5,0.145,7,1.674,8,4.284,9,0.299,10,1.607,12,0.448,13,0.016,19,0.479,21,0.166,22,1.098,29,0.356,33,0.166,43,0.012,44,0.012,56,0.853,60,0.746,61,0.299,62,0.746,89,3.013,96,1.388,97,0.713,127,3.606,128,1.87,129,1.855,156,1.42,164,2.469,243,3.016,246,3.013,248,2.613,250,2.617,351,4.63,355,2.613,358,3.47,359,3.868,360,3.939,372,4.529,472,2.991,476,3.232,505,4.569,566,5.064,567,5.888,568,4.554,569,4.554]],["title/classes/PotentialTestRegisteredEventHandler.html",[0,0.231,570,2.735]],["body/classes/PotentialTestRegisteredEventHandler.html",[0,0.323,2,0.518,3,0.115,4,0.101,5,0.101,9,0.207,12,0.349,13,0.016,19,0.373,21,0.238,22,1.3,24,1.541,25,0.702,26,0.9,29,0.326,33,0.115,41,0.863,43,0.009,44,0.009,49,1.017,50,1.412,56,1.107,58,3.179,60,0.751,61,0.301,62,0.751,66,0.935,67,1.548,96,0.976,97,0.844,98,1.737,104,2.117,142,3.029,156,1.105,164,2.9,167,1.541,174,0.751,194,0.795,208,1.537,227,1.267,241,2.48,268,1.937,269,3.4,305,1.019,312,2.348,322,2.808,327,3.029,333,3.966,334,2.635,335,3.966,340,2.635,355,2.159,358,2.227,359,1.713,366,3.01,372,4.812,377,1.62,384,2.571,429,4.664,446,2.762,478,2.077,479,4.454,480,3.254,482,3.477,484,5.115,486,3.254,488,2.245,490,3.827,491,4.454,532,2.736,533,2.736,535,1.818,537,2.455,540,2.736,541,2.455,542,2.077,548,2.736,551,2.455,556,2.455,566,4.185,570,4.196,571,5.429,572,5.392,573,4.584,574,4.584,575,3.163,576,4.584,577,3.163,578,3.163,579,3.163,580,3.163,581,3.163,582,3.163,583,3.163,584,2.736,585,3.163,586,3.163,587,3.163]],["title/injectables/RabbitmqService.html",[45,0.892,482,1.872]],["body/injectables/RabbitmqService.html",[0,0.307,3,0.135,4,0.118,5,0.118,9,0.242,12,0.389,13,0.016,19,0.417,21,0.214,29,0.403,33,0.135,43,0.01,44,0.01,45,1.185,47,1.481,49,1.136,56,1.1,60,0.839,61,0.416,62,0.839,66,1.294,67,1.85,70,1.532,93,0.787,96,0.787,97,0.92,101,1.355,137,2.54,155,1.551,156,1.417,157,3.376,167,1.243,305,1.191,330,1.894,340,4.437,415,2.624,417,2.623,446,3.528,460,4.43,482,3.081,490,3.634,588,3.199,589,5.875,590,3.698,591,7.199,592,3.698,593,4.889,594,6.659,595,5.121,596,3.698,597,5.121,598,4.559,599,5.481,600,6.889,601,2.428,602,3.698,603,3.199,604,3.199,605,2.428,606,3.698,607,3.698,608,3.698]],["title/modules/RmqModule.html",[174,0.632,187,1.872]],["body/modules/RmqModule.html",[0,0.185,3,0.113,4,0.099,5,0.099,12,0.235,13,0.016,19,0.252,21,0.227,29,0.393,33,0.113,34,1.674,43,0.009,44,0.009,49,0.686,60,0.506,61,0.408,62,0.506,66,1.269,70,0.658,81,1.581,93,0.658,97,0.706,101,1.132,130,1.393,139,1.501,156,0.745,174,1.241,176,1.238,177,2.34,178,1.674,179,1.674,180,1.501,181,2.726,182,2.996,187,3.404,189,2.441,190,1.674,191,1.674,193,1.583,199,1.674,248,2.131,263,1.583,305,0.996,312,2.726,327,2.726,330,2.726,395,5.438,396,3.494,400,2.399,402,1.893,403,2.399,405,3.498,406,2.399,407,4.512,408,2.399,409,3.498,410,2.96,411,2.399,415,3.776,416,2.399,417,1.583,442,3.498,446,3.519,448,3.776,482,3.544,593,4.151,598,2.399,599,3.498,601,2.029,605,2.96,609,2.673,610,2.673,611,2.673,612,2.399,613,3.899,614,3.091,615,4.608,616,3.091,617,5.059,618,5.059,619,5.059,620,4.603,621,3.899,622,2.673,623,2.673,624,5.379,625,2.399,626,2.673,627,2.673,628,2.673,629,2.673,630,2.673,631,2.673,632,2.673,633,2.673]],["title/interfaces/RmqModuleOptions.html",[312,1.974,615,2.735]],["body/interfaces/RmqModuleOptions.html",[0,0.205,3,0.124,4,0.109,5,0.109,9,0.224,10,1.322,12,0.26,13,0.016,21,0.223,29,0.406,33,0.124,34,1.85,43,0.01,44,0.01,61,0.453,66,1.148,70,1.198,81,1.699,93,0.727,97,0.758,101,1.252,130,1.497,139,1.66,156,0.824,174,1.228,177,1.502,181,1.75,182,2.482,187,2.734,193,1.75,199,1.85,248,2.254,305,1.101,312,2.883,327,2.482,330,2.883,395,5.572,396,3.696,400,2.651,402,2.093,403,2.651,405,3.76,406,2.651,407,4.411,408,2.651,409,3.76,410,3.181,411,2.651,415,3.995,416,2.651,417,1.75,442,2.651,446,3.615,448,3.438,482,2.734,593,4.347,598,2.651,599,3.76,601,2.243,605,3.181,612,2.651,613,2.955,615,4.589,617,4.191,618,4.191,619,4.869,620,4.869,621,4.191,622,2.955,623,2.955,624,5.594,625,2.651,626,2.955,627,2.955,628,2.955,629,2.955,630,2.955,631,2.955,632,2.955,633,2.955,634,3.416]],["title/controllers/StudentManagementController.html",[112,1.616,635,2.735]],["body/controllers/StudentManagementController.html",[0,0.3,2,0.587,3,0.131,4,0.114,5,0.114,9,0.235,12,0.272,13,0.016,15,1.205,19,0.292,21,0.249,22,0.864,29,0.378,33,0.131,41,1.367,43,0.01,44,0.01,49,1.112,50,1.513,51,1.155,56,0.671,60,0.587,61,0.235,62,0.587,66,1.022,67,1.724,68,2.203,93,0.763,96,1.229,97,0.561,98,1.615,101,1.836,112,2.101,114,1.503,117,2.544,118,2.195,119,3.389,125,4.323,126,3.1,127,3.069,128,1.638,129,2.032,130,1.548,137,2.007,143,2.423,145,2.354,146,4.1,147,4.1,149,2.195,152,1.941,158,1.576,159,1.655,160,2.423,161,3.1,167,1.942,170,2.544,176,1.435,254,2.06,263,1.836,305,1.862,307,3.291,308,1.259,309,2.354,311,3.695,313,3.566,318,2.195,319,3.1,322,3.069,330,1.836,336,3.1,420,3.889,426,3.889,453,4.1,492,2.06,635,4.1,636,3.291,637,5.778,638,3.584,639,5.011,640,5.011,641,3.539,642,3.584,643,2.782,644,2.782,645,3.584,646,3.584]],["title/modules/StudentManagementModule.html",[174,0.632,647,2.735]],["body/modules/StudentManagementModule.html",[0,0.166,2,0.456,3,0.101,4,0.089,5,0.133,13,0.016,21,0.268,22,0.671,24,1.401,25,0.617,26,1.422,29,0.403,31,3.236,33,0.101,43,0.008,44,0.008,61,0.364,80,1.598,93,0.592,114,2.621,135,2.136,142,1.425,143,2.098,149,1.703,152,1.506,158,1.833,160,1.166,174,1.255,176,1.67,177,2.199,178,1.506,179,1.506,180,1.351,181,3.049,182,1.425,186,3.51,187,3.036,189,2.258,190,1.506,191,1.506,192,2.158,193,3.049,194,0.699,195,2.874,196,1.974,197,2.554,198,2.959,199,1.506,200,3.55,204,2.158,205,1.425,209,1.974,210,1.974,211,1.284,212,1.974,213,2.158,263,2.562,271,2.025,305,0.896,308,1.048,309,1.826,311,2.699,320,2.959,325,3.591,337,2.406,344,1.351,366,1.826,384,1.755,396,2.738,397,2.959,402,3.064,407,1.826,440,1.974,446,1.425,447,1.974,449,1.974,453,1.974,524,2.959,531,2.959,535,1.598,542,1.826,593,1.974,605,1.826,625,2.158,635,3.55,636,1.826,641,3.828,647,5.215,648,2.406,649,2.406,650,2.406,651,3.969,652,3.607,653,2.554,654,4.327,655,2.158,656,2.406,657,2.781,658,2.396,659,2.781,660,4.169,661,2.781,662,4.169,663,2.781,664,2.781,665,2.781,666,2.781,667,2.158,668,2.781,669,2.781,670,2.781,671,2.781,672,2.781,673,3.607,674,2.781,675,2.781,676,2.781,677,2.781,678,2.781,679,2.406,680,2.781,681,2.781,682,2.781]],["title/injectables/StudentManagementRepository.html",[45,0.892,325,2.215]],["body/injectables/StudentManagementRepository.html",[0,0.406,3,0.108,4,0.094,5,0.094,7,1.628,9,0.194,12,0.486,13,0.016,19,0.52,21,0.222,24,1.466,25,0.656,26,1.474,29,0.419,33,0.108,37,4.296,41,0.806,43,0.009,44,0.012,45,1.009,46,3.548,47,1.183,49,1.27,50,1.845,51,1.844,52,2.517,53,3.104,54,2.672,55,3.74,56,1.143,58,3.548,60,1.047,61,0.419,62,1.047,63,1.81,64,2.672,66,1.246,67,1.599,68,1.299,69,1.81,70,1.218,72,2.81,73,1.299,74,1.81,75,3.914,77,1.81,78,2.808,79,3.506,80,3.29,81,1.037,82,2.672,83,1.81,85,1.81,86,1.81,87,3.176,89,1.364,90,1.81,91,1.81,93,0.629,97,0.463,128,0.774,155,1.239,156,0.713,158,1.299,194,0.743,217,2.097,218,1.94,220,3.759,221,2.237,222,1.94,223,1.94,224,1.94,225,1.94,226,1.94,227,2.076,229,1.94,233,1.299,305,1.405,308,1.096,325,3.29,344,3.211,417,2.234,456,2.672,571,2.556,604,3.773,636,2.864,653,2.672,655,2.293,683,2.955,684,2.672,685,3.773,686,2.955,687,2.293,688,2.955]],["title/injectables/StudentManagementService.html",[45,0.892,641,2.36]],["body/injectables/StudentManagementService.html",[0,0.361,3,0.142,4,0.124,5,0.124,9,0.255,12,0.295,13,0.016,19,0.431,21,0.236,25,0.863,29,0.41,33,0.142,43,0.011,44,0.011,45,1.226,47,1.557,49,1.176,50,1.579,53,2.574,56,1.129,60,0.637,61,0.255,62,0.637,66,1.081,67,1.775,78,3.508,81,1.859,93,0.827,96,0.827,97,0.608,101,1.424,119,2.87,122,3.895,135,3.583,137,2.122,139,1.888,140,3.046,143,2.222,155,1.63,156,0.937,157,2.234,158,1.709,159,2.447,167,1.306,205,1.991,227,2.415,230,2.758,233,2.33,305,1.707,308,1.515,311,3.146,325,4.424,330,3.089,344,1.888,417,2.714,636,3.96,641,3.967,655,3.016,684,3.246,689,4.584,690,4.584,691,3.887,692,3.887,693,3.887,694,4.584,695,3.887,696,3.887]],["title/controllers/StudyProgramController.html",[112,1.616,697,2.735]],["body/controllers/StudyProgramController.html",[0,0.313,3,0.191,4,0.167,5,0.167,9,0.343,13,0.016,15,1.76,19,0.426,21,0.234,33,0.191,43,0.013,44,0.013,49,1.427,66,1.068,70,1.368,93,1.114,96,1.114,101,1.918,112,2.196,114,2.196,118,3.207,492,3.694,697,4.562,698,4.221,699,4.562,700,4.063,701,4.989,702,6.275,703,5.235,704,4.261,705,3.715,706,5.235,707,4.529,708,5.235]],["title/modules/StudyProgramModule.html",[174,0.632,709,2.735]],["body/modules/StudyProgramModule.html",[0,0.307,3,0.187,4,0.163,5,0.163,13,0.016,21,0.251,33,0.187,43,0.013,44,0.013,93,1.091,114,2.662,174,1.13,176,2.054,177,2.255,178,2.777,179,2.777,180,2.491,181,3.531,182,2.627,189,3.438,190,2.777,191,2.777,193,2.627,492,3.647,697,4.892,698,3.367,699,3.639,704,4.619,705,3.639,709,5.352,710,4.436,711,4.436,712,4.436,713,4.436]],["title/injectables/StudyProgramService.html",[45,0.892,704,2.36]],["body/injectables/StudyProgramService.html",[0,0.329,3,0.2,4,0.175,5,0.175,9,0.36,13,0.016,19,0.448,21,0.2,33,0.2,43,0.013,44,0.013,45,1.532,47,2.202,49,1.47,66,1.122,70,1.409,93,1.17,101,2.014,541,4.267,698,4.349,699,4.7,702,6.381,704,4.057,714,4.267,715,5.499,716,5.499]],["title/classes/Teacher.html",[0,0.231,384,1.352]],["body/classes/Teacher.html",[0,0.424,1,2.783,2,0.729,3,0.162,4,0.142,5,0.142,7,1.649,9,0.292,10,1.583,11,2.55,12,0.441,13,0.016,14,1.957,15,1.949,16,1.957,17,1.957,18,1.866,19,0.472,21,0.211,23,3.333,24,2.298,25,0.988,26,1.649,29,0.413,33,0.211,34,2.41,43,0.012,44,0.012,61,0.448,68,1.957,70,1.234,98,1.434,194,1.118,211,2.678,221,1.63,305,1.434,308,1.458,316,3.134,334,2.557,384,2.487,390,2.055,465,2.726,468,3.552,513,5.017,517,5.017,518,4.501,658,2.557,717,3.454,718,4.45,719,3.454]],["title/classes/Teacher-1.html",[0,0.192,384,1.127,720,2.78]],["body/classes/Teacher-1.html",[0,0.277,1,2.656,2,0.758,3,0.169,4,0.147,5,0.147,7,1.691,9,0.303,10,1.623,11,2.615,12,0.452,13,0.016,14,2.034,15,1.999,16,2.034,17,2.034,18,1.94,19,0.484,21,0.217,23,3.418,24,2.412,25,1.027,26,1.869,29,0.28,33,0.217,43,0.012,44,0.012,61,0.471,70,1.266,98,1.491,194,1.163,211,2.746,221,1.695,316,2.247,355,2.382,384,2.621,390,2.136,451,4.026,465,2.834,468,2.834,563,3.591,658,2.659,719,3.591,721,3.591,722,4.626]],["title/controllers/TeacherController.html",[112,1.616,723,2.735]],["body/controllers/TeacherController.html",[0,0.268,2,0.503,3,0.112,4,0.098,5,0.098,9,0.201,12,0.341,13,0.016,15,1.781,19,0.431,21,0.236,29,0.404,33,0.112,41,1.224,43,0.009,44,0.009,49,0.995,50,1.696,51,1.707,53,1.491,60,0.735,61,0.294,62,0.735,66,1.265,68,1.349,81,1.573,89,2.071,93,0.653,96,0.653,97,0.702,101,1.941,104,1.417,112,1.881,114,1.287,118,1.88,125,3.828,127,2.747,129,2.021,130,1.386,136,1.764,139,2.179,142,2.715,143,1.287,144,3.48,145,2.015,176,1.229,243,2.715,246,2.071,248,2.483,254,2.577,263,1.572,269,2.87,305,1.445,308,1.465,318,1.88,339,2.382,340,4.14,381,4.097,384,2.527,420,2.382,426,2.382,453,3.183,485,3.879,601,2.015,643,3.48,673,2.655,687,3.48,707,2.655,723,3.183,724,2.655,725,5.044,726,4.485,727,4.485,728,5.042,729,2.655,730,3.069,731,5.3,732,5.829,733,3.069,734,4.485,735,3.069,736,4.485,737,6.201,738,5.3,739,3.069,740,4.097,741,4.485,742,2.655,743,2.382,744,3.069,745,3.069,746,3.069,747,3.069,748,3.069,749,3.069,750,3.069,751,3.069,752,3.069,753,3.069,754,3.069,755,3.069,756,3.069,757,3.069]],["title/modules/TeacherModule.html",[174,0.632,651,2.36]],["body/modules/TeacherModule.html",[0,0.226,2,0.619,3,0.138,4,0.12,5,0.12,13,0.016,21,0.271,24,1.747,25,0.838,26,1.074,29,0.387,33,0.138,43,0.01,44,0.01,61,0.389,93,0.804,114,2.814,158,1.661,174,1.1,176,2.687,177,1.661,178,2.046,179,2.046,180,1.835,181,3.552,182,1.935,187,3.368,189,2.815,190,2.046,191,2.046,193,3.278,194,0.949,195,2.987,196,2.681,197,3.183,263,1.935,308,0.949,316,2.886,328,2.932,384,2.354,397,2.681,441,4.033,446,1.935,447,2.681,448,3.688,449,2.681,535,2.171,542,2.481,605,2.481,651,4.596,653,2.314,658,2.987,723,4.216,725,2.681,740,4.247,742,3.268,758,3.268,759,3.778,760,3.268,761,4.247,762,3.778,763,5.197,764,3.778,765,3.268,766,3.778,767,3.778,768,3.778,769,3.778,770,4.496]],["title/injectables/TeacherRepository.html",[45,0.892,761,2.36]],["body/injectables/TeacherRepository.html",[0,0.397,3,0.109,4,0.095,5,0.095,7,1.637,9,0.196,12,0.488,13,0.016,19,0.522,21,0.224,24,1.935,25,0.664,26,1.745,29,0.42,33,0.109,37,4.304,41,0.816,43,0.009,44,0.012,45,1.018,46,3.521,47,1.198,49,0.976,50,1.85,51,1.855,52,2.531,53,3.117,54,2.695,55,3.758,56,1.078,58,3.48,60,1.052,61,0.421,62,1.052,63,1.832,64,2.695,66,1.252,67,1.607,68,1.315,69,1.832,70,1.225,72,2.822,73,1.315,74,1.832,75,3.931,77,1.832,78,2.828,79,3.526,80,3.309,81,1.049,82,2.695,83,1.832,85,1.832,86,1.832,87,3.198,89,1.381,90,1.832,91,1.832,93,0.636,97,0.468,129,0.85,155,1.254,156,0.721,158,1.315,159,2.032,194,0.751,218,1.964,220,3.428,221,2.248,222,1.964,223,1.964,224,1.964,225,1.964,226,1.964,227,2.091,229,1.964,233,1.315,305,1.418,308,1.106,384,2.251,417,2.254,456,2.695,535,1.718,653,2.695,684,2.695,685,3.806,725,3.123,761,3.526,771,2.587,772,3.806,773,2.99,774,2.99]],["title/injectables/TeacherService.html",[45,0.892,740,2.36]],["body/injectables/TeacherService.html",[0,0.332,3,0.121,4,0.106,5,0.106,9,0.218,12,0.361,13,0.016,19,0.451,21,0.233,25,0.737,29,0.414,33,0.121,41,0.906,43,0.01,44,0.01,45,1.098,47,1.329,49,1.053,50,1.742,51,2.061,53,2.306,56,1.037,60,0.778,61,0.311,62,0.778,66,1.233,67,1.894,68,2.087,78,3.274,81,1.665,89,2.191,93,0.706,96,0.706,97,0.743,101,1.216,104,1.533,119,2.571,127,2.033,129,1.35,137,2.421,139,1.612,143,1.99,155,1.392,156,0.8,157,1.907,158,1.459,159,2.191,167,1.116,227,2.219,233,2.087,246,2.191,248,1.901,305,1.529,308,1.519,318,2.033,330,3.408,381,4.367,384,2.636,417,2.431,535,1.907,537,2.576,684,2.907,689,4.105,690,4.105,694,5.23,725,3.368,728,5.533,729,4.105,740,3.703,743,2.576,761,4.66,765,2.871,775,2.871,776,3.319,777,3.319,778,3.319,779,4.746,780,3.319,781,3.319,782,3.319]],["title/controllers/TestProgramController.html",[112,1.616,783,2.735]],["body/controllers/TestProgramController.html",[0,0.323,3,0.115,4,0.101,5,0.101,9,0.208,12,0.349,13,0.016,15,1.814,19,0.439,21,0.229,22,0.764,29,0.326,33,0.115,41,1.473,43,0.009,44,0.009,49,1.019,50,1.846,52,1.393,56,0.593,60,0.752,61,0.301,62,0.752,66,1.336,67,1.715,68,2.018,70,1.149,72,2.97,73,2.602,81,1.61,93,0.674,96,1.149,97,0.845,98,1.021,101,1.682,112,2.264,114,1.329,118,1.941,121,2.812,122,3.401,125,3.544,128,1.999,129,1.786,130,1.828,131,1.941,132,3.563,136,2.638,137,2.623,145,2.081,146,3.831,147,3.831,152,1.716,158,2.018,160,1.329,167,1.814,170,2.249,172,2.459,174,0.752,318,1.941,354,2.081,355,2.37,358,3.671,359,3.547,363,2.741,371,2.741,643,5.083,700,2.459,701,4.593,705,2.249,783,3.258,784,3.886,785,5.083,786,3.169,787,3.169,788,3.169,789,4.59,790,3.169,791,4.59,792,3.306,793,3.169,794,3.169,795,3.169,796,3.169,797,3.169]],["title/modules/TestProgramModule.html",[174,0.632,798,2.735]],["body/modules/TestProgramModule.html",[0,0.215,2,0.587,3,0.131,4,0.114,5,0.114,13,0.016,21,0.281,22,0.864,24,1.684,25,0.795,33,0.131,43,0.01,44,0.01,61,0.379,93,0.763,114,2.423,152,1.941,174,0.947,176,2.314,177,1.576,178,1.941,179,1.941,180,1.741,181,2.96,182,1.836,186,3.695,187,3.198,189,2.714,190,1.941,191,1.941,193,2.567,194,0.901,195,2.88,196,2.544,197,3.069,198,2.544,199,1.941,200,3.556,209,2.544,210,2.544,211,1.655,212,2.544,263,1.836,308,0.901,327,1.836,355,2.007,358,2.807,364,3.556,367,3.92,373,3.1,374,2.782,377,1.836,384,1.257,402,2.195,447,2.544,449,2.544,535,2.06,542,2.354,564,3.556,570,3.556,651,2.195,654,3.1,656,3.1,658,2.88,679,3.1,705,2.544,712,3.1,713,3.1,770,4.998,783,4.1,784,2.354,792,4.178,798,5.429,799,3.1,800,3.584,801,3.1,802,3.584,803,3.584,804,2.782,805,3.584,806,3.584,807,3.584,808,3.584,809,5.011,810,3.584]],["title/injectables/TestProgramRepository.html",[45,0.892,367,2.215]],["body/injectables/TestProgramRepository.html",[0,0.425,3,0.105,4,0.092,5,0.092,7,1.608,9,0.189,12,0.481,13,0.016,19,0.516,21,0.22,25,0.64,26,1.453,29,0.396,33,0.105,37,4.279,41,0.786,43,0.009,44,0.011,45,1.308,46,3.452,47,1.154,49,1.255,50,1.834,51,1.822,52,2.487,53,3.076,54,2.623,55,3.701,56,1.059,58,3.272,60,1.038,61,0.415,62,1.038,63,1.765,64,2.623,66,1.233,67,1.582,68,1.267,69,1.765,70,1.203,72,2.784,73,1.267,74,1.765,75,3.878,77,1.765,78,2.767,79,3.464,80,3.25,81,1.011,82,2.623,83,1.765,85,1.765,86,1.765,87,3.129,89,1.331,90,1.765,91,1.765,93,0.613,97,0.451,129,1.218,130,0.89,143,1.796,159,2.359,162,3.704,194,1.284,218,1.892,220,3.713,221,2.214,222,1.892,223,1.892,224,1.892,225,1.892,226,1.892,227,1.715,229,1.892,271,2.08,305,1.38,327,2.193,328,3.323,355,1.715,367,3.639,377,3.45,451,4.016,456,3.129,584,2.493,653,2.623,684,1.765,687,2.237,772,2.493,784,2.812,804,2.237,811,2.493,812,3.323,813,2.882,814,2.882,815,4.282,816,2.882,817,2.882,818,2.882]],["title/injectables/TestProgramService.html",[45,0.892,792,2.36]],["body/injectables/TestProgramService.html",[0,0.414,3,0.125,4,0.11,5,0.11,9,0.225,12,0.37,13,0.016,19,0.46,21,0.224,25,0.763,29,0.342,33,0.125,43,0.01,44,0.01,45,1.421,47,1.376,49,1.363,50,1.762,52,2.139,56,1.15,60,0.797,61,0.319,62,0.797,66,1.253,67,1.608,70,1.202,72,2.959,73,2.139,81,1.707,93,0.731,96,0.731,97,0.761,101,1.782,121,2.98,122,3.529,128,1.274,129,1.383,131,2.98,134,3.452,135,3.146,136,2.796,137,2.459,139,2.363,140,3.529,143,2.04,156,1.173,159,2.246,167,1.155,227,1.948,233,2.139,254,2.796,264,3.452,271,2.363,305,1.567,327,2.492,355,2.459,358,3.492,367,4.131,374,2.667,377,1.76,456,2.98,653,2.98,684,2.105,701,5.486,714,2.667,784,4.033,785,3.776,792,4.122,804,2.667,819,4.865,820,3.436,821,3.436,822,3.436,823,4.865,824,3.436,825,3.436,826,3.436,827,3.436]],["title/classes/UpdateTeacherDto.html",[0,0.231,828,2.991]],["body/classes/UpdateTeacherDto.html",[0,0.402,2,0.921,3,0.205,4,0.179,5,0.179,7,1.599,13,0.016,21,0.245,28,4.363,33,0.205,43,0.013,44,0.013,51,1.811,308,1.413,381,3.444,383,4.363,743,4.363,828,5.569,829,4.863,830,5.622,831,4.863,832,5.622,833,5.622,834,6.712]],["title/classes/applyClassDto.html",[0,0.231,124,2.531]],["body/classes/applyClassDto.html",[0,0.44,1,2.656,2,0.758,3,0.169,4,0.147,5,0.147,7,1.691,9,0.303,10,1.623,11,2.615,12,0.5,13,0.016,14,2.034,15,1.999,16,2.034,17,2.034,18,1.94,19,0.535,21,0.239,33,0.169,43,0.012,44,0.012,61,0.471,70,1.266,115,2.517,124,3.906,128,1.558,194,1.163,221,1.695,308,1.163,311,3.487,344,3.193,386,3.038,390,2.136,391,3.906,392,3.906,393,2.834,469,4.002,644,4.616,835,4.002,836,4.626,837,5.948,838,4.626]],["title/classes/applyModuleDto.html",[0,0.231,285,2.531]],["body/classes/applyModuleDto.html",[0,0.448,1,2.729,2,0.679,3,0.151,4,0.132,5,0.132,7,1.891,9,0.272,10,1.51,11,2.433,12,0.505,13,0.016,14,1.822,15,1.86,16,1.822,17,1.822,18,1.738,19,0.541,21,0.242,29,0.251,33,0.151,43,0.011,44,0.011,61,0.454,70,1.178,115,1.587,129,1.574,174,1.212,194,1.042,201,3.027,221,1.518,246,2.555,247,3.39,248,2.216,281,2.788,285,3.634,308,1.042,384,2.593,386,2.721,390,1.914,391,3.634,392,3.634,393,2.539,498,4.718,501,3.585,502,3.585,644,4.295,839,3.585,840,4.144,841,4.144,842,4.144]],["title/coverage.html",[843,4.089]],["body/coverage.html",[0,0.455,1,0.841,5,0.07,6,1.901,12,0.167,13,0.016,36,1.901,41,0.6,43,0.007,44,0.007,45,1.586,46,1.068,48,1.901,112,2.384,113,1.56,115,2.625,116,2.834,117,3.062,124,1.443,148,1.346,151,1.346,180,2.596,188,1.263,195,2.819,201,1.068,202,1.56,206,1.346,217,3.062,230,3.062,239,3.267,240,1.901,251,1.706,252,1.901,280,1.346,281,2.875,282,1.901,285,1.443,290,1.706,291,1.901,292,1.263,296,1.346,299,1.126,307,1.443,308,1.836,309,2.284,310,1.901,312,1.126,313,1.19,320,1.56,321,1.901,325,1.263,332,1.443,344,1.068,354,1.443,355,2.812,356,2.699,357,1.901,359,1.19,364,1.56,365,1.901,367,1.263,372,1.443,377,1.126,381,1.346,382,1.901,383,2.699,384,1.22,410,4.174,418,1.56,419,2.834,430,1.346,444,1.56,464,2.699,471,2.699,472,3.222,477,1.706,478,3.222,482,1.068,496,2.699,504,2.699,506,1.706,512,2.699,524,1.56,526,2.699,531,1.56,549,2.699,564,1.56,566,2.699,570,1.56,588,1.901,612,1.706,615,1.56,635,1.56,636,2.834,641,1.346,658,1.999,697,1.56,698,2.834,699,2.468,700,2.699,704,1.346,714,2.699,717,2.699,721,2.699,723,1.56,724,1.901,740,1.346,761,1.346,771,1.901,775,1.901,783,1.56,784,2.834,792,1.346,811,1.901,828,1.706,829,1.901,835,1.901,839,1.901,843,1.706,844,1.901,845,2.198,846,4.315,847,4.315,848,2.198,849,2.198,850,6.642,851,6.642,852,3.008,853,6.51,854,7.09,855,6.642,856,2.198,857,2.198,858,4.917,859,7.571,860,6.356,861,4.244,862,2.198,863,6.356,864,1.901,865,3.478,866,3.478,867,5.345,868,4.906,869,1.901,870,1.901,871,3.478,872,3.478,873,2.198,874,2.198,875,2.198,876,3.733,877,4.906,878,1.901,879,1.901,880,1.901,881,3.478,882,3.478,883,2.198,884,2.198,885,2.198,886,2.198]],["title/classes/createPotentialStudentDto.html",[0,0.231,313,2.087]],["body/classes/createPotentialStudentDto.html",[0,0.418,1,2.539,2,0.539,3,0.12,4,0.105,5,0.105,7,1.712,9,0.216,10,1.286,11,2.073,12,0.484,13,0.016,14,1.446,15,2.142,16,1.446,17,1.446,18,1.379,19,0.519,21,0.172,29,0.199,33,0.12,34,3.784,43,0.009,44,0.009,51,1.519,61,0.448,70,1.571,128,1.933,129,1.712,130,1.457,174,0.773,194,1.385,221,1.205,246,2.177,247,2.887,248,1.888,308,1.601,311,3.586,313,2.553,316,2.29,385,5.603,386,3.096,388,5.207,389,5.207,390,1.518,391,3.619,392,3.619,393,2.014,492,3.925,514,6.154,515,5.512,522,5.207,523,4.272,869,5.512,870,2.844,887,5.511,888,3.288,889,6.02,890,6.02,891,3.288,892,5.511,893,3.288,894,3.288,895,4.714]],["title/classes/createPotentialTestDto.html",[0,0.231,359,2.087]],["body/classes/createPotentialTestDto.html",[0,0.361,1,2.309,2,0.541,3,0.12,4,0.105,5,0.105,7,1.344,9,0.216,10,1.29,11,2.078,12,0.52,13,0.016,14,1.451,15,2.298,16,1.451,17,1.451,18,1.384,19,0.557,21,0.172,29,0.2,33,0.12,43,0.009,44,0.009,61,0.418,70,1.488,81,2.115,128,1.966,130,1.46,174,1.046,194,0.829,211,3.066,221,1.209,246,2.183,324,3.668,355,2.738,358,3.648,359,2.56,386,3.104,390,1.524,391,4.49,392,4.191,393,2.022,498,4.279,523,4.279,550,5.52,551,4.953,552,5.52,553,5.915,556,3.668,558,4.089,559,4.089,879,5.915,880,2.855,896,4.727,897,4.727,898,3.3,899,4.727,900,3.3,901,3.3,902,3.3,903,3.3,904,3.3,905,5.523,906,5.523,907,6.03]],["title/dependencies.html",[177,2.039,812,2.494]],["body/dependencies.html",[0,0.316,13,0.016,22,1.274,25,1.172,26,1.502,28,4.1,43,0.013,44,0.013,93,1.124,177,2.323,199,2.861,393,3.236,397,3.749,601,3.469,603,4.57,831,4.57,908,7.277,909,5.283,910,5.283,911,5.283,912,5.283,913,5.283,914,5.283,915,5.283,916,5.283,917,5.283,918,5.283,919,5.283,920,5.283,921,5.283,922,5.283,923,5.283,924,5.283,925,5.283,926,5.283,927,5.283]],["title/miscellaneous/functions.html",[928,2.281,929,4.011]],["body/miscellaneous/functions.html",[9,0.298,13,0.015,29,0.417,43,0.012,44,0.012,60,1.129,61,0.452,62,1.129,115,1.739,135,3.862,156,1.662,180,3.855,281,1.905,308,1.142,355,1.819,410,3.86,440,4.171,652,5.637,698,2.983,844,5.637,858,5.637,861,6.522,876,5.084,928,3.224,929,3.929,930,7.62,931,5.084,932,6.891,933,6.516,934,5.96,935,4.542,936,4.542,937,5.878]],["title/index.html",[9,0.211,938,3.214,939,3.214]],["body/index.html",[4,0.15,13,0.016,29,0.285,32,3.658,43,0.012,44,0.012,140,2.709,233,2.073,358,2.924,440,4.706,785,4.672,843,3.658,931,4.077,934,4.077,940,4.714,941,4.714,942,6.019,943,4.714,944,4.714,945,4.714,946,4.714,947,4.714,948,4.714,949,4.714,950,4.714,951,7.504,952,4.714,953,4.714,954,7.383,955,4.714,956,6.019,957,4.714,958,4.714,959,4.714,960,4.714,961,4.714,962,4.714,963,4.714,964,6.019,965,6.019,966,4.714,967,4.714,968,4.714,969,4.714,970,4.714,971,4.714,972,4.714,973,4.714,974,4.714,975,4.714,976,4.714,977,4.714,978,4.714,979,4.714,980,4.714,981,4.077,982,4.714,983,4.714,984,4.714,985,4.714,986,4.714,987,4.714,988,4.077]],["title/modules.html",[176,2.11]],["body/modules.html",[13,0.013,32,6.015,43,0.013,44,0.013,175,3.89,176,2.195,186,2.969,187,2.663,436,3.89,647,3.89,651,3.357,709,3.89,798,3.89,989,7.751,990,7.751,991,7.818,992,5.481,993,5.481]],["title/overview.html",[994,4.557]],["body/overview.html",[2,0.634,13,0.016,43,0.011,44,0.011,47,1.55,114,1.623,148,3.685,174,0.634,175,5.298,176,1.55,177,1.701,178,2.096,179,2.096,180,1.88,181,1.982,182,1.982,183,3.347,184,3.347,185,3.347,186,3.783,187,3.627,188,3.457,189,2.862,190,2.096,191,2.096,292,3.457,312,1.982,325,3.457,367,3.457,430,3.685,436,5.298,437,3.347,438,3.347,482,3.473,609,3.347,610,3.347,611,3.347,641,3.685,647,5.391,648,3.347,649,3.347,650,3.347,651,4.521,704,3.685,709,4.588,710,3.347,711,3.347,720,3.347,740,3.685,758,3.347,760,3.347,761,3.685,792,3.685,798,5.298,799,3.347,801,3.347,994,3.347,995,3.87,996,3.87,997,3.87,998,3.87]],["title/properties.html",[10,1.265,812,2.494]],["body/properties.html",[10,1.645,13,0.016,29,0.365,43,0.014,44,0.014,981,5.215,988,5.215,999,6.029,1000,6.029,1001,6.029]],["title/miscellaneous/variables.html",[667,3.599,928,2.281]],["body/miscellaneous/variables.html",[9,0.282,12,0.513,13,0.016,18,3.193,24,2.135,26,1.806,43,0.011,44,0.011,70,1.437,115,2.174,135,3.594,157,2.476,195,4.285,202,4.029,281,2.381,299,2.206,308,1.596,334,2.476,355,2.543,377,2.206,384,1.511,413,6.639,444,4.029,451,3.89,464,3.343,470,3.726,496,3.343,503,3.726,512,3.343,524,4.029,525,3.726,549,3.343,563,4.406,564,4.029,565,3.726,658,3.88,667,3.343,717,3.343,719,4.406,721,3.343,852,4.911,864,3.726,878,3.726,928,3.057,1002,6.351,1003,4.308,1004,4.308,1005,4.308,1006,4.308,1007,4.308,1008,5.678,1009,4.308,1010,4.308,1011,4.308,1012,4.308]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1000,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":720,"title":{"classes/Teacher-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":997,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":753,"title":{},"body":{"controllers/TeacherController.html":{}}}],["29",{"_index":998,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["4.1.13",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":996,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["7.0.12",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":995,"title":{},"body":{"overview.html":{}}}],["80",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstract",{"_index":452,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["abstract.schema",{"_index":94,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractdocument:19",{"_index":390,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractrepository",{"_index":46,"title":{"injectables/AbstractRepository.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["abstractrepository:14",{"_index":222,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:25",{"_index":225,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:40",{"_index":224,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:50",{"_index":226,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:59",{"_index":223,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["access",{"_index":328,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/TeacherModule.html":{},"injectables/TestProgramRepository.html":{}}}],["accessing",{"_index":406,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["added",{"_index":579,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["address",{"_index":889,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["allows",{"_index":767,"title":{},"body":{"modules/TeacherModule.html":{}}}],["amazing",{"_index":971,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":550,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["api",{"_index":936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":934,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/common",{"_index":194,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["application",{"_index":135,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application_service",{"_index":195,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmodel",{"_index":220,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["applications",{"_index":140,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["applied",{"_index":518,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/Teacher.html":{}}}],["apply",{"_index":837,"title":{},"body":{"classes/applyClassDto.html":{}}}],["applyclassdto",{"_index":124,"title":{"classes/applyClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["applyforstudy",{"_index":637,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(@body",{"_index":645,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(data",{"_index":638,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applying",{"_index":644,"title":{},"body":{"controllers/StudentManagementController.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{}}}],["applymoduledto",{"_index":285,"title":{"classes/applyModuleDto.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["apps/.../main.ts",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../potentialclass.schema.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialmodule.schema.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialstudent.schema.ts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialtest.schema.ts",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../service.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../teacher.schema.ts",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/class",{"_index":115,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/module",{"_index":281,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/student",{"_index":308,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/study",{"_index":698,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/test",{"_index":355,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":81,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["associated",{"_index":498,"title":{},"body":{"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{}}}],["async",{"_index":50,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["asynchronously",{"_index":403,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["author",{"_index":981,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":993,"title":{},"body":{"modules.html":{}}}],["await",{"_index":104,"title":{},"body":{"injectables/AbstractRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["backers",{"_index":972,"title":{},"body":{"index.html":{}}}],["base",{"_index":30,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["basic",{"_index":818,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["being",{"_index":474,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["bootstrap",{"_index":180,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":991,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":989,"title":{},"body":{"modules.html":{}}}],["building",{"_index":943,"title":{},"body":{"index.html":{}}}],["bus",{"_index":161,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/StudentManagementController.html":{}}}],["business",{"_index":458,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["call",{"_index":687,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramRepository.html":{}}}],["calls",{"_index":694,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["care",{"_index":817,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["case",{"_index":416,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["change",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["classmanagement",{"_index":273,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["classmanagementcontroller",{"_index":113,"title":{"controllers/ClassManagementController.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"coverage.html":{}}}],["classmanagementmodule",{"_index":175,"title":{"modules/ClassManagementModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["classmanagementrepository",{"_index":188,"title":{"injectables/ClassManagementRepository.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["classmanagementservice",{"_index":148,"title":{"injectables/ClassManagementService.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":593,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["clientproxy",{"_index":591,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["clients",{"_index":626,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule",{"_index":620,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":628,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_classmanagementmodule",{"_index":183,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_imports",{"_index":184,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_providers",{"_index":185,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule",{"_index":437,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule_imports",{"_index":439,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["cluster_modulemanagementmodule_providers",{"_index":438,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":609,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":610,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":611,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule",{"_index":648,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_imports",{"_index":649,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_providers",{"_index":650,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule",{"_index":710,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule_providers",{"_index":711,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":758,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":759,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":760,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule",{"_index":799,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule_imports",{"_index":800,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["cluster_testprogrammodule_providers",{"_index":801,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["collection",{"_index":769,"title":{},"body":{"modules/TeacherModule.html":{}}}],["command",{"_index":160,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{}}}],["commandbus",{"_index":146,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandhandler",{"_index":266,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["commandhandler(createpotentialclasscommand",{"_index":267,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["commandhandler(createpotentialmodulecommand",{"_index":298,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["commandhandler(createpotentialstudentcommand",{"_index":338,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["commandhandler(createpotentialtestcommand",{"_index":375,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["commands",{"_index":163,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["commands/create",{"_index":152,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["committing",{"_index":277,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["common",{"_index":454,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["communication",{"_index":768,"title":{},"body":{"modules/TeacherModule.html":{}}}],["complete",{"_index":510,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["completion",{"_index":335,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["configmodule",{"_index":198,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configmodule.forroot",{"_index":209,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configservice",{"_index":395,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('mongodb_uri",{"_index":414,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":632,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":633,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":407,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["configure",{"_index":402,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configures",{"_index":652,"title":{},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{}}}],["configureswagger",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configureswagger(app",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":396,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["connecting",{"_index":398,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":397,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"dependencies.html":{}}}],["console.log(\"triggered",{"_index":268,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["console.log('message",{"_index":757,"title":{},"body":{"controllers/TeacherController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{}}}],["constant",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants/service",{"_index":443,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["constants/services",{"_index":196,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["constructor(@injectmodel(potentialclass.name",{"_index":228,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["constructor(@injectmodel(potentialmodule.name",{"_index":457,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["constructor(@injectmodel(potentialstudent.name",{"_index":686,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["constructor(@injectmodel(potentialtest.name",{"_index":814,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["constructor(@injectmodel(teacher.name",{"_index":774,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["constructor(applicationmodel",{"_index":218,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(classmanagementrepository",{"_index":231,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["constructor(clientproxy",{"_index":590,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["constructor(createpotentialclassdto",{"_index":244,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["constructor(createpotentialmoduledto",{"_index":284,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["constructor(createpotentialstudentdto",{"_index":314,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["constructor(createpotentialtestdto",{"_index":360,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(model",{"_index":57,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(modulemanagementrepository",{"_index":459,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["constructor(potentialclass",{"_index":481,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["constructor(potentialmodule",{"_index":507,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["constructor(private",{"_index":707,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{}}}],["constructor(protected",{"_index":95,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(public",{"_index":250,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(publisher",{"_index":255,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["constructor(studentmanagementrepository",{"_index":691,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["constructor(teacher",{"_index":532,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["constructor(teacherrepository",{"_index":776,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(testprogramrepository",{"_index":820,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["constructs",{"_index":155,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["contact",{"_index":545,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["containing",{"_index":89,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["context",{"_index":276,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{}}}],["controller",{"_index":112,"title":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["controller('class",{"_index":154,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["controller('module",{"_index":431,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["controller('student",{"_index":642,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["controller('study",{"_index":706,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["controller('teachers",{"_index":750,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('test",{"_index":793,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["controllers",{"_index":114,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["convert",{"_index":539,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["corresponding",{"_index":324,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["coverage",{"_index":843,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":31,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["cqrsmodule",{"_index":200,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["create",{"_index":51,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["create(@body",{"_index":751,"title":{},"body":{"controllers/TeacherController.html":{}}}],["create(createteacherdto",{"_index":729,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(document",{"_index":63,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["created",{"_index":68,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{}}}],["createddocument",{"_index":99,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createddocument.save",{"_index":102,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createpotentialclasscommand",{"_index":151,"title":{"classes/CreatePotentialClassCommand.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclasscommand(data",{"_index":169,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclasscommandhandler",{"_index":251,"title":{"classes/CreatePotentialClassCommandHandler.html":{}},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclassdto",{"_index":120,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["createpotentialclassdto(@body",{"_index":168,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclassdto(data",{"_index":123,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialmodulecommand",{"_index":280,"title":{"classes/CreatePotentialModuleCommand.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["createpotentialmodulecommand(data",{"_index":433,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmodulecommandhandler",{"_index":290,"title":{"classes/CreatePotentialModuleCommandHandler.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["createpotentialmoduledto",{"_index":283,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["createpotentialmoduledto(@body",{"_index":432,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmoduledto(data",{"_index":424,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialstudentcommand",{"_index":307,"title":{"classes/CreatePotentialStudentCommand.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["createpotentialstudentcommand(data",{"_index":646,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["createpotentialstudentcommandhandler",{"_index":320,"title":{"classes/CreatePotentialStudentCommandHandler.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["createpotentialstudentdto",{"_index":313,"title":{"classes/createPotentialStudentDto.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["createpotentialstudentdto.email",{"_index":546,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.name",{"_index":543,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.phonenumber",{"_index":547,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.study",{"_index":544,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialtestcommand",{"_index":354,"title":{"classes/CreatePotentialTestCommand.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["createpotentialtestcommand(data",{"_index":796,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestcommandhandler",{"_index":364,"title":{"classes/CreatePotentialTestCommandHandler.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["createpotentialtestdto",{"_index":359,"title":{"classes/createPotentialTestDto.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["createpotentialtestdto(@body",{"_index":795,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto(data",{"_index":786,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto.duration",{"_index":583,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.ec",{"_index":586,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.module",{"_index":580,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.name",{"_index":582,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["creates",{"_index":127,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["createteacherdto",{"_index":381,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["creating",{"_index":130,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["creation",{"_index":421,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["credits",{"_index":559,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["crud",{"_index":772,"title":{},"body":{"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["ctx",{"_index":747,"title":{},"body":{"controllers/TeacherController.html":{}}}],["data",{"_index":129,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["database",{"_index":271,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"modules/StudentManagementModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["databasemodule",{"_index":186,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["declarations",{"_index":179,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["decorator",{"_index":684,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":832,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["defines",{"_index":726,"title":{},"body":{"controllers/TeacherController.html":{}}}],["defining",{"_index":623,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["definition",{"_index":563,"title":{},"body":{"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":52,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["delete(':id",{"_index":132,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["delete(id",{"_index":69,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["deleteapplicationbyid",{"_index":121,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleteapplicationbyid(@param('id",{"_index":172,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["deleteapplicationbyid(id",{"_index":131,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleted",{"_index":73,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["deletes",{"_index":134,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramService.html":{}}}],["deleting",{"_index":789,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["deletion",{"_index":423,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["dependencies",{"_index":177,"title":{"dependencies.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":953,"title":{},"body":{"index.html":{}}}],["document",{"_index":37,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["document).exec",{"_index":110,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["documentation",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":78,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["dto",{"_index":246,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["dto/applyclass.dto",{"_index":150,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{}}}],["dto/applymodule.dto",{"_index":289,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{}}}],["dto/create",{"_index":318,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["duration",{"_index":551,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["dynamically",{"_index":617,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["dynamicmodule",{"_index":619,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e2e",{"_index":961,"title":{},"body":{"index.html":{}}}],["each",{"_index":907,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["ec",{"_index":552,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["ecs",{"_index":587,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["educational",{"_index":558,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["efficient",{"_index":944,"title":{},"body":{"index.html":{}}}],["email",{"_index":514,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["emits",{"_index":597,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["emitted",{"_index":528,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["empty",{"_index":389,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["enables",{"_index":674,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["encapsulates",{"_index":682,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["endpoint",{"_index":643,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["endpoints",{"_index":144,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TeacherController.html":{}}}],["entity",{"_index":451,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"injectables/TestProgramRepository.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":668,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["envfilepath",{"_index":212,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["environment",{"_index":666,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["event",{"_index":164,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["event.commit",{"_index":279,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["event.publish(event",{"_index":353,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["event/potentialclass",{"_index":207,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["eventbus",{"_index":147,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["eventpublisher",{"_index":256,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events",{"_index":166,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events/potentialmodule",{"_index":297,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["events/potentialstudent",{"_index":337,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{}}}],["events/potentialtest",{"_index":373,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{}}}],["eventshandler",{"_index":488,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["eventshandler(potentialclassregisteredevent",{"_index":489,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["eventshandler(potentialmoduleregisteredevent",{"_index":511,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["eventshandler(potentialstudentregisteredevent",{"_index":536,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventshandler(potentialtestregisteredevent",{"_index":577,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["everyone",{"_index":578,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["execute",{"_index":254,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramService.html":{}}}],["execute(@payload",{"_index":756,"title":{},"body":{"controllers/TeacherController.html":{}}}],["execute(command",{"_index":259,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["execute(data",{"_index":733,"title":{},"body":{"controllers/TeacherController.html":{}}}],["executes",{"_index":261,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executing",{"_index":162,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/TestProgramRepository.html":{}}}],["execution",{"_index":265,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["exports",{"_index":182,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["express",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":833,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["external",{"_index":802,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["extract",{"_index":343,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["factory",{"_index":409,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["feature",{"_index":441,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/TeacherModule.html":{}}}],["features",{"_index":680,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["field",{"_index":895,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["fields",{"_index":90,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["files",{"_index":661,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["filter",{"_index":79,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["filterquery",{"_index":75,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find",{"_index":53,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["find(filterquery",{"_index":74,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findall",{"_index":728,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["finding",{"_index":727,"title":{},"body":{"controllers/TeacherController.html":{}}}],["findone",{"_index":54,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findone(filterquery",{"_index":83,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["forrootasync",{"_index":401,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["found",{"_index":82,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["framework",{"_index":942,"title":{},"body":{"index.html":{}}}],["function",{"_index":410,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":660,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["functions",{"_index":929,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":618,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["getapplications",{"_index":122,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["gethello",{"_index":702,"title":{},"body":{"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{}}}],["getting",{"_index":938,"title":{"index.html":{}},"body":{}}],["give",{"_index":585,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["given",{"_index":766,"title":{},"body":{"modules/TeacherModule.html":{}}}],["global",{"_index":663,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["graph",{"_index":992,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":968,"title":{},"body":{"index.html":{}}}],["handle",{"_index":480,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handle(event",{"_index":486,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handled",{"_index":333,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handler",{"_index":269,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["handlers",{"_index":352,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["handles",{"_index":322,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{}}}],["handling",{"_index":142,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["hello",{"_index":541,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudyProgramService.html":{}}}],["here",{"_index":978,"title":{},"body":{"index.html":{}}}],["host/rmq.context",{"_index":746,"title":{},"body":{"controllers/TeacherController.html":{}}}],["http",{"_index":420,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["https://nestjs.com",{"_index":985,"title":{},"body":{"index.html":{}}}],["icommand",{"_index":242,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{}}}],["icommandhandler",{"_index":253,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["identifier",{"_index":36,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["ievent",{"_index":527,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["ieventhandler",{"_index":479,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["implementing",{"_index":672,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["implements",{"_index":241,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["imported",{"_index":662,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["importing",{"_index":442,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["imports",{"_index":193,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["included",{"_index":809,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":341,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["indicating",{"_index":567,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["information",{"_index":572,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["inherited",{"_index":221,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["inherits",{"_index":513,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["initializes",{"_index":287,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["inject",{"_index":415,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject('rabbitmq_client",{"_index":606,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"overview.html":{}}}],["injected",{"_index":456,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel",{"_index":227,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel(potentialclass.name",{"_index":236,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["injectmodel(potentialmodule.name",{"_index":461,"title":{},"body":{"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["injectmodel(potentialstudent.name",{"_index":695,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["injectmodel(potentialtest.name",{"_index":825,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["injectmodel(teacher.name",{"_index":537,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TeacherService.html":{}}}],["injects",{"_index":417,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["installation",{"_index":950,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":952,"title":{},"body":{"index.html":{}}}],["instance",{"_index":156,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["integrating",{"_index":677,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["interact",{"_index":819,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["interacting",{"_index":604,"title":{},"body":{"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{}}}],["interacts",{"_index":689,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["interface",{"_index":312,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":634,"title":{},"body":{"interfaces/RmqModuleOptions.html":{}}}],["isarray",{"_index":905,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isarray()@isstring({each",{"_index":896,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isemail",{"_index":887,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isglobal",{"_index":210,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["isnotempty",{"_index":391,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isnumber",{"_index":906,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isnumber()@isnotempty",{"_index":899,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isphonenumber",{"_index":892,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isstring",{"_index":392,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isstring()@isnotempty",{"_index":386,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["it's",{"_index":581,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["join",{"_index":974,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":982,"title":{},"body":{"index.html":{}}}],["lastvaluefrom",{"_index":602,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["lastvaluefrom(this.clientproxy.emit(queue",{"_index":608,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["legend",{"_index":178,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":48,"title":{},"body":{"injectables/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":65,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:25",{"_index":84,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:40",{"_index":76,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:50",{"_index":88,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:59",{"_index":71,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:6",{"_index":59,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:19",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":394,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts",{"_index":612,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts:31",{"_index":616,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts",{"_index":588,"title":{},"body":{"injectables/RabbitmqService.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:11",{"_index":592,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:31",{"_index":596,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["license",{"_index":988,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":965,"title":{},"body":{"index.html":{}}}],["list",{"_index":141,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["loads",{"_index":665,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["log",{"_index":339,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["logic",{"_index":370,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementService.html":{}}}],["logs",{"_index":736,"title":{},"body":{"controllers/TeacherController.html":{}}}],["made",{"_index":494,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["management",{"_index":119,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["management.controller",{"_index":204,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.controller.ts",{"_index":117,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:24",{"_index":425,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:29",{"_index":126,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/StudentManagementController.html":{}}}],["management.controller.ts:34",{"_index":428,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:39",{"_index":138,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:44",{"_index":427,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:49",{"_index":133,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.module.ts",{"_index":192,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.repository",{"_index":205,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{}}}],["management.repository.ts",{"_index":217,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["management.repository.ts:11",{"_index":219,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["management.repository.ts:12",{"_index":455,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["management.repository.ts:14",{"_index":683,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["management.service",{"_index":149,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{}}}],["management.service.ts",{"_index":230,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management.service.ts:10",{"_index":232,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:13",{"_index":692,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management.service.ts:24",{"_index":235,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:31",{"_index":693,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management.service.ts:33",{"_index":234,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management/.env",{"_index":213,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management/src/class",{"_index":116,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{}}}],["management/src/commands/create",{"_index":239,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["management/src/constants/service.ts",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/constants/services.ts",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/dto/applyclass.dto.ts",{"_index":835,"title":{},"body":{"classes/applyClassDto.html":{},"coverage.html":{}}}],["management/src/dto/applyclass.dto.ts:15",{"_index":836,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applyclass.dto.ts:20",{"_index":838,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applymodule.dto.ts",{"_index":839,"title":{},"body":{"classes/applyModuleDto.html":{},"coverage.html":{}}}],["management/src/dto/applymodule.dto.ts:16",{"_index":841,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:21",{"_index":842,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:26",{"_index":840,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/create",{"_index":869,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["management/src/event/potentialclass",{"_index":471,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialmodule",{"_index":504,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialstudent",{"_index":526,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/main.ts",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["management/src/module",{"_index":419,"title":{},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{}}}],["management/src/schemas/potentialclass.schema",{"_index":502,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/potentialclass.schema.ts",{"_index":464,"title":{},"body":{"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialclass.schema.ts:11",{"_index":467,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialclass.schema.ts:8",{"_index":466,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialmodule.schema.ts",{"_index":496,"title":{},"body":{"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:15",{"_index":499,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:21",{"_index":500,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:27",{"_index":497,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialstudent.schema",{"_index":469,"title":{},"body":{"classes/PotentialClass.html":{},"classes/applyClassDto.html":{}}}],["management/src/schemas/potentialstudent.schema.ts",{"_index":512,"title":{},"body":{"classes/PotentialStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:16",{"_index":519,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:23",{"_index":521,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:30",{"_index":520,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:37",{"_index":516,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/teacher.schema",{"_index":501,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/teacher.schema.ts",{"_index":717,"title":{},"body":{"classes/Teacher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/teacher.schema.ts:16",{"_index":718,"title":{},"body":{"classes/Teacher.html":{}}}],["management/src/student",{"_index":636,"title":{},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management/src/teacher/dto/create",{"_index":382,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/dto/update",{"_index":829,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts",{"_index":724,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts:23",{"_index":730,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:37",{"_index":739,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:48",{"_index":735,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.module",{"_index":806,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["management/src/teacher/teacher.module.ts",{"_index":762,"title":{},"body":{"modules/TeacherModule.html":{}}}],["management/src/teacher/teacher.repository.ts",{"_index":771,"title":{},"body":{"injectables/TeacherRepository.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.repository.ts:14",{"_index":773,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["management/src/teacher/teacher.service.ts",{"_index":775,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.service.ts:14",{"_index":777,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:33",{"_index":778,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:43",{"_index":780,"title":{},"body":{"injectables/TeacherService.html":{}}}],["manager",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":158,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["merge",{"_index":347,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["merging",{"_index":275,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["message",{"_index":340,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TeacherController.html":{}}}],["messagepattern",{"_index":748,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messagepattern('teacher_notifications",{"_index":734,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messages",{"_index":573,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["metadata",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":330,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["methods",{"_index":49,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["microservice",{"_index":605,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{}}}],["minutes",{"_index":556,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["miscellaneous",{"_index":928,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":964,"title":{},"body":{"index.html":{}}}],["mode",{"_index":956,"title":{},"body":{"index.html":{}}}],["model",{"_index":58,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["models",{"_index":678,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["module",{"_index":174,"title":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["modulemanagement",{"_index":302,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["modulemanagementcontroller",{"_index":418,"title":{"controllers/ModuleManagementController.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["modulemanagementmodule",{"_index":436,"title":{"modules/ModuleManagementModule.html":{}},"body":{"modules/ModuleManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["modulemanagementrepository",{"_index":292,"title":{"injectables/ModuleManagementRepository.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modulemanagementservice",{"_index":430,"title":{"injectables/ModuleManagementService.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":176,"title":{"modules.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":399,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodb_uri",{"_index":412,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":42,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["mongoosemodule",{"_index":197,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature",{"_index":449,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":215,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":404,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":977,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":77,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["myśliwiec",{"_index":983,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":493,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["necessary",{"_index":263,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["nest",{"_index":440,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nest.js",{"_index":937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestframework",{"_index":987,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":93,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":199,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":831,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":601,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"dependencies.html":{}}}],["nestjs/microservices/ctx",{"_index":745,"title":{},"body":{"controllers/TeacherController.html":{}}}],["nestjs/mongoose",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["node.js",{"_index":941,"title":{},"body":{"index.html":{}}}],["non",{"_index":388,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["notfoundexception",{"_index":92,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":107,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notification",{"_index":491,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["notifications",{"_index":485,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["npm",{"_index":951,"title":{},"body":{"index.html":{}}}],["number",{"_index":523,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["objectid",{"_index":39,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["objects",{"_index":741,"title":{},"body":{"controllers/TeacherController.html":{}}}],["open",{"_index":966,"title":{},"body":{"index.html":{}}}],["operation",{"_index":823,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["operations",{"_index":159,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["option",{"_index":669,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":624,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["over",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":994,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":812,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/TestProgramRepository.html":{}}}],["packages",{"_index":803,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":815,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["partial",{"_index":87,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["partialtype",{"_index":830,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createteacherdto",{"_index":834,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["pass",{"_index":688,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["passed",{"_index":685,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{}}}],["passes",{"_index":779,"title":{},"body":{"injectables/TeacherService.html":{}}}],["passing",{"_index":584,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["pattern",{"_index":673,"title":{},"body":{"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["patterns",{"_index":749,"title":{},"body":{"controllers/TeacherController.html":{}}}],["payload",{"_index":738,"title":{},"body":{"controllers/TeacherController.html":{}}}],["perform",{"_index":690,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["performs",{"_index":262,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["phone",{"_index":522,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["phonenumber",{"_index":515,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["please",{"_index":975,"title":{},"body":{"index.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["potential",{"_index":128,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialclass",{"_index":201,"title":{"classes/PotentialClass.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["potentialclass.command",{"_index":153,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts",{"_index":252,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["potentialclass.command.handler.ts:10",{"_index":257,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts:26",{"_index":260,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.ts",{"_index":240,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"coverage.html":{}}}],["potentialclass.command.ts:12",{"_index":249,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.command.ts:7",{"_index":245,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.name",{"_index":216,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["potentialclassregisteredevent",{"_index":206,"title":{"classes/PotentialClassRegisteredEvent.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassregisteredevent(potentialclass",{"_index":274,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclassregisteredeventhandler",{"_index":477,"title":{"classes/PotentialClassRegisteredEventHandler.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassschema",{"_index":202,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule",{"_index":299,"title":{"classes/PotentialModule.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule.command",{"_index":295,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{}}}],["potentialmodule.command.handler.ts",{"_index":291,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["potentialmodule.command.handler.ts:10",{"_index":293,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.handler.ts:22",{"_index":294,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.ts",{"_index":282,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"coverage.html":{}}}],["potentialmodule.command.ts:12",{"_index":288,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.command.ts:7",{"_index":286,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.name",{"_index":450,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["potentialmoduleregisteredevent",{"_index":296,"title":{"classes/PotentialModuleRegisteredEvent.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleregisteredevent(potentialmodule",{"_index":303,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmoduleregisteredeventhandler",{"_index":506,"title":{"classes/PotentialModuleRegisteredEventHandler.html":{}},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleschema",{"_index":444,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialstudent",{"_index":344,"title":{"classes/PotentialStudent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["potentialstudent.command",{"_index":336,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.command.handler",{"_index":657,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent.command.handler.ts",{"_index":321,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["potentialstudent.command.handler.ts:12",{"_index":326,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.handler.ts:30",{"_index":329,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.ts",{"_index":310,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"coverage.html":{}}}],["potentialstudent.command.ts:15",{"_index":317,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.command.ts:9",{"_index":315,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.dto",{"_index":319,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.dto.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:17",{"_index":891,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:24",{"_index":888,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:32",{"_index":894,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:39",{"_index":893,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.name",{"_index":681,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent/create",{"_index":309,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent",{"_index":332,"title":{"classes/PotentialStudentRegisteredEvent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent(potentialstudent",{"_index":346,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentregisteredeventhandler",{"_index":531,"title":{"classes/PotentialStudentRegisteredEventHandler.html":{}},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentschema",{"_index":524,"title":{},"body":{"classes/PotentialStudent.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest",{"_index":377,"title":{"classes/PotentialTest.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest.command",{"_index":371,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.command.handler",{"_index":805,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtest.command.handler.ts",{"_index":365,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["potentialtest.command.handler.ts:10",{"_index":368,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.handler.ts:27",{"_index":369,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.ts",{"_index":357,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"coverage.html":{}}}],["potentialtest.command.ts:12",{"_index":362,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.command.ts:7",{"_index":361,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.dto",{"_index":363,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.dto.ts",{"_index":880,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:13",{"_index":902,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:20",{"_index":903,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:27",{"_index":900,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:34",{"_index":901,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:42",{"_index":904,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:50",{"_index":898,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.name",{"_index":808,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtestregisteredevent",{"_index":372,"title":{"classes/PotentialTestRegisteredEvent.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialtestregisteredevent(potentialtest",{"_index":379,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtestregisteredeventhandler",{"_index":570,"title":{"classes/PotentialTestRegisteredEventHandler.html":{}},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["potentialtestschema",{"_index":564,"title":{},"body":{"classes/PotentialTest.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":118,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["process",{"_index":576,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["processes",{"_index":538,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["production",{"_index":958,"title":{},"body":{"index.html":{}}}],["program",{"_index":701,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["program.controller",{"_index":713,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.controller.ts",{"_index":700,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["program.controller.ts:24",{"_index":788,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:34",{"_index":787,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:44",{"_index":790,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:9",{"_index":703,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["program.module.ts",{"_index":712,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.repository",{"_index":374,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{}}}],["program.repository.ts",{"_index":811,"title":{},"body":{"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["program.repository.ts:14",{"_index":813,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["program.service",{"_index":705,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["program.service.ts",{"_index":714,"title":{},"body":{"injectables/StudyProgramService.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["program.service.ts:12",{"_index":821,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:27",{"_index":824,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:36",{"_index":822,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:5",{"_index":715,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["program/.env",{"_index":807,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["program/src/commands/create",{"_index":356,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["program/src/constants/services.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/dto/create",{"_index":879,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["program/src/events/potentialtest",{"_index":566,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["program/src/main.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["program/src/schemas/potentialtest.schema.ts",{"_index":549,"title":{},"body":{"classes/PotentialTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/potentialtest.schema.ts:13",{"_index":560,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:19",{"_index":561,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:25",{"_index":555,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:31",{"_index":557,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:37",{"_index":562,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:43",{"_index":554,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/teacher.schema.ts",{"_index":721,"title":{},"body":{"classes/Teacher-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/teacher.schema.ts:13",{"_index":722,"title":{},"body":{"classes/Teacher-1.html":{}}}],["program/src/study",{"_index":699,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{}}}],["program/src/test",{"_index":784,"title":{},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["programs",{"_index":376,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["progressive",{"_index":940,"title":{},"body":{"index.html":{}}}],["project",{"_index":967,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({required",{"_index":465,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({type",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"properties.html":{}}}],["property",{"_index":34,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/createPotentialStudentDto.html":{}}}],["provided",{"_index":453,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["providers",{"_index":181,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["provides",{"_index":653,"title":{},"body":{"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["proxy",{"_index":594,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["public",{"_index":243,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{}}}],["publish",{"_index":304,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publisher",{"_index":258,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publishes",{"_index":323,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["publishing",{"_index":165,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["query",{"_index":80,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["questions",{"_index":553,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["queue",{"_index":599,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq",{"_index":446,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{}}}],["rabbitmq.service",{"_index":622,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq_client",{"_index":629,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmqservice",{"_index":482,"title":{"injectables/RabbitmqService.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":976,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":96,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["received",{"_index":737,"title":{},"body":{"controllers/TeacherController.html":{}}}],["receives",{"_index":639,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["reflect",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":448,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["register(undefined",{"_index":614,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":627,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registered",{"_index":351,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event",{"_index":208,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler",{"_index":656,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["registered.event.handler.ts",{"_index":478,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["registered.event.handler.ts:12",{"_index":508,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:13",{"_index":483,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:14",{"_index":533,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:23",{"_index":509,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:24",{"_index":534,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:28",{"_index":487,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:30",{"_index":575,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.ts",{"_index":472,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"coverage.html":{}}}],["registered.event.ts:11",{"_index":569,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:12",{"_index":475,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:14",{"_index":530,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registered.event.ts:6",{"_index":568,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:7",{"_index":473,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:9",{"_index":529,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registers",{"_index":625,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["registration",{"_index":505,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["related",{"_index":143,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["repositories",{"_index":810,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["repository",{"_index":233,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["represented",{"_index":38,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["representing",{"_index":334,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":385,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/createPotentialStudentDto.html":{}}}],["request",{"_index":640,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["requests",{"_index":426,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["required",{"_index":316,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"classes/createPotentialStudentDto.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["resolves",{"_index":137,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["response",{"_index":731,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsibility",{"_index":675,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["responsible",{"_index":366,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{}}}],["result",{"_index":264,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/TestProgramService.html":{}}}],["results",{"_index":43,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":422,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["retrieve",{"_index":429,"title":{},"body":{"controllers/ModuleManagementController.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["retrieves",{"_index":139,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{}}}],["retrieving",{"_index":791,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["rmqcontext",{"_index":744,"title":{},"body":{"controllers/TeacherController.html":{}}}],["rmqmodule",{"_index":187,"title":{"modules/RmqModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":447,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["rmqmodule.register({name",{"_index":214,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["rmqmoduleoptions",{"_index":615,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["run",{"_index":954,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":603,"title":{},"body":{"injectables/RabbitmqService.html":{},"dependencies.html":{}}}],["saved",{"_index":301,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["saves",{"_index":331,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["saving",{"_index":270,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["scalable",{"_index":945,"title":{},"body":{"index.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":468,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["schemafactory.createforclass(potentialclass",{"_index":470,"title":{},"body":{"classes/PotentialClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialmodule",{"_index":503,"title":{},"body":{"classes/PotentialModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialstudent",{"_index":525,"title":{},"body":{"classes/PotentialStudent.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialtest",{"_index":565,"title":{},"body":{"classes/PotentialTest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teacher",{"_index":719,"title":{},"body":{"classes/Teacher.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":679,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["schemas/potentialclass.schema",{"_index":203,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["schemas/potentialmodule.schema",{"_index":445,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["schemas/potentialstudent.schema",{"_index":655,"title":{},"body":{"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{}}}],["schemas/potentialtest.schema",{"_index":804,"title":{},"body":{"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["schemas/teacher.schema",{"_index":535,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{}}}],["schematypes",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":40,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["scope",{"_index":664,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["segregation",{"_index":676,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["send",{"_index":490,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["sending",{"_index":484,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["sendmessage",{"_index":589,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sendmessage(queue",{"_index":595,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sends",{"_index":607,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sent",{"_index":600,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["server",{"_index":946,"title":{},"body":{"index.html":{}}}],["service",{"_index":157,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":654,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["setting",{"_index":670,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["side",{"_index":947,"title":{},"body":{"index.html":{}}}],["single",{"_index":85,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["specified",{"_index":598,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["specifies",{"_index":763,"title":{},"body":{"modules/TeacherModule.html":{}}}],["specify",{"_index":770,"title":{},"body":{"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["sponsors",{"_index":970,"title":{},"body":{"index.html":{}}}],["start",{"_index":931,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":957,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":959,"title":{},"body":{"index.html":{}}}],["started",{"_index":939,"title":{"index.html":{}},"body":{}}],["starter",{"_index":949,"title":{},"body":{"index.html":{}}}],["statements",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":613,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["status",{"_index":732,"title":{},"body":{"controllers/TeacherController.html":{}}}],["stay",{"_index":979,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":311,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["studentmanagementcontroller",{"_index":635,"title":{"controllers/StudentManagementController.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["studentmanagementmodule",{"_index":647,"title":{"modules/StudentManagementModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["studentmanagementrepository",{"_index":325,"title":{"injectables/StudentManagementRepository.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["studentmanagementservice",{"_index":641,"title":{"injectables/StudentManagementService.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["students",{"_index":571,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{}}}],["study",{"_index":492,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"classes/createPotentialStudentDto.html":{}}}],["studyprogramcontroller",{"_index":697,"title":{"controllers/StudyProgramController.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"coverage.html":{}}}],["studyprogrammodule",{"_index":709,"title":{"modules/StudyProgramModule.html":{}},"body":{"modules/StudyProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["studyprogramservice",{"_index":704,"title":{"injectables/StudyProgramService.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":460,"title":{},"body":{"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{}}}],["super",{"_index":476,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["super(applicationmodel",{"_index":229,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["support",{"_index":32,"title":{},"body":{"classes/AbstractDocument.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":990,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":816,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["tdocument",{"_index":64,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["teacher",{"_index":384,"title":{"classes/Teacher.html":{},"classes/Teacher-1.html":{}},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacher.controller",{"_index":764,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":743,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":383,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:17",{"_index":387,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.name",{"_index":542,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["teacher.repository",{"_index":765,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["teacher.service",{"_index":742,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":659,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["teacher_notifications",{"_index":755,"title":{},"body":{"controllers/TeacherController.html":{}}}],["teachercontroller",{"_index":723,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":651,"title":{"modules/TeacherModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":761,"title":{"injectables/TeacherRepository.html":{}},"body":{"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["teachers",{"_index":725,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["teacherschema",{"_index":658,"title":{},"body":{"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacherservice",{"_index":740,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":358,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":963,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":962,"title":{},"body":{"index.html":{}}}],["testprogramcontroller",{"_index":783,"title":{"controllers/TestProgramController.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["testprogrammodule",{"_index":798,"title":{"modules/TestProgramModule.html":{}},"body":{"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["testprogramrepository",{"_index":367,"title":{"injectables/TestProgramRepository.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["testprogramservice",{"_index":792,"title":{"injectables/TestProgramService.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":785,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["thanks",{"_index":969,"title":{},"body":{"index.html":{}}}],["this.classmanagementrepository.create(createpotentialclassdto",{"_index":272,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.classmanagementrepository.delete(id",{"_index":238,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.find",{"_index":237,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementservice.deleteapplicationbyid(id",{"_index":173,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.classmanagementservice.getapplications",{"_index":171,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.commandbus.execute(command",{"_index":170,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["this.model(document",{"_index":100,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.find(filterquery).exec",{"_index":108,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidanddelete(id).exec",{"_index":111,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":109,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findone(filterquery).exec",{"_index":105,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.modulemanagementrepository.create(createpotentialmoduledto",{"_index":300,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.modulemanagementrepository.delete(id",{"_index":463,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.find",{"_index":462,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementservice.deleteapplicationbyid(id",{"_index":435,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.modulemanagementservice.getapplications",{"_index":434,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.publisher.mergeobjectcontext(classmanagement",{"_index":278,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(modulemanagement",{"_index":306,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(student",{"_index":349,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(test",{"_index":380,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.rabbitmqservice.sendmessage('study",{"_index":495,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["this.rabbitmqservice.sendmessage('teacher_notifications",{"_index":548,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.studentmanagementrepository.create(createpotentialstudentdto",{"_index":345,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.studentmanagementrepository.find",{"_index":696,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["this.studyprogramservice.gethello",{"_index":708,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["this.teacher.findone({}).exec()).toobject",{"_index":540,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.teacherrepository.create(createteacherdto",{"_index":781,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.find",{"_index":782,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":752,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":754,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.testprogramrepository.create(createpotentialtestdto",{"_index":378,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.testprogramrepository.delete(id",{"_index":827,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramrepository.find",{"_index":826,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramservice.deleteapplicationbyid(id",{"_index":794,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["this.testprogramservice.getapplications",{"_index":797,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["throw",{"_index":106,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["throws",{"_index":103,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["time",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":980,"title":{},"body":{"index.html":{}}}],["track",{"_index":348,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["transfer",{"_index":247,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["transport",{"_index":621,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":630,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["trigger",{"_index":350,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["triggered",{"_index":342,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["true",{"_index":211,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TestProgramModule.html":{},"classes/createPotentialTestDto.html":{}}}],["true})@isnotempty({each",{"_index":897,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["twitter",{"_index":986,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["typescript",{"_index":948,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["unique",{"_index":35,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unit",{"_index":960,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["unlicensed",{"_index":1001,"title":{},"body":{"properties.html":{}}}],["up",{"_index":671,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["update",{"_index":55,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["update(id",{"_index":86,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updated",{"_index":91,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updateteacherdto",{"_index":828,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["uri",{"_index":411,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["urls",{"_index":631,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["used",{"_index":327,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["usefactory",{"_index":405,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["uses",{"_index":400,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["using",{"_index":305,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["valid",{"_index":890,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["validation",{"_index":517,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["validator",{"_index":393,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["value",{"_index":413,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":408,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["variable",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":999,"title":{},"body":{"properties.html":{}}}],["via",{"_index":574,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["watch",{"_index":955,"title":{},"body":{"index.html":{}}}],["website",{"_index":984,"title":{},"body":{"index.html":{}}}],["world",{"_index":716,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["you'd",{"_index":973,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Prop, Schema } from \"@nestjs/mongoose\";\nimport mongoose, { SchemaTypes, Types } from \"mongoose\";\n\n/**\n * @class AbstractDocument\n * @extends AggregateRoot\n * @description Base class for Mongoose schema with CQRS support.\n */\n@Schema()\nexport class AbstractDocument extends AggregateRoot {\n    /**\n     * @property {_id}\n     * @type {Types.ObjectId}\n     * @description Unique identifier for the document, represented by a Mongoose ObjectId.\n     */\n    @Prop({ type: SchemaTypes.ObjectId, default: () => new mongoose.Types.ObjectId()})\n    _id: Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractRepository.html":{"url":"injectables/AbstractRepository.html","title":"injectable - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:14\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:59\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:40\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:25\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:50\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractDocument } from './abstract.schema';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class AbstractRepository {\n  constructor(protected readonly model: Model) {}\n\n  /**\n   * Create a new document.\n   * @param document The document to create.\n   * @returns The created document.\n   */\n  async create(document: TDocument): Promise {\n    const createdDocument = new this.model(document);\n    return createdDocument.save();\n  }\n\n  /**\n   * Find a single document matching the filter query.\n   * @param filterQuery The filter query to find the document.\n   * @returns The found document.\n   * @throws NotFoundException if the document is not found.\n   */\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery).exec();\n\n    if (!document) {\n      throw new NotFoundException('Document not found');\n    }\n\n    return document;\n  }\n\n  /**\n   * Find multiple documents matching the filter query.\n   * @param filterQuery The filter query to find the documents.\n   * @returns An array of found documents.\n   */\n  async find(filterQuery: FilterQuery): Promise {\n    return this.model.find(filterQuery).exec();\n  }\n\n  /**\n   * Update a document by its ID.\n   * @param id The ID of the document to update.\n   * @param document The partial document containing the fields to update.\n   * @returns The updated document.\n   */\n  async update(id: string, document: Partial): Promise {\n    return this.model.findByIdAndUpdate(id, document).exec();\n  }\n\n  /**\n   * Delete a document by its ID.\n   * @param id The ID of the document to delete.\n   * @returns The deleted document.\n   */\n  async delete(id: string): Promise {\n    return this.model.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassManagementController.html":{"url":"controllers/ClassManagementController.html","title":"controller - ClassManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialClassDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialClassDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialClassDto(data: applyClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:29\n                \n            \n\n\n            \n                \n                    Creates a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:49\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:39\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * Controller for handling class management related endpoints.\n */\nimport { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ClassManagementService } from './class-management.service';\nimport { applyClassDto } from './dto/applyClass.dto';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\n\n@Controller('class-management')\nexport class ClassManagementController {\n    /**\n     * Constructs an instance of ClassManagementController.\n     * @param classManagementService The service for managing class operations.\n     * @param commandBus The command bus for executing commands.\n     * @param eventBus The event bus for publishing events.\n     */\n    constructor(\n        private readonly classManagementService: ClassManagementService,\n        private readonly commandBus: CommandBus,\n        private readonly eventBus: EventBus\n    ) {}\n\n    /**\n     * Creates a potential class.\n     * @param data The data for creating the potential class.\n     */\n    @Post()\n    async createPotentialClassDto(@Body() data: applyClassDto) {\n        const command = new CreatePotentialClassCommand(data);\n        this.commandBus.execute(command);\n    }\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    @Get()\n    async getApplications() {\n        return this.classManagementService.getApplications();\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    @Delete(':id')\n    async deleteApplicationById(@Param('id') id: string) {\n        return this.classManagementService.deleteApplicationById(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassManagementModule.html":{"url":"modules/ClassManagementModule.html","title":"module - ClassManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/class-management/src/class-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassManagementRepository\n                        \n                        \n                            ClassManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialClass, PotentialClassSchema } from './schemas/potentialClass.schema';\nimport { ClassManagementController } from './class-management.controller';\nimport { ClassManagementService } from './class-management.service';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\nimport { PotentialClassRegisteredEvent } from './event/potentialClass-registered.event';\n\n\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n    envFilePath: './apps/class-management/.env'\n  }), RmqModule.register({name: APPLICATION_SERVICE}), DatabaseModule, CqrsModule, MongooseModule.forFeature([{name: PotentialClass.name, schema: PotentialClassSchema}])],\n  controllers: [ClassManagementController],\n  providers: [ClassManagementService, ClassManagementRepository, PotentialClassRegisteredEvent, CreatePotentialClassCommand],\n})\nexport class ClassManagementModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementRepository.html":{"url":"injectables/ClassManagementRepository.html","title":"injectable - ClassManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for the PotentialClass schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialClass } from \"./schemas/potentialClass.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n@Injectable()\nexport class ClassManagementRepository extends AbstractRepository {\n    /**\n     * Constructs an instance of ClassManagementRepository.\n     * @param applicationModel The Mongoose model for the PotentialClass schema.\n     */\n    constructor(@InjectModel(PotentialClass.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementService.html":{"url":"injectables/ClassManagementService.html","title":"injectable - ClassManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for class management related data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from './schemas/potentialClass.schema';\nimport { ClassManagementRepository } from './class-management.repository';\n\n@Injectable()\nexport class ClassManagementService {\n    /**\n     * Constructs an instance of ClassManagementService.\n     * @param classManagementRepository The repository for class management related data.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name)\n        private readonly classManagementRepository: ClassManagementRepository,\n    ) {}\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    async getApplications() {\n        return this.classManagementRepository.find({});\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    async deleteApplicationById(id: string) {\n        return this.classManagementRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommand.html":{"url":"classes/CreatePotentialClassCommand.html","title":"class - CreatePotentialClassCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: applyClassDto)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        applyClassDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) containing the data for creating the potential class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyClassDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) containing the data for creating the potential class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyClassDto } from \"../dto/applyClass.dto\";\n\nexport class CreatePotentialClassCommand implements ICommand {\n    /**\n     * Constructs an instance of CreatePotentialClassCommand.\n     * @param createPotentialClassDto The DTO (Data Transfer Object) containing the data for creating the potential class.\n     */\n    constructor(public readonly createPotentialClassDto: applyClassDto) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommandHandler.html":{"url":"classes/CreatePotentialClassCommandHandler.html","title":"class - CreatePotentialClassCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommandHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The event publisher for publishing events.\n\n                                                        \n                                                \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for managing classes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialClassCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:26\n                \n            \n\n\n            \n                \n                    Executes the CreatePotentialClassCommand and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialClassCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialClassCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialClassCommand } from \"./create-potentialClass.command\";\nimport { ClassManagementRepository } from \"../class-management.repository\";\nimport { PotentialClassRegisteredEvent } from \"../event/potentialClass-registered.event\";\n\n@CommandHandler(CreatePotentialClassCommand)\nexport class CreatePotentialClassCommandHandler implements ICommandHandler {\n    /**\n     * Constructs an instance of CreatePotentialClassCommandHandler.\n     * @param publisher The event publisher for publishing events.\n     * @param classManagementRepository The repository for managing classes.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private classManagementRepository: ClassManagementRepository\n    ) {}\n\n    /**\n     * Executes the CreatePotentialClassCommand and performs the necessary operations.\n     * @param command The CreatePotentialClassCommand instance.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialClassCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialClassDto } = command;\n\n        // Saving potential class into the database\n        const potentialClass = await this.classManagementRepository.create(createPotentialClassDto);\n\n        // Creating a PotentialClassRegisteredEvent\n        const classManagement = new PotentialClassRegisteredEvent(potentialClass);\n\n        // Merging the event with the event context and committing it\n        const event = this.publisher.mergeObjectContext(classManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommand.html":{"url":"classes/CreatePotentialModuleCommand.html","title":"class - CreatePotentialModuleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command for creating a potential module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: applyModuleDto)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the CreatePotentialModuleCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        applyModuleDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating a potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyModuleDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating a potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyModuleDto } from \"../dto/applyModule.dto\";\n\n/**\n * Command for creating a potential module.\n */\nexport class CreatePotentialModuleCommand implements ICommand {\n    /**\n     * Initializes a new instance of the CreatePotentialModuleCommand class.\n     * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating a potential module.\n     */\n    constructor(public readonly createPotentialModuleDto: applyModuleDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommandHandler.html":{"url":"classes/CreatePotentialModuleCommandHandler.html","title":"class - CreatePotentialModuleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for creating potential modules.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialModuleCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:22\n                \n            \n\n\n            \n                \n                    Executes the create potential module command.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialModuleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The create potential module command.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialModuleCommand } from \"./create-potentialModule.command\";\nimport { ModuleManagementRepository } from \"../module-management.repository\";\nimport { PotentialModuleRegisteredEvent } from \"../events/potentialModule-registered.event\"\n\n/**\n * Command handler for creating potential modules.\n */\n@CommandHandler(CreatePotentialModuleCommand)\nexport class CreatePotentialModuleCommandHandler implements ICommandHandler {\n\n    constructor(\n        private readonly publisher: EventPublisher,\n        private moduleManagementRepository: ModuleManagementRepository\n    ) {}\n\n    /**\n     * Executes the create potential module command.\n     * @param command The create potential module command.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialModuleCommand): Promise {\n        console.log(\"Triggered Command Handler\")\n\n        const { createPotentialModuleDto } = command;\n\n        // Saving potential module into the database\n        const potentialModule = await this.moduleManagementRepository.create(createPotentialModuleDto);\n        \n        // Create a PotentialModuleRegisteredEvent with the saved potential module\n        const moduleManagement = new PotentialModuleRegisteredEvent(potentialModule);\n\n        // Publish the event using the EventPublisher\n        const event = this.publisher.mergeObjectContext(moduleManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommand.html":{"url":"classes/CreatePotentialStudentCommand.html","title":"class - CreatePotentialStudentCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential student.\nImplements the ICommand interface from the @nestjs/cqrs module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: createPotentialStudentDto)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        createPotentialStudentDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data required to create a potential student.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialStudentDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:15\n                        \n                    \n\n            \n                \n                    - The data required to create a potential student.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from '../../dto/create-potentialStudent.dto';\n\n/**\n * Command class for creating a potential student.\n * Implements the ICommand interface from the @nestjs/cqrs module.\n */\nexport class CreatePotentialStudentCommand implements ICommand {\n  /**\n   * Constructor for the CreatePotentialStudentCommand class.\n   * @param createPotentialStudentDto - The data required to create a potential student.\n   */\n  constructor(\n    public readonly createPotentialStudentDto: createPotentialStudentDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommandHandler.html":{"url":"classes/CreatePotentialStudentCommandHandler.html","title":"class - CreatePotentialStudentCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for CreatePotentialStudentCommand.\nThis class handles the command to create a potential student and publishes the corresponding event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommandHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe EventPublisher instance used to publish events.\n\n\n                                                        \n                                                \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe StudentManagementRepository instance used to access the database.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialStudentCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:30\n                \n            \n\n\n            \n                \n                    Execute method that handles the CreatePotentialStudentCommand.\nIt saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialStudentCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe CreatePotentialStudentCommand to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialStudentCommand } from \"./create-potentialStudent.command\";\nimport { PotentialStudentRegisteredEvent } from \"../../events/potentialStudent-registered.event\";\nimport { StudentManagementRepository } from \"../../student-management.repository\";\n\n/**\n * Command handler for CreatePotentialStudentCommand.\n * This class handles the command to create a potential student and publishes the corresponding event.\n */\n@CommandHandler(CreatePotentialStudentCommand)\nexport class CreatePotentialStudentCommandHandler implements ICommandHandler {\n\n    /**\n     * Constructor for the CreatePotentialStudentCommandHandler class.\n     * @param publisher - The EventPublisher instance used to publish events.\n     * @param studentManagementRepository - The StudentManagementRepository instance used to access the database.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private studentManagementRepository: StudentManagementRepository\n    ) {}\n\n    /**\n     * Execute method that handles the CreatePotentialStudentCommand.\n     * It saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n     * @param command - The CreatePotentialStudentCommand to be handled.\n     * @returns A Promise representing the completion of the execution.\n     */\n    async execute(command: CreatePotentialStudentCommand): Promise {\n        // Log a message to indicate that the command handler has been triggered\n        console.log(\"Triggered Command Handler\")\n\n        // Extract the createPotentialStudentDto from the command\n        const { createPotentialStudentDto } = command;\n\n        // Saving the potential student data into the database\n        const potentialStudent = await this.studentManagementRepository.create(createPotentialStudentDto);\n\n        // Creating a new PotentialStudentRegisteredEvent with the potentialStudent data\n        const student = new PotentialStudentRegisteredEvent(potentialStudent);\n\n        // Merge the event with the EventPublisher context to track its operations\n        const event = this.publisher.mergeObjectContext(student);\n\n        // Publish the event to trigger any registered event handlers for this event\n        event.publish(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommand.html":{"url":"classes/CreatePotentialTestCommand.html","title":"class - CreatePotentialTestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential test.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: createPotentialTestDto)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreatePotentialTestCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        createPotentialTestDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for creating a potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialTestDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for creating a potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { createPotentialTestDto } from \"../dto/create-potentialTest.dto\";\n\n/**\n * Command class for creating a potential test.\n */\nexport class CreatePotentialTestCommand implements ICommand {\n    /**\n     * Creates an instance of CreatePotentialTestCommand.\n     * @param createPotentialTestDto The DTO object containing the data for creating a potential test.\n     */\n    constructor(public readonly createPotentialTestDto: createPotentialTestDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommandHandler.html":{"url":"classes/CreatePotentialTestCommandHandler.html","title":"class - CreatePotentialTestCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler class responsible for handling the CreatePotentialTestCommand.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialTestCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the command handler logic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialTestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialTestCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the command execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialTestCommand } from \"./create-potentialTest.command\";\nimport { PotentialTestRegisteredEvent } from \"../events/potentialTest-registered.event\";\nimport { TestProgramRepository } from \"../test-program.repository\";\n\n/**\n * Command handler class responsible for handling the CreatePotentialTestCommand.\n */\n@CommandHandler(CreatePotentialTestCommand)\nexport class CreatePotentialTestCommandHandler implements ICommandHandler {\n    constructor(\n        /**\n         * The event publisher used to publish events.\n         */\n        private readonly publisher: EventPublisher,\n        /**\n         * The repository for managing test programs.\n         */\n        private testProgramRepository: TestProgramRepository\n    ) {}\n\n    /**\n     * Executes the command handler logic.\n     * @param command The CreatePotentialTestCommand instance.\n     * @returns A promise that resolves to the result of the command execution.\n     */\n    async execute(command: CreatePotentialTestCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialTestDto } = command;\n\n        // Saving the test into the database\n        const potentialTest = await this.testProgramRepository.create(createPotentialTestDto);\n        const test = new PotentialTestRegisteredEvent(potentialTest);\n\n        const event = this.publisher.mergeObjectContext(test);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/create-teacher.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) class for creating a teacher.\nExtends the AbstractDocument class from the \"@app/common\" module.\nThis class represents the data required to create a teacher.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/teacher/dto/create-teacher.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name property represents the name of the teacher.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * Data Transfer Object (DTO) class for creating a teacher.\n * Extends the AbstractDocument class from the \"@app/common\" module.\n * This class represents the data required to create a teacher.\n */\nexport class CreateTeacherDto extends AbstractDocument {\n  /**\n   * The name property represents the name of the teacher.\n   * It must be a non-empty string.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Import necessary dependencies\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * @module DatabaseModule\n * @description Module for configuring the database connection using Mongoose.\n */\n@Module({\n  imports: [\n    /**\n     * @module MongooseModule\n     * @description Mongoose module for connecting to the MongoDB database.\n     * It uses the `forRootAsync` method to configure the connection asynchronously.\n     */\n    MongooseModule.forRootAsync({\n      /**\n       * @method useFactory\n       * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n       * @returns {Object} - The Mongoose connection configuration object.\n       * @description Factory function for creating the Mongoose connection configuration object.\n       * It retrieves the MongoDB URI from the `MONGODB_URI` configuration value using the ConfigService.\n       */\n      useFactory: (configService: ConfigService) => ({\n          uri: configService.get('MONGODB_URI')\n      }),\n      /**\n       * @property {Array} inject\n       * @description An array of dependencies to inject into the factory function.\n       * In this case, it injects the ConfigService.\n       */\n      inject: [ConfigService]\n    })\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModuleManagementController.html":{"url":"controllers/ModuleManagementController.html","title":"controller - ModuleManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModuleManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module-management\n            \n\n\n            \n                Description\n            \n            \n                Controller for module management related HTTP endpoints.\nResponsible for handling module creation, retrieval, and deletion.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialModuleDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialModuleDto(data: applyModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:24\n                \n            \n\n\n            \n                \n                    Handles HTTP POST requests to create a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating a potential module.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:44\n                \n            \n\n\n            \n                \n                    Handles HTTP DELETE requests to delete an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:34\n                \n            \n\n\n            \n                \n                    Handles HTTP GET requests to retrieve all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ModuleManagementService } from './module-management.service';\nimport { applyModuleDto } from './dto/applyModule.dto';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Controller for module management related HTTP endpoints.\n * Responsible for handling module creation, retrieval, and deletion.\n */\n@Controller('module-management')\nexport class ModuleManagementController {\n  constructor(\n    private readonly moduleManagementService: ModuleManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus\n  ) {}\n\n  /**\n   * Handles HTTP POST requests to create a potential module.\n   * @param data The data for creating a potential module.\n   */\n  @Post()\n  async createPotentialModuleDto(@Body() data: applyModuleDto) {\n    const command = new CreatePotentialModuleCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Handles HTTP GET requests to retrieve all applications.\n   * @returns A promise that resolves to the applications.\n   */\n  @Get()\n  async getApplications() {\n    return this.moduleManagementService.getApplications();\n  }\n\n  /**\n   * Handles HTTP DELETE requests to delete an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is deleted.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.moduleManagementService.deleteApplicationById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModuleManagementModule.html":{"url":"modules/ModuleManagementModule.html","title":"module - ModuleManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModuleManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_ModuleManagementModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/module-management/src/module-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Nest module for managing the module management feature.\nResponsible for importing dependencies, configuring providers, and controllers.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModuleManagementRepository\n                        \n                        \n                            ModuleManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModuleManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialModule, PotentialModuleSchema } from './schemas/potentialModule.schema';\nimport { ModuleManagementService } from './module-management.service';\nimport { ModuleManagementController } from './module-management.controller';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { PotentialModuleRegisteredEvent } from './events/potentialModule-registered.event';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Nest module for managing the module management feature.\n * Responsible for importing dependencies, configuring providers, and controllers.\n */\n@Module({\n  imports: [\n    // Import configuration module\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/module-management/.env'\n    }),\n\n    // Import RabbitMQ module\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import database module\n    DatabaseModule,\n\n    // Import CQRS module\n    CqrsModule,\n\n    // Import Mongoose module and register potential module schema\n    MongooseModule.forFeature([{ name: PotentialModule.name, schema: PotentialModuleSchema }])\n  ],\n  controllers: [ModuleManagementController],\n  providers: [\n    // Configure module management service and repository\n    ModuleManagementService,\n    ModuleManagementRepository,\n\n    // Configure event and command handlers\n    PotentialModuleRegisteredEvent,\n    CreatePotentialModuleCommand\n  ],\n})\nexport class ModuleManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementRepository.html":{"url":"injectables/ModuleManagementRepository.html","title":"injectable - ModuleManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repository class for handling database operations related to the PotentialModule entity.\nExtends the abstract repository class provided by the common module.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.repository.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the ModuleManagementRepository instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected Mongoose model for the PotentialModule schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialModule } from \"./schemas/potentialModule.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Repository class for handling database operations related to the `PotentialModule` entity.\n * Extends the abstract repository class provided by the common module.\n */\n@Injectable()\nexport class ModuleManagementRepository extends AbstractRepository {\n    /**\n     * Constructs the `ModuleManagementRepository` instance.\n     * @param applicationModel The injected Mongoose model for the `PotentialModule` schema.\n     */\n    constructor(@InjectModel(PotentialModule.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementService.html":{"url":"injectables/ModuleManagementService.html","title":"injectable - ModuleManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for handling business logic related to the module management feature.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is successfully deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to an array of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialModule } from './schemas/potentialModule.schema';\nimport { ModuleManagementRepository } from './module-management.repository';\n\n/**\n * Service class for handling business logic related to the module management feature.\n */\n@Injectable()\nexport class ModuleManagementService {\n  constructor(\n    /**\n     * Injects the module management repository.\n     * @param moduleManagementRepository The injected module management repository.\n     */\n    @InjectModel(PotentialModule.name)\n    private readonly moduleManagementRepository: ModuleManagementRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications.\n   * @returns A promise that resolves to an array of applications.\n   */\n  async getApplications() {\n    return this.moduleManagementRepository.find({});\n  }\n\n  /**\n   * Deletes an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is successfully deleted.\n   */\n  async deleteApplicationById(id: string) {\n    return this.moduleManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClass.html":{"url":"classes/PotentialClass.html","title":"class - PotentialClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/schemas/potentialClass.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { PotentialStudent } from 'apps/student-management/src/schemas/potentialStudent.schema';\n\n@Schema()\nexport class PotentialClass extends AbstractDocument {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  student: PotentialStudent;\n\n}\n\nexport const PotentialClassSchema = SchemaFactory.createForClass(PotentialClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEvent.html":{"url":"classes/PotentialClassRegisteredEvent.html","title":"class - PotentialClassRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data related to the potential class being registered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The data related to the potential class being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\nexport class PotentialClassRegisteredEvent extends AggregateRoot {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEvent.\n     * @param createPotentialClassDto The data related to the potential class being registered.\n     */\n    constructor(public readonly createPotentialClassDto: any) {\n        super();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEventHandler.html":{"url":"classes/PotentialClassRegisteredEventHandler.html","title":"class - PotentialClassRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialClass: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEventHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        potentialClass\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for PotentialClass.\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The RabbitmqService for sending notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialClassRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:28\n                \n            \n\n\n            \n                \n                    Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialClassRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialClassRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialClassRegisteredEvent } from './potentialClass-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from '../schemas/potentialClass.schema';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialClassRegisteredEvent)\nexport class PotentialClassRegisteredEventHandler implements IEventHandler {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEventHandler.\n     * @param potentialClass The Mongoose model for PotentialClass.\n     * @param rabbitmqService The RabbitmqService for sending notifications.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name) private readonly potentialClass: Model,\n        private readonly rabbitmqService: RabbitmqService\n    ) {}\n\n    /**\n     * Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n     * @param event The PotentialClassRegisteredEvent instance.\n     */\n    async handle(event: PotentialClassRegisteredEvent): Promise {\n        // Send a notification to the study using RabbitMQ\n        const message = `A new class named: ${PotentialClass.name} has been made`;\n\n        await this.rabbitmqService.sendMessage('study-notification', message);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModule.html":{"url":"classes/PotentialModule.html","title":"class - PotentialModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/schemas/potentialModule.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialModule entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:27\n                        \n                    \n\n            \n                \n                    Class associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:15\n                        \n                    \n\n            \n                \n                    Name of the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { Teacher } from 'apps/student-management/src/schemas/teacher.schema';\nimport { PotentialClass } from 'apps/class-management/src/schemas/potentialClass.schema';\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\n@Schema()\nexport class PotentialModule extends AbstractDocument {\n  /**\n   * Name of the potential module.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * Teacher associated with the potential module.\n   */\n  @Prop({ required: true })\n  teacher: Teacher;\n\n  /**\n   * Class associated with the potential module.\n   */\n  @Prop({ required: true})\n  class: PotentialClass;\n}\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\nexport const PotentialModuleSchema = SchemaFactory.createForClass(PotentialModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEvent.html":{"url":"classes/PotentialModuleRegisteredEvent.html","title":"class - PotentialModuleRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event representing the registration of a potential module.\nExtends the AggregateRoot class.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PotentialModuleRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating the potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating the potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event representing the registration of a potential module.\n * Extends the AggregateRoot class.\n */\nexport class PotentialModuleRegisteredEvent extends AggregateRoot {\n  /**\n   * Initializes a new instance of the PotentialModuleRegisteredEvent class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating the potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEventHandler.html":{"url":"classes/PotentialModuleRegisteredEventHandler.html","title":"class - PotentialModuleRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialModuleRegisteredEvent.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialModule: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialModule\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialModuleRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:23\n                \n            \n\n\n            \n                \n                    Handles the PotentialModuleRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialModuleRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialModuleRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves when the event handling is complete.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialModuleRegisteredEvent } from './potentialModule-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PotentialModule } from '../schemas/potentialModule.schema';\n\n/**\n * Event handler for the PotentialModuleRegisteredEvent.\n */\n@EventsHandler(PotentialModuleRegisteredEvent)\nexport class PotentialModuleRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(PotentialModule.name) private readonly potentialModule: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialModuleRegisteredEvent.\n   * @param event The PotentialModuleRegisteredEvent instance.\n   * @returns A promise that resolves when the event handling is complete.\n   */\n  async handle(event: PotentialModuleRegisteredEvent): Promise {\n    const message = `A new module named: ${PotentialModule.name} has been made`;\n    await this.rabbitmqService.sendMessage('study-notification', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudent.html":{"url":"classes/PotentialStudent.html","title":"class - PotentialStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/potentialStudent.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:37\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:30\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:23\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * @description Mongoose schema for the PotentialStudent class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class PotentialStudent extends AbstractDocument {\n  /**\n   * @description Property representing the name of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * @description Property representing the study of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  study: string;\n\n  /**\n   * @description Property representing the phone number of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  phoneNumber: string;\n\n  /**\n   * @description Property representing the email of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  email: string;\n}\n\n/**\n * @description Mongoose schema for the PotentialStudent class created using SchemaFactory.\n */\nexport const PotentialStudentSchema = SchemaFactory.createForClass(PotentialStudent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEvent.html":{"url":"classes/PotentialStudentRegisteredEvent.html","title":"class - PotentialStudentRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for representing the registration of a potential student.\nExtends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\nThis class represents an event that is emitted when a potential student is registered.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialStudentRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data representing the potential student being registered.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:14\n                        \n                    \n\n            \n                \n                    - The data representing the potential student being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot, IEvent } from '@nestjs/cqrs';\n\n/**\n * Event class for representing the registration of a potential student.\n * Extends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\n * This class represents an event that is emitted when a potential student is registered.\n */\nexport class PotentialStudentRegisteredEvent extends AggregateRoot implements IEvent {\n  /**\n   * Constructor for the PotentialStudentRegisteredEvent class.\n   * @param createPotentialStudentDto - The data representing the potential student being registered.\n   */\n  constructor(public readonly createPotentialStudentDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEventHandler.html":{"url":"classes/PotentialStudentRegisteredEventHandler.html","title":"class - PotentialStudentRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Implements the IEventHandler interface for the event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialStudentRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialStudentRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialStudentRegisteredEvent object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEvent } from './potentialStudent-registered.event';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RabbitmqService } from '@app/common';\nimport { Teacher } from '../schemas/teacher.schema';\n\n/**\n * @description Event handler for the PotentialStudentRegisteredEvent.\n * Implements the IEventHandler interface for the event.\n */\n@EventsHandler(PotentialStudentRegisteredEvent)\nexport class PotentialStudentRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * @description Handle method that processes the PotentialStudentRegisteredEvent.\n   * @param event The PotentialStudentRegisteredEvent object.\n   */\n  async handle(event: PotentialStudentRegisteredEvent): Promise {\n    // Log a message to indicate that the event handler has been triggered\n    console.log(\"Triggered event handler\")\n\n    // Find a teacher and convert it to an object\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n\n    // Extract the createPotentialStudentDto from the event\n    const { createPotentialStudentDto } = event;\n\n    // Create a notification message for the teacher\n    const message = `Hello ${teacher.name}, ${createPotentialStudentDto.name} has applied for the study ${createPotentialStudentDto.study}. Contact: ${createPotentialStudentDto.email}, ${createPotentialStudentDto.phoneNumber}`;\n\n    // Send the notification message to the teacher using RabbitMQ\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTest.html":{"url":"classes/PotentialTest.html","title":"class - PotentialTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/potentialTest.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialTest entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answers\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                ec\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:43\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:25\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:31\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:19\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:37\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * Mongoose schema for the PotentialTest entity.\n */\n@Schema()\nexport class PotentialTest extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @Prop({ required: true })\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @Prop({ required: true })\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @Prop({ required: true })\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  answers: string[];\n}\n\n/**\n * Mongoose schema definition for the PotentialTest entity.\n */\nexport const PotentialTestSchema = SchemaFactory.createForClass(PotentialTest);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEvent.html":{"url":"classes/PotentialTestRegisteredEvent.html","title":"class - PotentialTestRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for indicating the registration of a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of PotentialTestRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for the registered potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:11\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for the registered potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event class for indicating the registration of a potential test.\n */\nexport class PotentialTestRegisteredEvent extends AggregateRoot {\n  /**\n   * Creates an instance of PotentialTestRegisteredEvent.\n   * @param createPotentialTestDto The DTO object containing the data for the registered potential test.\n   */\n  constructor(public readonly createPotentialTestDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEventHandler.html":{"url":"classes/PotentialTestRegisteredEventHandler.html","title":"class - PotentialTestRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialTestRegisteredEvent.\nImplements the IEventHandler interface from the \"@nestjs/cqrs\" module.\nThis event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialTestRegisteredEventHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Teacher model from the \"teacher\" schema used to retrieve teacher information.\n\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitmqService instance used to send messages via RabbitMQ.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialTestRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:30\n                \n            \n\n\n            \n                \n                    Handles the PotentialTestRegisteredEvent by sending a notification to students.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialTestRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe PotentialTestRegisteredEvent to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the handling process.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEvent } from './potentialTest-registered.event';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n/**\n * Event handler for the PotentialTestRegisteredEvent.\n * Implements the IEventHandler interface from the \"@nestjs/cqrs\" module.\n * This event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n */\n@EventsHandler(PotentialTestRegisteredEvent)\nexport class PotentialTestRegisteredEventHandler implements IEventHandler {\n  /**\n   * Constructor for the PotentialTestRegisteredEventHandler class.\n   * @param teacher - The Teacher model from the \"teacher\" schema used to retrieve teacher information.\n   * @param rabbitmqService - The RabbitmqService instance used to send messages via RabbitMQ.\n   */\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher : Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialTestRegisteredEvent by sending a notification to students.\n   * @param event - The PotentialTestRegisteredEvent to be handled.\n   * @returns A Promise representing the completion of the handling process.\n   */\n  async handle(event: PotentialTestRegisteredEvent): Promise {\n    console.log(\"Triggered event handler\")\n    \n    // Retrieve teacher information\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n    const { createPotentialTestDto } = event;\n\n    // Send a notification to the students using RabbitMQ\n    const message = `Hello everyone, ${teacher.name} has added a new test for ${createPotentialTestDto.module}, it's about ${createPotentialTestDto.name}, it will have a duration of ${createPotentialTestDto.duration} minutes, passing this test will give ${createPotentialTestDto.ec} ECs`;\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitmqService.html":{"url":"injectables/RabbitmqService.html","title":"injectable - RabbitmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:11\n                            \n                        \n\n                \n                    \n                            It injects the RabbitMQ client proxy into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitMQ client proxy instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(queue: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:31\n                \n            \n\n\n            \n                \n                    It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the queue to send the message to.\n\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be sent.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the message is sent successfully.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n/**\n * @class RabbitmqService\n * @description Service for interacting with RabbitMQ microservice client.\n */\n@Injectable()\nexport class RabbitmqService {\n\n  /**\n   * @constructor\n   * @param {ClientProxy} clientProxy - The RabbitMQ client proxy instance.\n   * @description Constructs an instance of the RabbitmqService.\n   * It injects the RabbitMQ client proxy into the service.\n   */\n  constructor(\n    @Inject('RABBITMQ_CLIENT') private readonly clientProxy: ClientProxy,\n  ) {}\n\n  /**\n   * @method sendMessage\n   * @param {string} queue - The name of the queue to send the message to.\n   * @param {string} message - The message to be sent.\n   * @returns {Promise} - A promise that resolves when the message is sent successfully.\n   * @description Sends a message to the specified queue using the RabbitMQ client proxy.\n   * It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n   */\n  sendMessage(queue: string, message: string): Promise {\n    return lastValueFrom(this.clientProxy.emit(queue, message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.module.ts:31\n                \n            \n\n\n            \n                \n                    It returns a dynamically generated module configuration that can be used for importing the module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RmqModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \nThe dynamically generated module configuration.\n\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // Import necessary dependencies\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentManagementController.html":{"url":"controllers/StudentManagementController.html","title":"controller - StudentManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student-management\n            \n\n\n            \n                Description\n            \n            \n                It handles HTTP requests related to student management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                applyForStudy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        applyForStudy\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyForStudy(data: createPotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/student-management.controller.ts:29\n                \n            \n\n\n            \n                \n                    It receives a POST request and creates a potential student using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData for creating a potential student.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to the created student.\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { StudentManagementService } from './student-management.service';\nimport { CreatePotentialStudentCommand } from './commands/create-potentialStudent/create-potentialStudent.command';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from './dto/create-potentialStudent.dto';\n\n/**\n * @class StudentManagementController\n * @description Controller for managing student-related operations.\n * It handles HTTP requests related to student management.\n */\n@Controller('student-management')\nexport class StudentManagementController {\n  constructor(\n    private readonly studentManagementService: StudentManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * @method applyForStudy\n   * @param {createPotentialStudentDto} data - Data for creating a potential student.\n   * @returns {Promise} - A promise that resolves to the created student.\n   * @description Endpoint for applying for study.\n   * It receives a POST request and creates a potential student using the provided data.\n   */\n  @Post()\n  async applyForStudy(@Body() data: createPotentialStudentDto): Promise {\n    // Create a new CreatePotentialStudentCommand with the provided data\n    const command = new CreatePotentialStudentCommand(data);\n\n    // Execute the command using the command bus\n    const student = this.commandBus.execute(command);\n\n    // Return the student\n    return student;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentManagementModule.html":{"url":"modules/StudentManagementModule.html","title":"module - StudentManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/student-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports necessary dependencies, configures the module, and provides controllers and services.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentManagementRepository\n                        \n                        \n                            StudentManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            TeacherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { StudentManagementController } from './student-management.controller';\nimport { StudentManagementService } from './student-management.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialStudent, PotentialStudentSchema } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEventHandler } from './events/potentialStudent-registered.event.handler';\nimport { CreatePotentialStudentCommandHandler } from './commands/create-potentialStudent/create-potentialStudent.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from './teacher/teacher.module';\n\n/**\n * @module StudentManagementModule\n * @description Module for managing student-related functionality.\n * It imports necessary dependencies, configures the module, and provides controllers and services.\n */\n@Module({\n  // Configure the module imports\n  imports: [\n    /**\n     * @module ConfigModule\n     * @description Module for handling configuration files.\n     * It is imported with global scope and loads the environment variables from '.env' file.\n     */\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/student-management/.env',\n    }),\n    /**\n     * @module RmqModule\n     * @description Module for configuring RabbitMQ microservice client.\n     * It is imported with the provided 'APPLICATION_SERVICE' name as an option.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    /**\n     * @module DatabaseModule\n     * @description Module for configuring the database connection.\n     * It is responsible for setting up the database connection using Mongoose.\n     */\n    DatabaseModule,\n    /**\n     * @module CqrsModule\n     * @description Module for implementing the CQRS pattern.\n     * It enables the Command Query Responsibility Segregation (CQRS) pattern in the application.\n     */\n    CqrsModule,\n    /**\n     * @module MongooseModule\n     * @description Module for integrating Mongoose into the Nest application.\n     * It registers Mongoose models and schemas as features for the module.\n     */\n    MongooseModule.forFeature([\n      { name: PotentialStudent.name, schema: PotentialStudentSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n    /**\n     * @module TeacherModule\n     * @description Module for managing teacher-related functionality.\n     * It encapsulates teacher-related controllers, services, and providers.\n     */\n    TeacherModule,\n  ],\n  // Configure the module controllers\n  controllers: [StudentManagementController],\n  // Configure the module providers\n  providers: [\n    StudentManagementService,\n    StudentManagementRepository,\n    PotentialStudentRegisteredEventHandler,\n    CreatePotentialStudentCommandHandler,\n  ],\n})\nexport class StudentManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementRepository.html":{"url":"injectables/StudentManagementRepository.html","title":"injectable - StudentManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the PotentialStudent model using the @InjectModel decorator.\nThe injected model is passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the PotentialStudent schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialStudent } from \"./schemas/potentialStudent.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * @class StudentManagementRepository\n * @description Repository class for managing potential students.\n * It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n */\n@Injectable()\nexport class StudentManagementRepository extends AbstractRepository {\n  /**\n   * @constructor\n   * @param {Model} applicationModel - The Mongoose model for the PotentialStudent schema.\n   * @description Constructs an instance of the StudentManagementRepository.\n   * It injects the PotentialStudent model using the @InjectModel decorator.\n   * The injected model is passed to the constructor of the AbstractRepository class.\n   */\n  constructor(@InjectModel(PotentialStudent.name) applicationModel: Model) {\n    // Call the constructor of the AbstractRepository class and pass the applicationModel\n    super(applicationModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementService.html":{"url":"injectables/StudentManagementService.html","title":"injectable - StudentManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the StudentManagementRepository to perform application-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.service.ts:13\n                            \n                        \n\n                \n                    \n                            It injects the StudentManagementRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for student management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/student-management.service.ts:31\n                \n            \n\n\n            \n                \n                    It calls the find method of the StudentManagementRepository to get all application documents.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to an array of application documents.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialStudent } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\n\n/**\n * @class StudentManagementService\n * @description Service class for managing student applications.\n * It interacts with the StudentManagementRepository to perform application-related operations.\n */\n@Injectable()\nexport class StudentManagementService {\n  /**\n   * @constructor\n   * @param {StudentManagementRepository} studentManagementRepository - The repository for student management.\n   * @description Constructs an instance of the StudentManagementService.\n   * It injects the StudentManagementRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(PotentialStudent.name)\n    private readonly studentManagementRepository: StudentManagementRepository,\n  ) {}\n\n  /**\n   * @method getApplications\n   * @returns {Promise} - A promise that resolves to an array of application documents.\n   * @description Retrieves all applications.\n   * It calls the find method of the StudentManagementRepository to get all application documents.\n   */\n  async getApplications(): Promise {\n    return this.studentManagementRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudyProgramController.html":{"url":"controllers/StudyProgramController.html","title":"controller - StudyProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudyProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                study-program\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/study-program/src/study-program.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { StudyProgramService } from './study-program.service';\n\n@Controller('study-program')\nexport class StudyProgramController {\n  constructor(private readonly studyProgramService: StudyProgramService) {}\n\n  @Get()\n  getHello(): string {\n    return this.studyProgramService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudyProgramModule.html":{"url":"modules/StudyProgramModule.html","title":"module - StudyProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    StudyProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/study-program/src/study-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudyProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudyProgramController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudyProgramController } from './study-program.controller';\nimport { StudyProgramService } from './study-program.service';\n\n@Module({\n  imports: [],\n  controllers: [StudyProgramController],\n  providers: [StudyProgramService],\n})\nexport class StudyProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudyProgramService.html":{"url":"injectables/StudyProgramService.html","title":"injectable - StudyProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudyProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/study-program/src/study-program.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StudyProgramService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher.html":{"url":"classes/Teacher.html","title":"class - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/teacher.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * @description Mongoose schema for the Teacher class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * @description Property representing the name of the teacher.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * @description Mongoose schema for the Teacher class created using SchemaFactory.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher-1.html":{"url":"classes/Teacher-1.html","title":"class - Teacher-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the Teacher entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/teacher.schema.ts:13\n                        \n                    \n\n            \n                \n                    The name of the teacher.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * Mongoose schema for the Teacher entity.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * The name of the teacher.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * Mongoose schema definition for the Teacher entity.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n\n            \n                Description\n            \n            \n                It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                execute\n                            \n                            \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:23\n                \n            \n\n\n            \n                \n                    It creates a new teacher using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO object containing teacher data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A response object with status and message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('teacher_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:48\n                \n            \n\n\n            \n                \n                    It logs the received message.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The payload data of the received message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:37\n                \n            \n\n\n            \n                \n                    It retrieves all teachers from the teacherService.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An array of teacher objects.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { RmqContext } from '@nestjs/microservices/ctx-host/rmq.context';\nimport { Ctx, MessagePattern, Payload } from '@nestjs/microservices';\n\n/**\n * @description Controller class for handling teacher-related HTTP requests and message patterns.\n * It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n */\n@Controller('teachers')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  /**\n   * @description Handler for the POST /teachers endpoint.\n   * It creates a new teacher using the provided data.\n   * @param createTeacherDto The DTO object containing teacher data.\n   * @returns A response object with status and message.\n   */\n  @Post()\n  async create(@Body() createTeacherDto: CreateTeacherDto) {\n    // Call the teacherService to create a teacher\n    await this.teacherService.create(createTeacherDto);\n\n    // Return a response object with status and message\n    return { status: 201, message: 'Created Teacher' };\n  }\n\n  /**\n   * @description Handler for the GET /teachers endpoint.\n   * It retrieves all teachers from the teacherService.\n   * @returns An array of teacher objects.\n   */\n  @Get()\n  findAll() {\n    // Call the teacherService to find all teachers\n    return this.teacherService.findAll();\n  }\n\n  /**\n   * @description Message handler for 'teacher_notifications' pattern.\n   * It logs the received message.\n   * @param data The payload data of the received message.\n   */\n  @MessagePattern('teacher_notifications')\n  public async execute(@Payload() data: any) {\n    // Log the received message\n    console.log('Message: ', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports the required modules and specifies the controllers and providers for the teacher feature.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherRepository\n                        \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TeacherRepository } from './teacher.repository';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\n\n/**\n * @module TeacherModule\n * @description Module for managing teachers.\n * It imports the required modules and specifies the controllers and providers for the teacher feature.\n */\n@Module({\n  // Import required modules\n  imports: [\n    /**\n     * @description Register the RmqModule with the given name.\n     * It allows communication with RabbitMQ microservice.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    /**\n     * @description Register the MongooseModule with the Teacher schema.\n     * It provides the Mongoose connection and access to the Teacher collection.\n     */\n    MongooseModule.forFeature([{ name: Teacher.name, schema: TeacherSchema }])\n  ],\n  // Specify the controllers\n  controllers: [TeacherController],\n  // Specify the providers\n  providers: [TeacherService, TeacherRepository]\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherRepository.html":{"url":"injectables/TeacherRepository.html","title":"injectable - TeacherRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides CRUD operations for teachers.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\nThe injected model is then passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the Teacher schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Teacher } from \"../schemas/teacher.schema\";\n\n/**\n * @class TeacherRepository\n * @description Repository class for managing teacher data.\n * It extends the AbstractRepository class and provides CRUD operations for teachers.\n */\n@Injectable()\nexport class TeacherRepository extends AbstractRepository {\n    /**\n     * @constructor\n     * @param {Model} applicationModel - The Mongoose model for the Teacher schema.\n     * @description Constructs an instance of the TeacherRepository.\n     * It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\n     * The injected model is then passed to the constructor of the AbstractRepository class.\n     */\n    constructor(@InjectModel(Teacher.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the TeacherRepository to perform teacher-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: TeacherRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.service.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the TeacherRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        TeacherRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for teacher management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:33\n                \n            \n\n\n            \n                \n                    It calls the create method of the TeacherRepository and passes the createTeacherDto.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe DTO object containing teacher data.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the teacher is created.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:43\n                \n            \n\n\n            \n                \n                    It calls the find method of the TeacherRepository to get all teacher documents.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to an array of teacher documents.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { TeacherRepository } from './teacher.repository';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\n\n/**\n * @class TeacherService\n * @description Service class for managing teachers.\n * It interacts with the TeacherRepository to perform teacher-related operations.\n */\n@Injectable()\nexport class TeacherService {\n  /**\n   * @constructor\n   * @param {TeacherRepository} teacherRepository - The repository for teacher management.\n   * @description Constructs an instance of the TeacherService.\n   * It injects the TeacherRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(Teacher.name)\n    private readonly teacherRepository: TeacherRepository,\n  ) {}\n\n  /**\n   * @method create\n   * @param {CreateTeacherDto} createTeacherDto - The DTO object containing teacher data.\n   * @returns {Promise} - A promise that resolves when the teacher is created.\n   * @description Creates a new teacher.\n   * It calls the create method of the TeacherRepository and passes the createTeacherDto.\n   */\n  async create(createTeacherDto: CreateTeacherDto): Promise {\n    await this.teacherRepository.create(createTeacherDto);\n  }\n\n  /**\n   * @method findAll\n   * @returns {Promise} - A promise that resolves to an array of teacher documents.\n   * @description Retrieves all teachers.\n   * It calls the find method of the TeacherRepository to get all teacher documents.\n   */\n  async findAll(): Promise {\n    return this.teacherRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestProgramController.html":{"url":"controllers/TestProgramController.html","title":"controller - TestProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test-program\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing potential tests in the test-program module.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialTestDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialTestDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialTestDto(data: createPotentialTestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:34\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new potential test.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A Promise that resolves to the created potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:24\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential test by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential test to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the deleted potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential tests.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { TestProgramService } from './test-program.service';\nimport { createPotentialTestDto } from './dto/create-potentialTest.dto';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialTestCommand } from './commands/create-potentialTest.command';\n\n/**\n * Controller class for managing potential tests in the test-program module.\n */\n@Controller('test-program')\nexport class TestProgramController {\n  constructor(\n    private readonly testProgramService: TestProgramService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Endpoint for deleting a potential test by its ID.\n   * @param id The ID of the potential test to be deleted.\n   * @returns A Promise that resolves to the deleted potential test.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.testProgramService.deleteApplicationById(id);\n  }\n\n  /**\n   * Endpoint for creating a new potential test.\n   * @param data The data for creating the potential test.\n   * @returns A Promise that resolves to the created potential test.\n   */\n  @Post()\n  async createPotentialTestDto(@Body() data: createPotentialTestDto) {\n    const command = new CreatePotentialTestCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Endpoint for retrieving all potential tests.\n   * @returns A Promise that resolves to an array of potential tests.\n   */\n  @Get()\n  async getApplications() {\n    return this.testProgramService.getApplications();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestProgramModule.html":{"url":"modules/TestProgramModule.html","title":"module - TestProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    TestProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_imports\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/test-program/src/test-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestProgramRepository\n                        \n                        \n                            TestProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestProgramController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes from external packages\nimport { Module } from '@nestjs/common';\nimport { TestProgramController } from './test-program.controller';\nimport { TestProgramService } from './test-program.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialTest, PotentialTestSchema } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEventHandler } from './events/potentialTest-registered.event.handler';\nimport { CreatePotentialTestCommandHandler } from './commands/create-potentialTest.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from 'apps/student-management/src/teacher/teacher.module';\n\n@Module({\n  // Import and configure modules for the TestProgramModule\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/test-program/.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    // Import MongooseModule and specify the schemas to be used\n    MongooseModule.forFeature([\n      { name: PotentialTest.name, schema: PotentialTestSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n  ],\n  // Specify the controllers to be included in the TestProgramModule\n  controllers: [TestProgramController],\n  // Specify the services and repositories to be included in the TestProgramModule\n  providers: [\n    TestProgramService,\n    TestProgramRepository,\n    PotentialTestRegisteredEventHandler,\n    CreatePotentialTestCommandHandler,\n  ],\n})\nexport class TestProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramRepository.html":{"url":"injectables/TestProgramRepository.html","title":"injectable - TestProgramRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramRepository class.\nThis class extends the AbstractRepository class from the \"@app/common\" package.\nIt provides data access methods for the \"PotentialTest\" entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.repository.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramRepository class.\n                        This model is used for executing database operations related to the \"PotentialTest\" entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose Model for the \"PotentialTest\" entity, injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialTest } from \"./schemas/potentialTest.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Injectable TestProgramRepository class.\n * This class extends the AbstractRepository class from the \"@app/common\" package.\n * It provides data access methods for the \"PotentialTest\" entity.\n */\n@Injectable()\nexport class TestProgramRepository extends AbstractRepository {\n    /**\n     * Constructor for the TestProgramRepository class.\n     * @param applicationModel The Mongoose Model for the \"PotentialTest\" entity, injected using @InjectModel decorator.\n     *                         This model is used for executing database operations related to the \"PotentialTest\" entity.\n     */\n    constructor(@InjectModel(PotentialTest.name) applicationModel: Model) {\n        // Call the constructor of the parent AbstractRepository class passing the injected \"applicationModel\".\n        // The parent class takes care of creating basic CRUD operations for the \"PotentialTest\" entity.\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramService.html":{"url":"injectables/TestProgramService.html","title":"injectable - TestProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramService class.\nThis class provides methods to interact with the test program data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramService class.\n                            This repository is used to execute database operations related to the test program.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TestProgramRepository instance injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes an application from the test program by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the result of the delete operation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:27\n                \n            \n\n\n            \n                \n                    Retrieves all applications from the test program.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests (applications).\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialTest } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\n\n/**\n * Injectable TestProgramService class.\n * This class provides methods to interact with the test program data.\n */\n@Injectable()\nexport class TestProgramService {\n  /**\n   * Constructor for the TestProgramService class.\n   * @param testProgramRepository The TestProgramRepository instance injected using @InjectModel decorator.\n   *                             This repository is used to execute database operations related to the test program.\n   */\n  constructor(\n    @InjectModel(PotentialTest.name)\n    private readonly testProgramRepository: TestProgramRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications from the test program.\n   * @returns A Promise that resolves to an array of potential tests (applications).\n   */\n  async getApplications() {\n    return this.testProgramRepository.find({});\n  }\n\n  /**\n   * Deletes an application from the test program by its ID.\n   * @param id The ID of the application to be deleted.\n   * @returns A Promise that resolves to the result of the delete operation.\n   */\n  async deleteApplicationById(id: string) {\n    return this.testProgramRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\n// Define the UpdateTeacherDto class extending PartialType(CreateTeacherDto)\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyClassDto.html":{"url":"classes/applyClassDto.html","title":"class - applyClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/applyClass.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:15\n                        \n                    \n\n            \n                \n                    The name of the class to apply for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:20\n                        \n                    \n\n            \n                \n                    The potential student applying for the class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { AbstractDocument } from \"@app/common\";\nimport { PotentialStudent } from \"apps/student-management/src/schemas/potentialStudent.schema\";\n\nexport class applyClassDto extends AbstractDocument {\n    /**\n     * The name of the class to apply for.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The potential student applying for the class.\n     */\n    student: PotentialStudent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyModuleDto.html":{"url":"classes/applyModuleDto.html","title":"class - applyModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/applyModule.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for applying a module.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:26\n                        \n                    \n\n            \n                \n                    Class associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:16\n                        \n                    \n\n            \n                \n                    Name of the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { PotentialClass } from \"apps/class-management/src/schemas/potentialClass.schema\";\nimport { Teacher } from \"apps/student-management/src/schemas/teacher.schema\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO (Data Transfer Object) for applying a module.\n * Extends the AbstractDocument class.\n */\nexport class applyModuleDto extends AbstractDocument {\n    /**\n     * Name of the module.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * Teacher associated with the module.\n     */\n    teacher: Teacher;\n\n    /**\n     * Class associated with the module.\n     */\n    class: PotentialClass;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/class-management/src/class-management.controller.ts\n            \n            controller\n            ClassManagementController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.repository.ts\n            \n            injectable\n            ClassManagementRepository\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.service.ts\n            \n            injectable\n            ClassManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.handler.ts\n            \n            class\n            CreatePotentialClassCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.ts\n            \n            class\n            CreatePotentialClassCommand\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/applyClass.dto.ts\n            \n            class\n            applyClassDto\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.handler.ts\n            \n            class\n            PotentialClassRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.ts\n            \n            class\n            PotentialClassRegisteredEvent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            class\n            PotentialClass\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            variable\n            PotentialClassSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.handler.ts\n            \n            class\n            CreatePotentialModuleCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.ts\n            \n            class\n            CreatePotentialModuleCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/constants/service.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/applyModule.dto.ts\n            \n            class\n            applyModuleDto\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.handler.ts\n            \n            class\n            PotentialModuleRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.ts\n            \n            class\n            PotentialModuleRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.controller.ts\n            \n            controller\n            ModuleManagementController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.repository.ts\n            \n            injectable\n            ModuleManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.service.ts\n            \n            injectable\n            ModuleManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            class\n            PotentialModule\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            variable\n            PotentialModuleSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n            \n            class\n            CreatePotentialStudentCommandHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n            \n            class\n            CreatePotentialStudentCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/dto/create-potentialStudent.dto.ts\n            \n            class\n            createPotentialStudentDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n            \n            class\n            PotentialStudentRegisteredEventHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.ts\n            \n            class\n            PotentialStudentRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            class\n            PotentialStudent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            variable\n            PotentialStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.controller.ts\n            \n            controller\n            StudentManagementController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.repository.ts\n            \n            injectable\n            StudentManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.service.ts\n            \n            injectable\n            StudentManagementService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.repository.ts\n            \n            injectable\n            TeacherRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/study-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.controller.ts\n            \n            controller\n            StudyProgramController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.service.ts\n            \n            injectable\n            StudyProgramService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.handler.ts\n            \n            class\n            CreatePotentialTestCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.ts\n            \n            class\n            CreatePotentialTestCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/dto/create-potentialTest.dto.ts\n            \n            class\n            createPotentialTestDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.handler.ts\n            \n            class\n            PotentialTestRegisteredEventHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.ts\n            \n            class\n            PotentialTestRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            class\n            PotentialTest\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            variable\n            PotentialTestSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.controller.ts\n            \n            controller\n            TestProgramController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.repository.ts\n            \n            injectable\n            TestProgramRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.service.ts\n            \n            injectable\n            TestProgramService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            injectable\n            AbstractRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.service.ts\n            \n            injectable\n            RabbitmqService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialStudentDto.html":{"url":"classes/createPotentialStudentDto.html","title":"class - createPotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/dto/create-potentialStudent.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) class for creating a potential student.\nExtends the AbstractDocument class from the \"@app/common\" module.\nThis class represents the data required to create a potential student.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:24\n                        \n                    \n\n            \n                \n                    The email property represents the email address of the potential student.\nIt must be a valid email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name property represents the name of the potential student.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:39\n                        \n                    \n\n            \n                \n                    The phoneNumber property represents the phone number of the potential student.\nIt must be a valid phone number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:32\n                        \n                    \n\n            \n                \n                    The study property represents the field of study of the potential student.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from \"class-validator\";\n\n/**\n * Data Transfer Object (DTO) class for creating a potential student.\n * Extends the AbstractDocument class from the \"@app/common\" module.\n * This class represents the data required to create a potential student.\n */\nexport class createPotentialStudentDto extends AbstractDocument {\n    /**\n     * The name property represents the name of the potential student.\n     * It must be a non-empty string.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The email property represents the email address of the potential student.\n     * It must be a valid email address.\n     */\n    @IsEmail()\n    email: string;\n\n    /**\n     * The study property represents the field of study of the potential student.\n     * It must be a non-empty string.\n     */\n    @IsString()\n    @IsNotEmpty()\n    study: string;\n  \n    /**\n     * The phoneNumber property represents the phone number of the potential student.\n     * It must be a valid phone number.\n     */\n    @IsPhoneNumber()\n    phoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialTestDto.html":{"url":"classes/createPotentialTestDto.html","title":"class - createPotentialTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/dto/create-potentialTest.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO class for creating a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                ec\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:50\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:27\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:34\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:20\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:42\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsArray, IsNotEmpty, IsString, IsNumber } from \"class-validator\";\n\n/**\n * DTO class for creating a potential test.\n */\nexport class createPotentialTestDto extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.4\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.4\n        \n            @nestjs/cqrs : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.0.4\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.4\n        \n            @nestjs/swagger : ^7.0.12\n        \n            amqp-connection-manager : ^4.1.13\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The NestJS application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/module-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger for API documentation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/student-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Nest application instance.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/study-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/test-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the Nest.js application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest.js application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ClassManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModuleManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudyProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../service.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            PotentialClassSchema   (apps/.../potentialClass.schema.ts)\n                        \n                        \n                            PotentialModuleSchema   (apps/.../potentialModule.schema.ts)\n                        \n                        \n                            PotentialStudentSchema   (apps/.../potentialStudent.schema.ts)\n                        \n                        \n                            PotentialTestSchema   (apps/.../potentialTest.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/constants/service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/student-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/class-management/src/schemas/potentialClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialClass)\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/schemas/potentialModule.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialModuleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialModule)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialModule entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/potentialStudent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialStudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialStudent)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/potentialTest.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialTestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialTest)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the PotentialTest entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the Teacher entity.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
