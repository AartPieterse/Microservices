var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.24,1,1.555]],["body/classes/AbstractDocument.html",[0,0.416,1,2.694,2,0.78,3,0.139,4,0.122,5,0.122,6,4.365,7,1.837,8,4.98,9,0.408,10,1.786,11,2.734,12,0.697,13,0.013,14,3.025,15,1.553,16,2.159,17,2.159,18,2.643,19,0.474,20,5.006,21,0.195,22,1.501,23,3.603,24,2.333,25,1.146,26,2.214,27,5.006,28,2.986,29,0.315,30,5.006,31,4.365,32,3.942,33,0.139,34,2.829,35,5.006,36,4.365,37,2.986,38,5.006,39,5.006,40,5.006,41,1.356,42,5.006,43,0.01,44,0.01]],["title/injectables/AbstractRepository.html",[45,0.896,46,1.555]],["body/injectables/AbstractRepository.html",[0,0.174,1,1.129,3,0.082,4,0.072,5,0.072,9,0.24,12,0.655,13,0.013,19,0.625,21,0.147,26,0.881,29,0.311,33,0.082,37,4.968,41,1.701,43,0.007,44,0.01,45,0.975,46,1.692,47,1.129,48,2.563,49,0.975,50,2.171,51,1.847,52,2.63,53,4.138,54,2.785,55,2.915,56,0.651,57,2.939,58,2.962,59,2.939,60,1.229,61,0.538,62,1.229,63,2.785,64,3.339,65,2.939,66,1.514,67,2.71,68,1.63,69,1.899,70,1.273,71,2.939,72,2.787,73,1.825,74,2.785,75,4.701,76,2.939,77,2.785,78,4.17,79,4.446,80,4.446,81,1.825,82,4.17,83,2.785,84,2.939,85,2.785,86,1.825,87,3.375,88,2.939,89,1.899,90,2.785,91,1.899,92,4.404,93,0.548,94,2.939,95,2.939,96,0.629,97,1.187,98,1.414,99,2.939,100,2.939,101,2.089,102,2.939,103,2.939,104,1.088,105,2.939,106,2.939,107,2.939,108,2.939,109,2.939,110,1.32,111,2.939,112,2.939]],["title/controllers/ClassManagementController.html",[113,1.445,114,2.934]],["body/controllers/ClassManagementController.html",[0,0.481,2,1.08,3,0.067,4,0.058,5,0.058,9,0.196,12,0.524,13,0.013,15,1.777,19,0.543,21,0.146,29,0.283,33,0.067,41,1.02,43,0.006,44,0.006,49,0.833,50,2.088,51,1.476,52,2.536,55,2.374,56,0.531,60,0.983,61,0.43,62,0.983,66,1.433,68,1.722,69,1.034,70,1.308,72,2.867,73,1.928,86,0.994,91,2.47,93,0.447,96,0.513,97,1.095,98,1.839,101,2.305,104,2.12,113,1.66,114,2.729,115,0.856,116,2.425,117,4.099,118,1.616,119,1.355,120,2.539,121,1.502,122,1.63,123,2.831,124,2.128,125,2.09,126,3.538,127,2.774,128,2.397,129,1.962,130,1.168,131,2.683,132,2.729,133,2.397,134,2.397,135,1.355,136,1.888,137,2.397,138,1.929,139,4.567,140,3.283,141,2.397,142,2.246,143,1.737,144,2.246,145,1.288,146,1.888,147,2.09,148,2.397,149,0.826,150,2.397,151,1.616,152,4.511,153,2.848,154,2.397,155,4.674,156,1.616,157,3.085,158,4.511,159,4.511,160,4.511,161,4.511,162,2.397,163,3.819,164,2.397,165,2.397,166,2.397,167,1.888,168,2.397,169,1.888,170,2.397]],["title/modules/ClassManagementModule.html",[171,0.679,172,2.934]],["body/modules/ClassManagementModule.html",[0,0.391,2,0.822,3,0.105,4,0.092,5,0.128,13,0.013,21,0.223,22,1.13,24,1.253,25,0.863,26,1.13,29,0.186,33,0.105,43,0.008,44,0.008,58,1.693,61,0.496,93,0.703,110,1.693,114,4.407,115,1.882,116,2.103,117,2.541,121,2.103,122,1.054,144,4.4,145,2.025,153,2.47,171,1.205,172,5.725,173,1.395,174,1.562,175,1.844,176,1.844,177,1.693,178,2.849,179,1.765,180,3.286,181,3.286,182,3.286,183,4.168,184,3.248,185,4.4,186,2.58,187,1.844,188,1.844,189,2.731,190,2.47,191,0.806,192,2.833,193,2.383,194,2.13,195,2.731,196,2.13,197,4.407,198,3.821,199,2.731,200,2.731,201,2.731,202,4.101,203,2.541,204,3.286,205,3.846,206,3.286,207,1.93,208,3.769,209,2.541,210,3.286,211,2.731,212,2.731,213,2.731,214,3.286,215,3.145,216,1.844,217,2.968,218,1.844,219,2.383,220,2.701,221,2.731,222,3.769,223,3.628,224,2.731,225,2.383,226,3.286,227,5.744,228,2.383,229,3.769,230,3.286,231,3.286,232,1.693,233,1.844]],["title/injectables/ClassManagementRepository.html",[45,0.896,185,2.415]],["body/injectables/ClassManagementRepository.html",[0,0.212,3,0.099,4,0.087,5,0.087,7,1.33,9,0.292,12,0.702,13,0.013,19,0.669,21,0.189,24,1.689,25,0.818,26,1.771,29,0.349,33,0.099,37,4.798,41,0.968,43,0.008,44,0.01,45,1.124,46,2.852,47,1.373,49,1.124,50,2.146,51,1.802,52,2.566,53,3.991,54,3.212,55,2.818,56,0.791,58,3.172,60,1.317,61,0.576,62,1.317,63,2.26,64,3.212,66,1.406,67,2.516,68,1.323,69,1.541,70,1.242,72,2.614,73,1.482,74,2.26,75,4.466,77,2.26,78,3.737,79,4.069,80,4.069,81,1.482,82,3.212,83,2.26,85,2.26,86,1.482,87,3.175,89,1.541,90,2.26,91,1.541,93,0.666,97,0.643,116,2.026,117,3.425,153,2.768,185,3.838,191,0.765,199,2.59,234,2.59,235,2.41,236,3.574,237,2.601,238,1.576,239,3.984,240,2.516,241,2.41,242,2.41,243,2.41,244,2.41,245,2.41,246,1.482,247,3.574,248,2.41]],["title/injectables/ClassManagementService.html",[45,0.896,144,2.415]],["body/injectables/ClassManagementService.html",[0,0.485,2,1.021,3,0.08,4,0.07,5,0.07,9,0.236,11,1.07,12,0.62,13,0.013,19,0.621,21,0.189,25,0.662,29,0.308,33,0.08,41,1.178,43,0.007,44,0.007,45,0.963,46,2.234,47,1.11,49,0.963,50,2.164,51,1.629,52,2.614,55,2.585,56,0.963,60,1.163,61,0.509,62,1.163,66,1.508,68,1.61,69,1.876,70,1.382,72,2.934,73,1.803,86,1.198,91,2.508,93,0.539,96,0.619,97,1.123,101,2.074,104,2.309,116,2.712,117,4.584,121,1.735,122,1.649,123,3.125,124,2.458,125,3.792,126,3.521,129,1.685,130,1.349,131,2.922,135,2.458,138,2.228,139,4.826,144,2.594,146,2.277,147,2.521,149,0.996,153,1.354,185,3.119,191,0.619,199,2.095,201,2.095,218,2.128,246,1.198,249,1.949,250,2.891,251,2.891,252,2.891,253,2.891,254,2.891,255,2.891,256,2.891,257,2.521,258,2.891,259,2.891,260,2.891,261,2.891,262,2.891]],["title/classes/CreateMeetingDto.html",[0,0.24,263,2.561]],["body/classes/CreateMeetingDto.html",[0,0.408,1,2.846,2,0.649,3,0.116,4,0.101,5,0.101,7,1.8,9,0.34,10,1.582,11,2.091,12,0.714,13,0.013,14,1.797,15,2.229,16,1.797,17,1.797,18,1.727,19,0.681,21,0.157,29,0.206,33,0.116,43,0.009,44,0.009,70,1.327,72,2.545,130,1.753,191,0.891,240,1.542,263,3.573,264,1.486,265,6.265,266,3.281,267,2.17,268,4.047,269,5.59,270,5.59,271,6.411,272,6.411,273,4.981,274,6.265,275,4.166,276,5.65,277,5.994,278,4.166,279,4.45,280,5.65,281,4.166,282,2.17,283,4.347,284,4.166,285,1.753,286,1.871,287,6.411,288,4.054,289,4.054,290,2.485]],["title/classes/CreatePotentialClassCommand.html",[0,0.24,202,2.73]],["body/classes/CreatePotentialClassCommand.html",[0,0.435,2,0.764,3,0.136,4,0.119,5,0.119,9,0.4,10,1.762,12,0.625,13,0.013,19,0.596,21,0.175,22,1.47,29,0.243,33,0.136,43,0.01,44,0.01,56,1.085,60,0.914,61,0.4,62,0.914,89,2.996,96,1.487,97,0.883,116,2.771,122,1.388,126,4.37,129,2.247,130,2.155,146,3.863,202,4.942,237,3.223,238,1.952,267,2.669,291,4.144,292,4.276,293,2.826,294,5.034,295,3.223,296,4.276,297,4.904,298,4.394,299,2.996,300,4.904,301,2.926]],["title/classes/CreatePotentialClassCommandHandler.html",[0,0.24,302,3.189]],["body/classes/CreatePotentialClassCommandHandler.html",[0,0.397,2,0.844,3,0.109,4,0.095,5,0.095,9,0.319,12,0.538,13,0.013,19,0.513,21,0.195,22,1.173,29,0.268,33,0.109,41,1.06,43,0.008,44,0.008,49,1.198,50,1.738,51,1.096,56,1.198,60,1.009,61,0.442,62,1.009,66,1.119,67,2.479,96,0.837,97,1.117,98,2.15,104,1.449,116,2.475,121,1.561,122,0.782,126,2.103,130,1.214,144,4.446,145,2.103,149,1.864,153,1.833,185,3.229,201,2.836,202,5.122,204,3.412,205,3.423,206,3.412,207,2.004,220,2.004,232,3.157,233,3.277,237,2.772,238,2.077,291,3.702,293,2.431,302,5.274,303,3.412,304,4.496,305,3.423,306,2.836,307,4.852,308,3.913,309,5.093,310,5.413,311,4.263,312,3.922,313,3.913,314,4.263,315,4.72,316,2.908,317,2.649,318,3.059,319,3.922,320,3.922,321,2.836,322,3.913,323,2.103,324,2.475,325,2.212,326,2.836,327,3.913,328,3.913,329,3.913,330,3.913,331,3.412,332,3.913,333,3.913,334,3.082]],["title/classes/CreatePotentialClassDto.html",[0,0.24,126,2.175]],["body/classes/CreatePotentialClassDto.html",[0,0.461,1,2.823,2,0.77,3,0.137,4,0.12,5,0.12,7,1.656,9,0.403,10,1.771,11,2.341,12,0.693,13,0.013,14,2.131,15,1.962,16,2.131,17,2.131,18,2.049,19,0.661,21,0.194,33,0.137,43,0.01,44,0.01,61,0.62,70,1.221,116,2.781,122,1.264,126,3.397,191,1.057,240,1.829,264,1.022,282,2.918,286,2.22,288,3.999,289,3.999,290,2.948,335,4.309,336,3.332,337,4.942,338,6.323,339,2.89,340,4.942,341,4.98,342,4.309]],["title/classes/CreatePotentialModuleCommand.html",[0,0.24,343,2.73]],["body/classes/CreatePotentialModuleCommand.html",[0,0.407,2,0.745,3,0.133,4,0.117,5,0.117,9,0.39,10,1.734,12,0.615,13,0.013,19,0.587,21,0.172,22,1.434,29,0.306,33,0.133,41,1.677,43,0.01,44,0.01,56,1.059,60,0.892,61,0.39,62,0.892,96,1.469,97,0.861,122,1.503,129,1.989,130,2.333,171,1.261,233,3.03,238,1.921,267,2.637,291,4.095,293,2.781,294,4.975,295,3.171,298,4.342,299,2.961,301,2.853,343,4.896,344,2.961,345,4.171,346,4.352,347,4.171,348,4.783,349,5.399,350,4.783,351,3.767]],["title/classes/CreatePotentialModuleCommandHandler.html",[0,0.24,352,3.189]],["body/classes/CreatePotentialModuleCommandHandler.html",[0,0.238,2,0.626,3,0.112,4,0.098,5,0.098,9,0.328,12,0.548,13,0.013,19,0.523,21,0.188,22,1.205,29,0.273,33,0.112,41,1.088,43,0.009,44,0.009,49,1.22,50,1.763,51,2.053,56,1.22,60,1.028,61,0.45,62,1.028,66,1.14,67,2.507,96,0.86,97,0.724,98,2.175,104,1.488,122,1.528,130,1.71,145,2.159,149,1.899,171,1.258,173,2.041,207,2.058,220,2.058,232,2.476,233,3.84,291,3.754,293,2.476,304,4.56,305,3.486,306,2.912,307,5.142,309,3.995,312,3.995,314,4.342,318,3.116,319,3.995,320,3.995,321,2.912,324,2.542,325,3.556,326,2.912,334,3.165,343,4.566,344,2.714,346,2.159,352,4.342,353,3.504,354,4.478,355,4.019,356,4.019,357,3.504,358,3.486,359,3.504,360,4.019,361,2.058,362,4.019,363,4.019,364,4.019,365,4.019,366,3.165,367,1.544,368,4.019]],["title/classes/CreatePotentialModuleDto.html",[0,0.24,346,2.175]],["body/classes/CreatePotentialModuleDto.html",[0,0.47,1,2.9,2,0.692,3,0.123,4,0.108,5,0.108,7,1.848,9,0.362,10,1.652,11,2.184,12,0.701,13,0.013,14,1.916,15,1.83,16,1.916,17,1.916,18,1.842,19,0.669,21,0.196,29,0.22,33,0.123,43,0.009,44,0.009,61,0.599,70,1.457,116,1.772,129,1.709,153,2.081,171,1.311,191,0.951,240,1.645,264,0.919,267,2.266,283,4.462,285,2.342,286,1.996,288,3.731,289,3.731,290,2.65,298,3.731,299,2.544,336,2.996,341,4.646,344,3.043,346,3.17,369,3.874,370,4.443,371,4.443,372,4.443,373,3.874,374,3.874]],["title/classes/CreatePotentialStudentCommand.html",[0,0.24,375,2.73]],["body/classes/CreatePotentialStudentCommand.html",[0,0.443,2,0.729,3,0.13,4,0.114,5,0.114,9,0.382,10,1.71,12,0.606,13,0.013,19,0.579,21,0.17,22,2.036,29,0.302,33,0.13,43,0.009,44,0.009,51,1.903,56,1.594,60,0.872,61,0.382,62,0.872,96,1.454,97,0.842,122,1.492,129,1.968,130,1.894,171,1.023,233,2.987,264,1.405,282,2.869,291,4.052,293,3.234,294,5.411,295,3.479,375,4.855,376,4.922,377,4.08,378,3.279,379,3.949,380,4.08,381,4.679,382,3.479,383,4.679,384,4.08,385,3.155]],["title/classes/CreatePotentialStudentCommandHandler.html",[0,0.24,386,3.189]],["body/classes/CreatePotentialStudentCommandHandler.html",[0,0.4,2,0.547,3,0.098,4,0.085,5,0.085,9,0.286,12,0.498,13,0.013,19,0.475,21,0.177,22,1.052,29,0.289,33,0.098,41,0.95,43,0.008,44,0.008,49,1.11,50,1.638,51,1.638,56,1.412,60,0.935,61,0.409,62,0.935,66,1.037,67,2.362,96,0.751,97,1.053,98,2.049,104,1.299,122,1.275,129,1.453,149,1.727,157,1.644,207,1.797,220,3.268,232,3.246,233,3.734,238,1.815,264,1.21,282,2.696,291,3.489,293,2.252,304,4.238,305,4.036,306,2.543,307,5.236,309,4.238,311,3.949,312,3.633,317,1.717,320,3.633,321,2.543,324,2.219,325,3.606,326,2.543,331,3.06,339,1.455,366,4.607,375,5.145,376,4.238,379,2.453,386,5.026,387,3.06,388,4.303,389,6.381,390,3.949,391,3.699,392,3.807,393,3.509,394,3.143,395,3.509,396,2.991,397,5.014,398,3.944,399,4.372,400,2.833,401,4.372,402,3.06,403,3.509,404,3.509,405,3.509,406,3.381,407,2.764,408,3.06,409,3.06,410,3.06,411,3.06,412,3.509,413,3.509,414,3.509,415,3.509,416,3.509,417,3.509,418,2.543,419,3.06,420,3.509]],["title/classes/CreatePotentialStudentDto.html",[0,0.24,379,1.981]],["body/classes/CreatePotentialStudentDto.html",[0,0.322,1,2.574,2,0.611,3,0.109,4,0.096,5,0.096,7,1.419,9,0.32,10,1.518,11,2.007,12,0.723,13,0.013,14,1.691,15,2.257,16,1.691,17,1.691,18,1.626,19,0.689,21,0.151,33,0.109,34,4.111,43,0.008,44,0.008,61,0.507,70,1.508,122,1.454,191,0.839,240,1.452,264,1.504,273,3.928,274,5.417,282,2.794,286,1.761,288,3.929,289,3.929,290,2.339,336,3.655,379,2.653,421,6.343,422,3.088,423,5.417,424,6.727,425,6.133,426,4.448,427,3.921,428,6.212,429,3.921,430,5.73,431,6.702,432,6.702,433,3.921,434,6.212,435,3.921,436,5.843,437,4.519,438,3.921,439,5.42,440,4.726,441,4.726]],["title/classes/CreatePotentialTestCommand.html",[0,0.24,442,2.73]],["body/classes/CreatePotentialTestCommand.html",[0,0.408,2,0.747,3,0.133,4,0.117,5,0.117,9,0.391,10,1.737,12,0.616,13,0.013,19,0.588,21,0.172,22,1.437,29,0.307,33,0.133,43,0.01,44,0.01,56,1.061,60,0.894,61,0.391,62,0.894,89,2.964,96,1.471,97,0.863,122,1.504,129,1.992,130,2.335,233,3.035,238,1.924,267,2.64,293,2.786,294,4.981,295,3.176,299,2.964,301,2.86,442,4.9,443,2.964,444,5.414,445,4.181,446,3.855,447,4.579,448,4.181,449,4.795,450,3.922,451,4.795,452,2.71,453,4.181]],["title/classes/CreatePotentialTestCommandHandler.html",[0,0.24,454,2.934]],["body/classes/CreatePotentialTestCommandHandler.html",[0,0.373,2,0.625,3,0.111,4,0.098,5,0.098,9,0.327,12,0.547,13,0.013,19,0.522,21,0.188,22,1.202,29,0.272,33,0.111,41,1.086,43,0.009,44,0.009,49,1.219,50,1.761,51,1.123,56,1.219,60,1.027,61,0.449,62,1.027,66,1.138,67,2.505,96,0.858,97,0.722,98,2.173,104,1.485,121,1.6,149,1.896,207,2.054,220,2.054,223,3.284,230,4.8,232,2.473,233,3.839,238,1.708,293,2.473,304,4.555,305,3.482,306,2.906,307,4.903,309,4.555,311,3.159,312,3.989,314,4.336,318,3.111,319,3.989,320,3.989,321,2.906,323,2.155,324,2.536,325,4.007,326,2.906,334,3.159,366,3.159,394,2.155,442,5.152,443,2.711,444,4.951,446,3.465,447,2.267,454,3.989,455,3.497,456,3.989,457,4.475,458,4.011,459,4.011,460,3.497,461,2.704,462,3.497,463,3.159,464,4.011,465,4.011,466,2.155,467,4.011,468,4.011,469,4.011]],["title/classes/CreateTeacherDto.html",[0,0.24,470,2.561]],["body/classes/CreateTeacherDto.html",[0,0.468,1,2.93,2,0.719,3,0.128,4,0.112,5,0.112,7,1.875,9,0.376,10,1.694,11,2.238,12,0.601,13,0.013,14,1.989,15,1.876,16,1.989,17,1.989,18,1.912,19,0.573,21,0.168,29,0.228,33,0.128,34,3.417,43,0.009,44,0.009,51,1.694,61,0.634,70,1.382,129,2.075,130,1.876,171,1.014,191,1.443,240,1.707,264,1.25,267,2.323,285,2.366,286,2.072,288,3.824,289,3.824,290,2.751,298,3.824,299,2.608,336,3.11,382,3.097,430,5.639,440,5.272,441,5.272,470,3.824,471,5.272,472,3.633,473,4.612]],["title/modules/DatabaseModule.html",[171,0.679,183,2.288]],["body/modules/DatabaseModule.html",[0,0.268,3,0.126,4,0.11,5,0.11,13,0.013,21,0.198,25,1.036,26,2.131,29,0.351,33,0.126,34,2.558,43,0.009,44,0.009,66,0.936,81,2.476,93,0.844,97,0.815,130,1.404,171,1.272,173,1.676,174,2.476,183,3.777,190,2.12,194,3.375,196,2.558,209,4.792,220,3.059,221,5.15,238,1.404,299,2.883,316,2.432,367,2.294,394,2.432,396,3.563,474,4.526,475,6.259,476,3.28,477,4.526,478,5.972,479,3.565,480,4.526,481,3.052,482,3.565,483,4.526,484,4.704,485,3.565,486,3.565,487,4.704,488,4.027,489,2.7,490,4.704,491,4.526,492,3.565,493,4.526,494,4.843,495,3.565,496,2.7]],["title/classes/Meeting.html",[0,0.24,268,2.074]],["body/classes/Meeting.html",[0,0.257,1,2.683,2,0.675,3,0.12,4,0.106,5,0.106,7,1.519,9,0.354,10,1.625,11,2.148,12,0.783,13,0.013,14,1.869,15,2.259,16,1.869,17,1.869,18,1.796,19,0.69,21,0.194,23,4.116,24,2.323,25,0.992,29,0.214,33,0.161,43,0.009,44,0.009,98,1.392,110,3.494,191,0.927,240,1.604,264,1.506,268,3.578,269,5.703,270,5.703,273,5.062,282,2.512,285,2.413,286,1.947,339,3.019,382,3.578,497,3.413,498,5.059,499,4.167,500,4.334,501,4.334,502,4.334,503,4.334,504,2.585,505,4.334,506,4.334,507,3.14,508,3.779]],["title/controllers/MeetingController.html",[113,1.445,509,2.934]],["body/controllers/MeetingController.html",[0,0.222,3,0.104,4,0.091,5,0.091,9,0.306,12,0.522,13,0.013,15,1.629,19,0.498,21,0.183,29,0.26,33,0.104,41,1.422,43,0.008,44,0.008,49,1.162,51,1.471,55,2.724,60,0.979,61,0.428,62,0.979,66,1.359,70,1.336,72,2.561,86,1.553,89,2.834,91,2.615,93,0.699,96,0.802,97,1.183,101,1.746,113,1.338,115,1.338,119,2.117,127,3.617,129,1.904,130,2.038,142,3.133,143,2.715,151,2.526,155,5.067,156,2.526,157,3.521,163,2.715,263,4.657,264,1.254,268,4.147,285,1.162,299,2.834,437,3.541,452,2.117,509,3.805,510,3.267,511,2.951,512,3.267,513,3.747,514,4.431,515,5.729,516,5.287,517,5.149,518,4.579,519,3.747,520,3.92,521,3.267,522,3.834,523,3.267,524,4.136,525,2.526,526,3.747,527,2.369,528,3.747,529,3.267,530,3.267,531,3.747,532,3.747]],["title/controllers/MeetingManagementController.html",[113,1.445,533,2.934]],["body/controllers/MeetingManagementController.html",[0,0.334,3,0.157,4,0.137,5,0.137,9,0.459,13,0.013,15,1.747,19,0.534,21,0.191,33,0.157,43,0.011,44,0.011,49,1.519,66,1.165,70,1.325,93,1.05,96,1.205,101,1.873,113,2.449,115,2.01,118,3.797,145,3.026,268,2.884,527,3.561,533,4.971,534,4.626,535,4.971,536,5.58,537,5.632,538,4.679,539,5.632]],["title/modules/MeetingManagementModule.html",[171,0.679,540,2.934]],["body/modules/MeetingManagementModule.html",[0,0.324,3,0.152,4,0.133,5,0.133,13,0.013,21,0.203,33,0.152,43,0.01,44,0.01,93,1.018,115,2.402,145,2.932,171,1.223,173,2.02,174,2.262,175,2.671,176,2.671,177,2.451,178,3.418,179,2.556,186,3.293,187,2.671,188,2.671,189,3.954,190,2.556,200,3.954,268,3.447,533,5.287,534,3.68,535,3.954,538,5.039,540,5.774,541,4.758,542,4.758]],["title/injectables/MeetingManagementService.html",[45,0.896,538,2.561]],["body/injectables/MeetingManagementService.html",[0,0.346,3,0.162,4,0.142,5,0.142,9,0.476,13,0.013,19,0.553,21,0.162,33,0.162,43,0.011,44,0.011,45,1.551,47,2.241,49,1.551,66,1.207,70,1.353,93,1.088,101,1.94,249,3.935,534,4.726,535,5.079,536,5.647,538,4.433,543,5.835,544,4.228,545,5.088]],["title/modules/MeetingModule.html",[171,0.679,546,2.73]],["body/modules/MeetingModule.html",[0,0.233,3,0.109,4,0.096,5,0.096,13,0.013,21,0.214,24,2.066,25,0.898,29,0.194,33,0.109,43,0.008,44,0.008,46,2.386,58,2.435,61,0.574,93,0.731,115,2.392,121,2.162,122,1.083,138,2.008,171,1.041,173,2.3,174,1.626,175,1.919,176,1.919,177,1.761,178,2.91,179,1.837,184,3.408,186,2.653,187,1.919,188,1.919,190,2.539,191,0.839,192,2.912,193,2.48,194,3.063,215,3.233,218,1.919,219,2.48,225,2.48,227,5.417,228,3.929,264,0.811,268,3.603,285,1.682,316,2.912,317,3.04,339,2.778,456,3.928,507,3.928,509,4.501,511,4.269,522,4.716,523,3.419,546,5.265,547,3.419,548,3.921,549,3.419,550,3.921,551,4.726,552,3.655,553,3.655,554,3.233,555,4.269,556,3.921,557,3.419,558,3.428,559,2.48,560,3.063,561,2.107,562,3.921,563,3.419,564,3.921,565,2.339,566,3.088,567,1.919,568,3.921]],["title/injectables/MeetingService.html",[45,0.896,522,2.561]],["body/injectables/MeetingService.html",[0,0.153,3,0.072,4,0.063,5,0.063,9,0.21,11,1.802,12,0.588,13,0.013,19,0.594,21,0.187,25,0.59,29,0.271,33,0.072,41,1.319,43,0.006,44,0.006,45,0.881,46,2.717,47,0.989,49,0.881,50,2.118,51,1.115,52,2.185,55,2.456,56,0.881,60,1.105,61,0.483,62,1.105,66,1.463,68,1.474,69,1.718,70,1.337,72,2.883,73,1.651,86,1.651,89,2.363,91,2.363,93,0.48,96,1.172,97,1.066,98,2.011,101,1.97,104,2.563,122,0.796,123,2.944,124,2.251,131,2.775,135,2.251,149,1.887,157,3.16,191,0.551,216,2.681,246,1.068,263,3.961,264,1.35,267,2.105,268,4.171,282,2.105,285,1.838,339,1.068,450,2.519,452,1.456,489,3.268,492,2.029,511,4.315,512,3.473,516,2.246,517,4.669,522,2.519,524,3.137,525,1.737,529,2.246,530,2.246,551,3.473,557,2.246,559,1.629,561,1.384,565,1.536,569,2.246,570,2.576,571,4.869,572,3.283,573,3.196,574,2.576,575,3.983,576,2.576,577,4.777,578,3.694,579,4.777,580,5.479,581,2.576,582,3.137,583,2.576,584,3.473,585,2.576,586,3.983,587,2.576,588,2.886,589,2.576,590,2.576,591,2.576,592,2.576,593,2.576,594,2.576,595,3.983,596,2.576,597,2.576,598,2.576,599,2.576,600,2.576,601,2.576,602,4.869,603,2.576,604,2.576,605,2.576,606,2.576,607,2.576,608,2.576,609,2.576,610,2.576]],["title/controllers/ModuleManagementController.html",[113,1.445,611,2.934]],["body/controllers/ModuleManagementController.html",[0,0.144,3,0.068,4,0.059,5,0.059,9,0.198,12,0.527,13,0.013,15,1.788,19,0.546,21,0.148,29,0.263,33,0.068,41,1.031,43,0.006,44,0.006,49,0.842,50,2.094,51,1.487,52,2.549,55,2.39,56,0.538,60,0.99,61,0.433,62,0.99,66,1.439,68,1.737,69,1.048,70,1.313,72,2.874,73,1.945,86,1.007,91,2.486,93,0.453,96,0.52,97,1.101,98,1.851,101,2.314,104,2.134,113,0.868,115,0.868,118,1.639,119,1.373,120,2.567,122,1.625,123,2.853,124,2.151,127,2.799,129,1.971,130,1.181,131,2.701,132,2.758,135,1.373,136,2.998,138,1.95,142,2.271,143,1.761,145,1.306,149,0.837,151,1.639,152,4.541,155,4.692,156,1.639,157,3.1,158,4.541,159,4.541,160,4.541,161,4.541,163,3.847,167,1.914,169,1.914,171,1.363,173,2.264,344,2.637,346,3.555,351,1.914,354,2.271,361,3.132,518,3.319,521,2.119,611,2.758,612,4.123,613,2.119,614,2.43,615,2.43,616,2.43,617,2.43,618,4.587,619,2.43,620,2.119,621,2.43,622,2.43,623,2.43,624,2.43,625,2.119,626,2.43,627,2.43,628,2.43]],["title/modules/ModuleManagementModule.html",[171,0.679,629,2.934]],["body/modules/ModuleManagementModule.html",[0,0.222,3,0.104,4,0.091,5,0.091,13,0.013,21,0.226,22,1.123,24,1.746,25,0.858,26,1.123,29,0.185,31,3.267,33,0.104,43,0.008,44,0.008,61,0.428,93,0.699,110,1.683,115,2.346,120,4.088,121,2.095,122,0.749,145,2.013,171,1.364,173,1.387,174,2.513,175,1.834,176,1.834,177,1.683,178,3.241,179,1.755,183,4.053,184,3.241,186,2.57,187,1.834,188,1.834,189,2.715,190,2.46,191,0.802,192,2.821,194,2.117,195,2.715,196,2.117,197,3.805,200,2.715,201,2.715,203,2.526,207,1.919,209,2.526,211,2.715,212,2.715,213,2.715,214,3.267,215,2.235,216,1.834,218,1.834,219,2.369,220,1.919,224,3.805,225,2.369,232,1.683,233,1.834,323,2.013,343,3.541,344,2.265,354,4.278,357,3.267,358,3.321,359,3.267,361,1.919,419,3.267,456,3.805,476,3.805,481,3.541,611,4.393,612,2.526,629,5.719,630,3.267,631,3.747,632,3.267,633,4.535,634,4.136,635,4.136,636,3.747,637,3.805,638,2.715,639,3.267]],["title/injectables/ModuleManagementRepository.html",[45,0.896,633,2.561]],["body/injectables/ModuleManagementRepository.html",[0,0.393,3,0.093,4,0.081,5,0.081,7,1.635,9,0.273,12,0.686,13,0.013,19,0.655,21,0.184,24,1.611,25,0.766,26,1.707,29,0.352,33,0.093,37,4.753,41,0.906,43,0.008,44,0.01,45,1.072,46,2.802,47,1.285,49,1.072,50,2.115,51,1.749,52,2.49,53,3.904,54,3.064,55,2.746,56,0.74,58,3.103,60,1.288,61,0.563,62,1.288,63,2.116,64,3.064,66,1.37,67,2.453,68,1.238,69,1.443,70,1.205,72,2.557,73,1.387,74,2.116,75,4.368,77,2.116,78,3.601,79,3.948,80,3.948,81,1.387,82,3.064,83,2.116,85,2.116,86,1.387,87,3.06,89,1.443,90,2.116,91,1.443,93,0.624,97,0.602,171,0.812,191,0.716,220,2.481,223,2.89,234,2.424,235,2.256,237,2.481,238,1.503,239,3.84,240,2.453,241,2.256,242,2.256,243,2.256,244,2.256,245,2.256,246,1.387,248,2.256,317,2.371,323,3.354,344,2.089,361,3.393,567,2.371,612,3.266,633,3.948,638,2.424,640,3.064,641,4.844,642,3.815,643,4.844,644,3.345,645,3.266,646,3.345]],["title/injectables/ModuleManagementService.html",[45,0.896,354,2.415]],["body/injectables/ModuleManagementService.html",[0,0.173,3,0.081,4,0.071,5,0.071,9,0.238,11,1.08,12,0.622,13,0.013,19,0.623,21,0.183,25,0.668,29,0.31,33,0.081,41,1.186,43,0.007,44,0.007,45,0.969,46,2.244,47,1.121,49,0.969,50,2.168,51,1.636,52,2.623,55,2.422,56,0.969,60,1.167,61,0.511,62,1.167,66,1.511,68,1.621,69,1.888,70,1.385,72,2.923,73,1.815,86,1.815,91,2.52,93,0.544,96,0.624,97,1.127,101,2.082,104,2.318,121,1.747,122,1.65,123,3.139,124,2.475,129,1.693,130,1.358,131,2.933,135,2.475,138,2.243,149,1.005,171,1.366,173,2.434,191,0.624,218,2.143,246,1.209,249,1.967,344,2.941,346,3.664,351,2.298,354,2.612,361,1.494,612,4.598,613,3.818,618,4.838,620,2.544,633,2.769,638,2.114,647,2.917,648,2.917,649,2.917,650,2.917,651,2.917,652,2.917,653,2.917,654,2.544,655,2.917,656,2.917,657,2.917,658,2.917,659,2.917]],["title/classes/PotentialClass.html",[0,0.24,153,1.897]],["body/classes/PotentialClass.html",[0,0.466,1,2.73,2,0.705,3,0.126,4,0.11,5,0.11,7,1.564,9,0.369,10,1.673,11,2.211,12,0.664,13,0.013,14,1.952,15,2.073,16,1.952,17,1.952,18,1.876,19,0.633,21,0.186,23,3.777,24,2.457,25,1.036,26,1.357,29,0.224,33,0.166,43,0.009,44,0.009,61,0.603,70,1.153,98,1.453,110,3.192,116,2.666,122,1.516,153,3.131,191,0.968,198,3.28,240,1.676,264,0.936,282,2.838,283,3.777,286,2.033,339,2.771,342,3.946,382,3.059,400,3.375,499,3.563,504,2.7,660,3.565,661,4.526,662,4.526,663,3.946]],["title/classes/PotentialClassRegisteredEvent.html",[0,0.24,205,2.561]],["body/classes/PotentialClassRegisteredEvent.html",[0,0.441,2,0.797,3,0.142,4,0.125,5,0.125,7,1.692,8,4.776,9,0.417,10,1.809,12,0.642,13,0.013,19,0.612,21,0.142,22,1.532,29,0.253,33,0.142,43,0.01,44,0.01,56,1.131,60,0.953,61,0.417,62,0.953,96,1.516,97,0.92,116,2.825,122,1.415,126,4.124,129,2.052,205,4.706,237,3.309,238,2.004,295,3.309,296,4.457,301,3.049,418,5.132,567,3.466,664,5.579,665,3.447,666,4.457,667,6.176,668,4.457,669,3.704]],["title/classes/PotentialClassRegisteredEventHandler.html",[0,0.24,670,3.189]],["body/classes/PotentialClassRegisteredEventHandler.html",[0,0.333,2,0.642,3,0.115,4,0.1,5,0.1,9,0.336,12,0.557,13,0.013,19,0.532,21,0.205,22,1.236,25,0.944,26,1.911,29,0.277,33,0.115,41,1.116,43,0.009,44,0.009,46,1.583,49,1.241,50,1.786,56,1.241,58,3.317,60,1.046,61,0.458,62,1.046,66,0.852,67,2.076,96,1.2,97,1.148,98,1.323,104,1.526,116,2.543,149,1.932,153,3.54,157,2.628,191,0.882,199,2.986,205,4.863,207,2.111,216,2.017,226,3.594,228,3.547,232,2.519,237,2.873,238,2.123,246,1.709,257,3.594,293,2.519,315,4.891,316,3.013,317,2.745,367,1.583,388,3.782,426,2.459,573,3.859,578,3.782,664,5.022,670,5.39,671,2.779,672,4.62,673,4.122,674,4.122,675,4.891,676,4.891,677,4.064,678,4.122,679,2.986,680,4.122,681,2.986,682,3.594,683,3.594,684,3.594]],["title/classes/PotentialModule.html",[0,0.24,361,2.074]],["body/classes/PotentialModule.html",[0,0.44,1,2.648,2,0.653,3,0.117,4,0.102,5,0.102,7,1.486,9,0.342,10,1.589,11,2.101,12,0.685,13,0.013,14,1.808,15,2.138,16,1.808,17,1.808,18,1.738,19,0.653,21,0.192,23,3.895,24,2.395,25,0.96,26,1.928,29,0.207,33,0.158,43,0.009,44,0.009,61,0.588,70,1.433,98,1.346,110,3.334,116,1.672,122,1.483,153,1.964,171,1.245,191,0.897,240,1.552,264,0.867,283,4.359,285,2.303,286,1.883,344,2.972,361,3.688,373,3.656,374,3.656,382,3.294,499,3.837,504,2.501,637,3.038,640,4.068,685,3.302,686,4.193,687,4.193,688,4.193,689,3.656]],["title/classes/PotentialModuleRegisteredEvent.html",[0,0.24,358,2.561]],["body/classes/PotentialModuleRegisteredEvent.html",[0,0.445,2,0.742,3,0.132,4,0.116,5,0.116,7,1.898,8,5.063,9,0.388,10,1.729,12,0.613,13,0.013,19,0.585,21,0.132,22,1.427,29,0.305,33,0.132,41,1.671,43,0.01,44,0.01,56,1.053,60,0.887,61,0.388,62,0.887,96,1.465,97,0.857,122,1.5,129,1.985,130,2.125,171,1.259,232,2.772,238,1.915,267,2.631,295,3.161,298,4.332,299,2.954,301,2.839,344,2.954,346,4.034,347,4.15,349,5.382,358,4.583,400,3.488,665,3.209,666,4.15,668,4.15,669,3.449,690,5.394,691,4.861]],["title/classes/PotentialModuleRegisteredEventHandler.html",[0,0.24,692,3.189]],["body/classes/PotentialModuleRegisteredEventHandler.html",[0,0.254,2,0.668,3,0.119,4,0.104,5,0.104,9,0.35,12,0.572,13,0.013,19,0.546,21,0.208,22,1.285,25,0.981,26,1.285,29,0.285,33,0.119,41,1.161,43,0.009,44,0.009,46,1.646,49,1.275,50,1.822,56,1.275,58,3.124,60,1.074,61,0.47,62,1.074,66,1.191,67,2.574,96,1.232,97,0.772,98,1.376,104,1.587,149,1.984,157,2.698,171,0.718,191,0.917,207,2.195,223,3.435,228,3.642,232,3.356,238,1.787,246,1.777,293,2.587,318,3.255,325,3.255,344,2.805,358,5.024,361,3.562,388,3.883,573,3.736,578,2.89,638,3.105,639,3.737,654,3.737,671,2.89,672,4.713,677,4.173,679,3.105,682,3.737,683,3.737,684,3.737,690,5.123,692,4.536,693,4.286,694,4.286,695,4.286,696,5.759,697,4.286]],["title/classes/PotentialStudent.html",[0,0.24,339,1.678]],["body/classes/PotentialStudent.html",[0,0.407,1,2.736,2,0.572,3,0.102,4,0.089,5,0.089,7,1.355,9,0.299,10,1.449,11,1.915,12,0.708,13,0.013,14,1.582,15,2.21,16,1.582,17,1.582,18,1.521,19,0.675,21,0.144,23,4.026,24,2.165,25,0.84,26,1.551,29,0.362,33,0.144,34,3.679,43,0.008,44,0.008,61,0.531,68,1.358,70,1.443,98,1.178,110,3.46,122,1.301,191,0.785,240,1.358,264,1.473,273,3.749,282,2.501,286,1.648,339,2.699,367,1.409,382,4.06,400,3.679,423,5.227,424,5.676,425,5.227,426,3.883,436,3.199,437,2.474,499,4.095,504,3.087,558,2.32,698,2.889,699,4.512,700,3.669,701,3.669,702,6.518,703,5.887,704,3.669,705,3.669,706,3.669,707,3.199]],["title/controllers/PotentialStudentController.html",[113,1.445,708,2.934]],["body/controllers/PotentialStudentController.html",[0,0.269,3,0.064,4,0.056,5,0.056,9,0.188,12,0.512,13,0.013,15,1.742,19,0.532,21,0.143,29,0.278,33,0.064,43,0.006,44,0.006,49,0.807,50,2.07,51,1.021,52,2.24,55,2.328,60,0.96,61,0.42,62,0.96,66,1.416,68,1.676,69,0.992,70,1.291,72,2.829,73,1.877,81,1.511,86,0.954,89,2.221,91,2.421,93,0.429,96,0.492,97,1.075,98,1.803,101,2.277,104,2.079,113,1.616,115,0.821,119,1.3,122,1.623,123,2.767,124,2.06,127,2.701,129,1.937,130,1.598,131,2.63,132,2.641,135,1.3,136,2.871,138,1.867,140,3.178,142,2.174,143,1.667,151,1.551,152,4.422,155,4.618,156,1.551,157,3.555,158,4.422,159,4.422,160,4.422,161,4.422,163,3.732,167,1.812,169,1.812,223,2.174,264,1.235,267,1.979,282,3.106,339,2.476,379,3.063,385,2.458,392,2.701,452,1.3,514,4.618,520,2.174,525,1.551,527,1.455,552,4.028,567,1.784,625,2.006,708,2.641,709,2.006,710,2.3,711,2.871,712,2.871,713,2.006,714,2.3,715,6.848,716,2.3,717,3.178,718,2.3,719,4.491,720,2.3,721,4.508,722,2.3,723,2.006,724,2.3,725,2.3,726,2.3,727,2.3,728,2.3,729,2.3]],["title/modules/PotentialStudentModule.html",[171,0.679,730,2.73]],["body/modules/PotentialStudentModule.html",[0,0.4,3,0.128,4,0.112,5,0.112,13,0.013,21,0.216,24,1.534,25,1.056,26,1.383,29,0.228,33,0.128,43,0.009,44,0.009,58,2.072,61,0.55,93,0.86,115,2.159,122,1.208,171,1.322,173,1.707,174,1.912,175,2.257,176,2.257,177,2.072,178,3.16,179,2.161,184,3.482,186,2.959,187,2.257,188,2.257,190,2.833,191,0.987,192,3.249,193,2.917,194,2.607,215,3.607,216,2.257,217,3.633,218,2.257,219,2.917,224,3.342,225,2.917,264,0.954,282,2.323,339,2.507,392,4.55,558,3.824,559,2.917,566,3.633,708,4.888,723,4.022,730,5.317,731,4.022,732,4.612,733,4.022,734,4.612,735,4.612]],["title/classes/PotentialStudentRegisteredEvent.html",[0,0.24,398,2.73]],["body/classes/PotentialStudentRegisteredEvent.html",[0,0.471,2,0.699,3,0.125,4,0.109,5,0.109,7,1.854,8,4.967,9,0.366,10,1.663,12,0.59,13,0.013,19,0.563,21,0.125,22,1.994,29,0.293,33,0.125,43,0.009,44,0.009,56,1.473,60,0.836,61,0.366,62,0.836,96,1.424,97,0.807,122,1.543,129,1.928,171,0.995,232,3.181,264,1.376,282,2.965,293,3.181,295,3.04,301,2.675,378,3.189,379,3.605,380,3.91,398,4.775,400,4.163,418,5.337,430,4.675,665,3.024,667,5.801,669,3.249,691,4.675,736,5.24,737,7.366,738,5.935,739,4.484,740,4.484]],["title/classes/PotentialStudentRegisteredEventHandler.html",[0,0.24,741,3.189]],["body/classes/PotentialStudentRegisteredEventHandler.html",[0,0.234,2,0.614,3,0.109,4,0.096,5,0.096,9,0.321,12,0.54,13,0.013,19,0.515,21,0.202,22,1.18,25,0.901,26,1.18,29,0.332,33,0.109,43,0.008,44,0.008,49,1.203,50,1.744,51,1.103,53,2.225,56,1.203,58,3.015,60,1.014,61,0.443,62,1.014,66,0.814,67,2.012,96,1.163,97,0.709,98,1.999,104,2.012,149,1.872,157,3.3,191,0.842,207,2.017,216,1.927,228,3.937,232,3.468,246,1.632,264,1.287,285,2.316,293,3.015,299,2.685,324,2.49,325,3.518,339,1.632,367,1.512,378,2.92,379,2.66,396,2.349,398,5.129,408,3.433,409,3.433,410,3.433,411,3.433,426,2.349,544,2.853,561,2.115,565,2.349,573,3.653,578,3.665,671,2.655,672,5.104,677,3.939,679,2.853,681,2.853,703,3.101,736,4.903,741,4.281,742,3.433,743,3.433,744,3.937,745,3.937,746,3.101,747,3.937,748,3.937,749,3.433,750,3.937,751,3.937,752,3.937,753,3.937,754,3.937,755,3.433]],["title/injectables/PotentialStudentService.html",[45,0.896,392,2.415]],["body/injectables/PotentialStudentService.html",[0,0.312,3,0.081,4,0.071,5,0.071,9,0.238,11,1.08,12,0.622,13,0.013,19,0.623,21,0.183,25,0.668,29,0.31,33,0.081,41,1.186,43,0.007,44,0.007,45,0.969,46,2.244,47,1.121,49,0.969,50,2.168,51,1.226,52,2.33,55,2.422,56,0.969,60,1.167,61,0.511,62,1.167,66,1.511,68,1.621,69,1.888,70,1.385,72,2.905,73,1.815,86,1.815,89,2.52,91,2.52,93,0.544,96,0.624,97,1.127,101,2.082,104,2.318,122,1.65,123,3.139,124,2.475,129,1.693,131,2.933,135,2.475,138,2.243,149,1.005,191,0.624,218,2.143,246,1.209,264,1.41,267,2.244,282,3.129,339,1.209,379,3.218,385,2.953,392,2.612,450,2.769,452,1.649,489,3.485,525,1.967,552,4.433,559,1.845,582,3.449,584,3.818,588,3.173,713,3.818,721,4.838,756,2.544,757,2.917,758,2.917,759,4.379,760,2.917,761,2.917,762,2.917,763,2.917,764,2.917,765,2.544,766,2.917,767,2.917,768,2.917,769,2.917,770,2.917]],["title/classes/PotentialTest.html",[0,0.24,466,2.175]],["body/classes/PotentialTest.html",[0,0.207,1,2.445,2,0.544,3,0.097,4,0.085,5,0.085,7,1.308,9,0.285,10,1.399,11,1.849,12,0.766,13,0.013,14,1.505,15,2.238,16,1.505,17,2.515,18,1.447,19,0.684,21,0.139,23,4.077,24,2.24,25,0.799,26,1.748,29,0.173,33,0.139,43,0.008,44,0.008,61,0.549,70,1.471,81,2.639,98,1.121,110,3.5,122,1.557,171,1.129,191,0.747,240,1.292,283,4.026,286,1.568,382,3.589,390,3.933,437,4.292,443,3.111,446,3.991,466,3.619,499,4.18,504,2.082,640,3.688,771,2.749,772,5.873,773,5.305,774,5.873,775,6.291,776,3.49,777,3.49,778,3.933,779,3.49,780,4.355,781,4.355,782,3.49,783,3.49,784,3.49,785,2.749,786,2.529,787,3.043]],["title/classes/PotentialTestRegisteredEvent.html",[0,0.24,461,2.73]],["body/classes/PotentialTestRegisteredEvent.html",[0,0.411,2,0.759,3,0.135,4,0.119,5,0.119,7,1.64,8,4.668,9,0.397,10,1.754,12,0.622,13,0.013,19,0.593,21,0.135,22,1.459,29,0.31,33,0.135,43,0.01,44,0.01,56,1.077,60,0.908,61,0.397,62,0.908,89,2.986,96,1.481,97,0.876,122,1.511,129,2.006,232,2.813,238,1.942,267,2.659,295,3.207,299,2.986,301,2.904,418,5.016,443,2.986,446,3.873,447,4.273,448,4.244,450,3.96,461,4.928,515,5.46,665,3.282,669,3.527,691,4.932,788,5.452,789,4.867,790,4.867]],["title/classes/PotentialTestRegisteredEventHandler.html",[0,0.24,791,2.934]],["body/classes/PotentialTestRegisteredEventHandler.html",[0,0.342,2,0.532,3,0.095,4,0.083,5,0.083,9,0.279,12,0.489,13,0.013,19,0.466,21,0.193,22,1.727,24,1.635,25,0.782,26,1.024,29,0.285,33,0.095,41,0.925,43,0.008,44,0.008,49,1.089,50,1.614,56,1.395,58,3.125,60,0.917,61,0.401,62,0.917,66,1.017,67,2.333,96,1.052,97,1.037,98,1.85,104,1.821,149,1.694,157,2.304,171,0.825,191,0.731,207,1.75,216,2.82,223,3.76,228,3.11,232,3.296,238,1.526,246,1.416,285,2.408,293,2.831,324,2.16,325,3.775,367,1.312,378,2.642,388,3.316,394,3.387,399,4.288,400,2.779,401,4.288,443,2.485,446,2.519,447,1.931,456,3.564,461,5.233,466,1.835,544,2.475,552,4.504,561,1.835,565,2.038,573,3.712,578,4.504,579,4.288,671,2.304,672,4.84,675,5.496,677,3.564,679,2.475,681,4.175,742,2.979,743,2.979,746,2.691,749,2.979,755,2.979,773,2.691,778,2.691,788,4.538,791,4.567,792,5.762,793,5.762,794,4.918,795,3.416,796,4.918,797,3.416,798,3.416,799,3.416,800,3.416,801,3.416,802,3.416,803,3.416,804,2.979,805,3.416,806,3.416,807,3.416]],["title/injectables/RabbitmqService.html",[45,0.896,573,1.981]],["body/injectables/RabbitmqService.html",[0,0.325,3,0.111,4,0.097,5,0.097,9,0.324,12,0.544,13,0.013,19,0.519,21,0.174,29,0.35,33,0.111,43,0.008,44,0.008,45,1.212,47,1.528,49,1.212,56,1.385,60,1.021,61,0.55,62,1.021,66,1.394,67,2.771,70,1.472,93,0.742,96,0.851,97,1.127,101,1.323,138,3.206,149,1.37,157,3.823,216,3.576,218,3.063,237,2.037,238,1.942,318,3.811,367,1.528,396,2.373,494,2.882,496,3.265,573,3.3,577,3.468,681,3.966,808,3.468,809,6.259,810,3.978,811,7.626,812,3.978,813,5.755,814,7.07,815,5.474,816,3.978,817,5.474,818,5.896,819,7.307,820,5.474,821,2.682,822,3.978,823,3.468,824,3.468,825,2.882,826,3.978,827,3.978]],["title/modules/RmqModule.html",[171,0.679,184,1.897]],["body/modules/RmqModule.html",[0,0.198,3,0.093,4,0.081,5,0.081,12,0.332,13,0.013,19,0.317,21,0.184,29,0.341,33,0.093,34,1.887,43,0.008,44,0.008,49,0.739,60,0.623,61,0.54,62,0.623,66,1.369,70,0.645,81,2.006,93,0.623,97,0.871,101,1.11,130,1.501,138,1.711,171,1.343,173,1.236,174,2.358,175,1.634,176,1.634,177,1.5,178,2.665,179,2.922,184,3.482,186,2.368,187,1.634,188,1.634,190,1.565,196,1.887,209,4.917,215,3.394,216,3.569,238,1.036,299,2.453,316,1.794,367,1.283,378,3.057,394,3.057,396,3.394,475,5.853,476,4.122,479,2.63,481,2.252,482,2.63,484,3.811,485,2.63,486,2.63,487,3.811,488,3.262,489,1.992,490,2.63,494,4.122,495,2.63,496,1.992,573,3.782,635,3.811,813,4.913,818,3.811,821,2.252,825,3.506,828,2.912,829,2.912,830,2.912,831,2.63,832,4.219,833,3.34,834,5.002,835,3.34,836,5.439,837,5.439,838,5.439,839,4.961,840,4.219,841,2.912,842,2.912,843,5.773,844,2.912,845,2.912,846,2.912,847,2.912,848,2.912,849,2.912,850,2.912,851,2.912,852,2.912]],["title/interfaces/RmqModuleOptions.html",[378,2.175,834,2.934]],["body/interfaces/RmqModuleOptions.html",[0,0.218,3,0.102,4,0.09,5,0.09,9,0.3,10,1.453,12,0.366,13,0.013,21,0.181,29,0.353,33,0.102,34,2.081,43,0.008,44,0.008,61,0.598,66,1.242,70,1.16,81,2.151,93,0.687,97,0.934,101,1.225,130,1.609,138,1.886,171,1.33,174,1.527,178,1.725,179,2.43,184,2.814,190,1.725,196,2.081,209,4.809,215,3.095,216,3.662,238,1.142,299,2.59,367,1.415,378,3.227,394,2.787,396,3.583,475,5.991,476,4.352,479,2.9,481,2.483,482,2.9,484,4.086,485,2.9,486,2.9,487,4.086,488,3.498,489,2.197,490,2.9,494,4.352,495,2.9,496,2.197,573,2.94,635,2.9,813,5.136,818,4.086,821,2.483,825,3.759,831,2.9,832,3.211,834,4.981,836,4.524,837,4.524,838,5.237,839,5.237,840,4.524,841,3.211,842,3.211,843,5.994,844,3.211,845,3.211,846,3.211,847,3.211,848,3.211,849,3.211,850,3.211,851,3.211,852,3.211,853,3.683]],["title/controllers/StudentManagementController.html",[113,1.445,854,2.934]],["body/controllers/StudentManagementController.html",[0,0.323,3,0.11,4,0.096,5,0.096,9,0.322,12,0.392,13,0.013,15,1.224,19,0.374,21,0.187,22,1.183,29,0.332,33,0.11,41,1.068,43,0.008,44,0.008,49,1.205,50,1.882,60,0.736,61,0.322,62,0.736,66,1.126,67,2.307,68,2.015,93,0.736,96,1.165,97,0.71,98,1.748,101,1.81,113,1.943,115,1.408,118,2.66,119,2.23,120,4.531,121,1.574,122,1.343,127,4.205,129,2.238,130,1.689,131,1.848,142,2.353,149,1.359,203,2.66,233,3.05,264,1.126,282,3.081,295,2.021,305,2.495,317,1.931,318,3.076,341,3.107,367,2.394,375,2.66,376,2.859,379,3.45,384,3.44,385,2.66,388,3.67,396,2.353,402,3.44,426,2.353,450,3.442,514,2.66,527,2.495,567,3.05,642,4.287,711,4.287,712,4.287,854,4.516,855,3.67,856,6.232,857,3.945,858,3.945,859,5.443,860,5.443,861,5.434,862,5.434,863,3.945,864,3.945,865,3.945,866,3.945,867,3.44,868,3.44,869,3.945,870,3.44]],["title/modules/StudentManagementModule.html",[171,0.679,871,2.934]],["body/modules/StudentManagementModule.html",[0,0.23,2,0.604,3,0.108,4,0.094,5,0.094,13,0.013,21,0.224,22,1.161,24,1.787,25,0.887,29,0.266,33,0.108,43,0.008,44,0.008,61,0.316,93,0.722,110,1.74,115,2.38,121,1.545,145,2.081,171,1.246,173,1.99,174,2.559,175,1.896,176,1.896,177,1.74,178,2.892,179,1.815,183,4.096,184,3.281,186,2.631,187,1.896,188,1.896,189,2.807,190,3.123,191,0.829,192,2.888,193,2.45,194,2.189,195,2.807,196,2.189,197,3.895,200,2.807,210,3.378,211,2.807,212,2.807,213,2.807,264,0.801,282,2.371,285,1.202,316,3.316,339,1.606,391,4.583,546,4.887,554,3.207,555,4.234,558,3.399,559,2.45,560,3.038,561,2.081,565,2.311,566,3.051,567,1.896,730,4.887,854,4.473,855,2.612,871,5.918,872,3.378,873,3.378,874,3.378,875,4.583,876,4.687,877,3.874,878,3.874,879,3.874,880,3.874,881,3.874,882,3.874]],["title/injectables/StudentManagementRepository.html",[45,0.896,406,2.73]],["body/injectables/StudentManagementRepository.html",[0,0.427,3,0.089,4,0.078,5,0.078,7,1.6,9,0.261,12,0.675,13,0.013,19,0.644,21,0.181,24,1.558,25,0.732,26,1.663,29,0.363,33,0.089,37,4.72,41,0.866,43,0.007,44,0.009,45,1.037,46,2.972,47,1.228,49,1.352,50,2.093,51,1.711,52,2.437,53,3.842,54,2.963,55,2.697,56,1.44,58,3.475,60,1.268,61,0.555,62,1.268,63,2.021,64,2.963,66,1.345,67,2.408,68,1.183,69,1.378,70,1.18,72,2.517,73,1.325,74,2.021,75,4.299,77,2.021,78,3.508,79,3.864,80,3.864,81,1.325,82,2.963,83,2.021,85,2.021,86,1.325,87,2.981,89,1.378,90,2.021,91,1.378,93,0.596,97,0.575,121,1.275,122,0.639,191,0.684,234,2.316,235,2.155,237,1.637,238,0.992,239,4.12,240,2.408,241,2.155,242,2.155,243,2.155,244,2.155,245,2.155,246,2.3,248,2.155,264,0.969,323,1.717,339,2.912,367,1.8,406,4.12,496,2.795,552,2.155,554,2.795,559,2.021,645,3.16,824,4.086,855,3.16,883,3.196,884,3.16,885,4.086,886,3.196,887,2.517,888,3.196]],["title/injectables/StudentManagementService.html",[45,0.896,391,2.561]],["body/injectables/StudentManagementService.html",[0,0.434,3,0.153,4,0.134,5,0.134,13,0.013,21,0.153,29,0.335,33,0.153,43,0.011,44,0.011,45,1.497,46,2.114,47,2.114,56,1.218,93,1.026,96,1.178,121,2.195,149,1.896,218,2.693,249,3.711,264,1.138,282,2.114,317,3.311,391,4.632,406,4.939,567,3.311,765,4.799,855,3.711,889,5.898,890,5.898,891,4.902,892,4.335]],["title/controllers/StudyProgramController.html",[113,1.445,893,2.934]],["body/controllers/StudyProgramController.html",[0,0.33,3,0.155,4,0.136,5,0.136,9,0.454,13,0.013,15,1.727,19,0.528,21,0.189,33,0.155,43,0.011,44,0.011,49,1.508,66,1.151,70,1.315,93,1.038,96,1.191,101,1.851,113,1.987,115,1.987,119,3.146,426,4.064,527,3.521,536,5.558,893,4.936,894,4.593,895,4.936,896,4.384,897,5.365,898,5.567,899,4.655,900,4.034,901,5.567,902,5.567]],["title/modules/StudyProgramModule.html",[171,0.679,903,2.934]],["body/modules/StudyProgramModule.html",[0,0.324,3,0.152,4,0.133,5,0.133,13,0.013,21,0.203,33,0.152,43,0.01,44,0.01,93,1.018,115,2.402,171,1.223,173,2.02,174,2.262,175,2.671,176,2.671,177,2.451,178,3.418,179,2.556,186,3.293,187,2.671,188,2.671,190,2.556,426,4.014,893,5.287,894,3.68,895,3.954,899,5.039,900,3.954,903,5.774,904,4.758,905,4.758,906,4.758,907,4.758]],["title/injectables/StudyProgramService.html",[45,0.896,899,2.561]],["body/injectables/StudyProgramService.html",[0,0.346,3,0.162,4,0.142,5,0.142,9,0.476,13,0.013,19,0.553,21,0.162,33,0.162,43,0.011,44,0.011,45,1.551,47,2.241,49,1.551,66,1.207,70,1.353,93,1.088,101,1.94,536,5.647,544,4.228,545,5.088,894,4.726,895,5.079,899,4.433,908,4.596,909,5.835]],["title/classes/Teacher.html",[0,0.24,285,1.256]],["body/classes/Teacher.html",[0,0.445,1,2.955,2,0.742,3,0.132,4,0.116,5,0.116,7,1.616,9,0.388,10,1.729,11,2.285,12,0.613,13,0.013,14,2.053,15,1.915,16,2.053,17,2.053,18,1.973,19,0.585,21,0.172,23,3.488,24,2.41,25,1.09,26,1.85,29,0.358,33,0.172,34,2.69,43,0.01,44,0.01,61,0.591,68,1.762,70,1.192,98,1.528,110,2.772,191,1.018,240,1.762,264,1.276,285,2.329,286,2.138,367,1.828,382,3.508,400,2.69,499,2.839,504,3.682,560,2.69,699,5.382,702,5.382,703,4.861,910,3.749,911,4.76,912,3.749]],["title/classes/Teacher-1.html",[0,0.2,285,1.047,913,2.942]],["body/classes/Teacher-1.html",[0,0.293,1,2.823,2,0.77,3,0.137,4,0.12,5,0.12,7,1.656,9,0.403,10,1.771,11,2.341,12,0.628,13,0.013,14,2.131,15,1.962,16,2.131,17,2.131,18,2.049,19,0.599,21,0.176,23,3.573,24,2.526,25,1.131,26,2.09,29,0.244,33,0.176,43,0.01,44,0.01,61,0.62,70,1.221,98,1.587,110,2.84,191,1.057,240,1.829,285,2.451,286,2.22,382,2.531,443,2.727,499,2.948,504,2.948,560,2.793,640,4.41,785,3.892,912,3.892,914,3.892,915,4.942]],["title/controllers/TeacherController.html",[113,1.445,916,2.934]],["body/controllers/TeacherController.html",[0,0.279,2,0.5,3,0.089,4,0.078,5,0.078,9,0.262,12,0.552,13,0.013,15,1.898,19,0.58,21,0.181,29,0.348,33,0.089,41,1.272,43,0.007,44,0.007,49,1.04,50,2.061,51,1.557,53,1.812,60,1.036,61,0.453,62,1.036,66,1.407,68,1.187,81,1.947,89,2.026,93,0.598,96,0.686,97,0.846,101,1.848,104,1.187,113,1.677,115,1.145,119,1.812,123,3.288,127,3.65,129,2.243,130,1.457,131,1.502,142,1.913,151,2.162,155,4.126,156,2.162,157,3.503,173,1.187,223,3.316,264,1.347,267,1.804,285,2.351,295,3.486,299,2.809,316,1.723,325,3.141,367,1.804,450,2.971,452,1.812,470,4.447,489,2.802,514,3.167,527,2.028,553,5.042,567,1.569,642,3.7,676,4.096,711,2.526,712,2.526,821,2.162,868,4.096,870,4.096,887,3.7,916,3.404,917,2.796,918,4.697,919,4.697,920,4.697,921,4.697,922,4.697,923,2.796,924,3.207,925,5.558,926,3.207,927,4.447,928,4.697,929,3.207,930,3.207,931,3.207,932,4.697,933,3.207,934,4.697,935,6.119,936,5.558,937,2.796,938,2.526,939,3.207,940,3.207,941,3.207,942,3.207,943,3.207,944,3.207,945,3.207,946,3.207,947,3.207]],["title/modules/TeacherModule.html",[171,0.679,875,2.561]],["body/modules/TeacherModule.html",[0,0.249,2,0.655,3,0.117,4,0.102,5,0.102,13,0.013,21,0.218,24,1.89,25,0.962,26,1.26,29,0.341,33,0.117,43,0.009,44,0.009,61,0.525,93,0.784,115,2.573,121,1.676,171,1.208,173,2.668,174,1.742,175,2.056,176,2.056,177,1.887,178,3.376,179,1.969,184,3.48,186,2.781,187,2.056,188,2.056,190,3.232,191,0.899,192,3.053,193,2.657,194,3.212,215,3.39,216,2.056,217,3.309,219,2.657,221,3.045,224,4.118,225,2.657,264,0.869,285,2.236,316,2.258,382,3.298,407,3.309,498,3.664,553,2.833,554,2.507,560,3.212,561,2.258,565,2.507,825,3.045,875,4.951,916,4.666,927,4.698,937,3.664,948,3.664,949,4.202,950,3.664,951,4.202,952,5.683,953,4.202,954,3.309,955,4.202,956,3.664]],["title/injectables/TeacherRepository.html",[45,0.896,572,2.73]],["body/injectables/TeacherRepository.html",[0,0.418,3,0.09,4,0.079,5,0.079,7,1.609,9,0.264,12,0.678,13,0.013,19,0.647,21,0.182,24,2.043,25,0.74,26,1.959,29,0.365,33,0.09,37,4.729,41,0.876,43,0.007,44,0.01,45,1.046,46,2.95,47,1.242,49,1.046,50,2.098,51,1.721,52,2.45,53,3.858,54,2.989,55,2.709,56,1.36,58,3.411,60,1.273,61,0.557,62,1.273,63,2.045,64,2.989,66,1.352,67,2.419,68,1.197,69,1.395,70,1.186,72,2.527,73,1.341,74,2.045,75,4.317,77,2.045,78,3.532,79,3.885,80,3.885,81,1.341,82,2.989,83,2.045,85,2.045,86,1.341,87,3.001,89,1.395,90,2.045,91,1.395,93,0.603,97,0.582,121,1.29,129,0.937,191,0.692,235,2.18,237,1.656,238,1.003,239,3.766,240,2.419,241,2.18,242,2.18,243,2.18,244,2.18,245,2.18,246,2.315,248,2.18,264,0.977,285,2.118,317,2.313,323,1.737,367,1.815,496,2.819,553,3.187,554,2.819,561,1.737,572,4.142,645,3.187,884,3.187,885,4.121,957,2.82,958,4.121,959,3.234,960,3.234]],["title/injectables/TeacherService.html",[45,0.896,927,2.561]],["body/injectables/TeacherService.html",[0,0.348,3,0.098,4,0.086,5,0.086,9,0.288,12,0.672,13,0.013,19,0.667,21,0.196,25,0.809,29,0.317,33,0.098,43,0.008,44,0.008,45,1.115,46,2.459,47,1.358,49,1.115,50,2.237,51,1.412,52,2.01,55,2.089,56,1.3,60,1.262,61,0.552,62,1.262,66,1.4,69,2.173,70,1.455,72,2.37,86,2.089,93,0.659,96,0.756,97,0.636,101,2.251,104,2.506,120,3.398,121,1.41,123,3.44,124,2.848,131,3.171,135,2.848,149,1.218,191,0.756,218,1.73,237,1.81,238,1.097,246,2.435,264,1.498,285,2.1,317,2.466,323,2.708,367,1.936,452,1.998,470,4.28,496,3.006,525,2.383,553,2.383,561,1.899,567,2.466,572,4.992,746,2.784,884,3.398,889,4.394,890,4.394,923,4.394,927,4.049,938,3.969,961,3.082,962,3.535,963,3.535,964,3.535,965,3.535,966,3.535,967,3.535,968,5.365,969,3.535,970,3.535,971,3.535,972,3.535,973,3.535,974,3.535]],["title/controllers/TestProgramController.html",[113,1.445,975,2.934]],["body/controllers/TestProgramController.html",[0,0.342,3,0.095,4,0.083,5,0.083,9,0.279,12,0.489,13,0.013,15,1.789,19,0.547,21,0.186,22,1.026,29,0.285,33,0.095,41,1.562,43,0.008,44,0.008,49,1.09,50,2.094,52,1.365,56,0.757,60,0.918,61,0.402,62,0.918,66,1.44,67,2.577,68,1.823,70,1.114,72,2.655,73,2.615,81,2.041,93,0.638,96,1.234,97,1.038,98,1.099,101,1.637,113,2.059,115,1.222,119,1.934,121,1.964,122,1.613,127,3.441,129,1.937,130,1.957,131,2.307,132,3.568,142,2.042,149,1.987,171,0.826,203,2.308,233,1.675,318,3.934,442,2.308,443,2.721,446,4.094,447,3.934,452,1.934,453,2.984,460,2.984,514,4.694,717,4.294,719,4.294,861,5.029,862,5.029,867,2.984,896,2.695,897,4.969,900,2.48,975,3.568,976,4.254,977,5.482,978,4.294,979,5.501,980,3.422,981,3.422,982,2.984,983,3.422,984,3.422,985,3.648,986,3.422,987,3.422,988,3.422,989,3.422,990,3.422,991,3.422]],["title/modules/TestProgramModule.html",[171,0.679,992,2.934]],["body/modules/TestProgramModule.html",[0,0.229,2,0.601,3,0.107,4,0.094,5,0.094,13,0.013,21,0.227,22,1.157,24,1.782,25,0.883,33,0.107,43,0.008,44,0.008,61,0.502,93,0.72,110,1.733,115,2.199,171,1.033,173,2.28,174,1.6,175,1.888,176,1.888,177,1.733,178,2.886,179,1.808,183,4.091,184,3.276,186,2.623,187,1.888,188,1.888,190,2.511,191,0.826,192,2.88,193,2.44,194,3.029,195,2.796,196,2.181,197,3.884,203,2.602,211,2.796,212,2.796,213,2.796,219,2.44,225,2.44,264,0.798,285,1.197,316,2.073,394,2.073,443,2.312,446,3.155,454,3.884,457,4.318,462,3.365,463,3.039,466,2.073,481,2.602,555,3.039,560,3.029,561,2.073,563,3.365,565,2.302,786,3.884,791,3.884,875,2.44,900,2.796,906,3.365,907,3.365,956,5.371,975,4.463,976,2.602,985,4.578,992,5.861,993,3.365,994,3.859,995,3.365,996,3.859,997,3.859,998,3.039,999,3.859,1000,3.859,1001,3.859,1002,3.859,1003,3.859,1004,5.36,1005,3.859]],["title/injectables/TestProgramRepository.html",[45,0.896,457,2.415]],["body/injectables/TestProgramRepository.html",[0,0.447,3,0.087,4,0.076,5,0.076,7,1.581,9,0.254,12,0.669,13,0.013,19,0.639,21,0.179,25,0.714,26,1.64,29,0.345,33,0.087,37,4.702,41,0.845,43,0.007,44,0.009,45,1.336,46,2.894,47,1.198,49,1.336,50,2.081,51,1.691,52,2.408,53,3.809,54,2.911,55,2.67,56,1.336,58,3.213,60,1.257,61,0.55,62,1.257,63,1.973,64,2.911,66,1.332,67,2.384,68,1.155,69,1.345,70,1.166,72,2.495,73,1.293,74,1.973,75,4.262,77,1.973,78,3.459,79,3.819,80,3.819,81,1.293,82,2.911,83,1.973,85,1.973,86,1.293,87,2.939,89,1.345,90,1.973,91,1.345,93,0.582,97,0.562,129,1.334,130,0.968,191,1.17,220,2.357,235,2.103,239,4.071,240,2.384,241,2.103,242,2.103,243,2.103,244,2.103,245,2.103,246,1.908,248,2.103,317,2.677,367,1.768,394,2.473,407,3.625,443,1.985,457,4.02,466,3.844,554,2.746,567,2.252,640,4.408,645,3.688,804,2.72,884,2.103,887,2.457,958,2.72,976,3.103,998,2.457,1006,2.72,1007,3.625,1008,3.119,1009,4.602,1010,3.119,1011,4.602,1012,3.119,1013,3.119,1014,3.119]],["title/injectables/TestProgramService.html",[45,0.896,985,2.561]],["body/injectables/TestProgramService.html",[0,0.435,3,0.103,4,0.09,5,0.09,9,0.302,12,0.517,13,0.013,19,0.571,21,0.182,25,0.848,29,0.298,33,0.103,43,0.008,44,0.008,45,1.447,47,1.423,49,1.447,50,2.001,52,2.078,56,1.447,60,0.971,61,0.425,62,0.971,66,1.352,67,2.42,70,1.163,72,2.645,73,2.159,81,2.159,93,0.691,96,0.792,97,0.938,101,1.732,122,1.041,129,1.509,131,2.44,149,1.276,220,2.668,231,4.542,238,1.616,246,2.159,305,3.294,317,2.549,318,3.695,319,3.774,323,2.799,367,2.001,394,2.799,443,2.819,446,3.901,457,4.544,463,2.917,466,1.99,489,3.107,554,3.107,567,2.549,582,4.103,645,3.512,884,2.497,891,4.737,892,5.149,897,5.902,908,2.917,976,4.408,977,4.103,978,4.542,979,5.7,982,4.542,985,4.519,998,2.917,1015,3.704,1016,3.704,1017,3.704,1018,5.209,1019,3.704,1020,3.704,1021,3.704,1022,3.704]],["title/classes/UpdateMeetingDto.html",[0,0.24,517,2.73]],["body/classes/UpdateMeetingDto.html",[0,0.338,2,0.888,3,0.158,4,0.139,5,0.139,7,1.947,13,0.013,21,0.192,28,3.399,29,0.282,33,0.158,43,0.011,44,0.011,51,1.596,87,3.712,263,4.703,264,1.178,266,4.488,267,2.654,268,3.539,517,4.659,520,4.122,524,4.488,588,5.007,954,5.442,1023,4.968,1024,3.842,1025,3.603,1026,5.698]],["title/classes/UpdatePotentialClassDto.html",[0,0.24,139,2.73]],["body/classes/UpdatePotentialClassDto.html",[0,0.442,2,0.893,3,0.159,4,0.14,5,0.14,7,1.952,10,1.942,13,0.013,21,0.193,28,3.419,29,0.283,33,0.159,43,0.011,44,0.011,87,3.726,116,2.286,122,1.386,126,4.162,139,4.676,267,2.664,520,4.137,1024,3.865,1025,3.625,1027,4.998,1028,5.732]],["title/classes/UpdatePotentialModuleDto.html",[0,0.24,618,2.73]],["body/classes/UpdatePotentialModuleDto.html",[0,0.338,2,0.888,3,0.158,4,0.139,5,0.139,7,1.947,13,0.013,21,0.192,28,3.399,29,0.282,33,0.158,43,0.011,44,0.011,87,3.712,122,1.381,171,1.158,267,2.654,344,2.457,346,4.154,520,4.122,588,5.007,618,4.659,954,5.442,1024,3.842,1025,3.603,1029,4.968,1030,5.698]],["title/classes/UpdatePotentialStudentDto.html",[0,0.24,721,2.73]],["body/classes/UpdatePotentialStudentDto.html",[0,0.439,2,0.878,3,0.157,4,0.137,5,0.137,7,1.937,13,0.013,21,0.191,28,4.414,29,0.278,33,0.157,43,0.011,44,0.011,51,1.577,122,1.371,264,1.165,267,2.635,282,2.635,379,2.756,385,3.797,422,4.435,520,4.093,721,4.626,1024,4.989,1025,4.679,1031,4.91,1032,6.861,1033,5.632]],["title/classes/UpdateTeacherDto.html",[0,0.24,968,2.934]],["body/classes/UpdateTeacherDto.html",[0,0.439,2,0.878,3,0.157,4,0.137,5,0.137,7,1.937,13,0.013,21,0.191,28,4.414,29,0.278,33,0.157,43,0.011,44,0.011,51,1.577,129,1.988,264,1.165,285,2.128,298,4.339,299,2.959,470,3.561,472,4.435,520,4.093,938,4.435,968,4.971,1024,4.989,1025,4.679,1034,4.91,1035,5.632]],["title/coverage.html",[1036,4.364]],["body/coverage.html",[0,0.478,1,0.815,5,0.052,6,1.85,12,0.211,13,0.013,36,1.85,41,0.575,43,0.005,44,0.005,45,1.624,46,0.815,48,1.85,113,2.323,114,1.537,116,2.86,117,2.893,118,3.317,126,1.14,139,1.43,144,1.266,153,0.994,177,2.589,185,1.266,192,2.643,198,1.537,202,1.43,205,1.342,234,3.109,249,3.317,263,1.342,264,1.638,265,1.85,266,2.691,268,1.087,285,1.06,291,3.438,292,1.85,302,1.671,303,1.85,335,1.85,339,0.879,343,1.43,344,3.092,345,1.85,346,1.14,352,1.671,353,1.85,354,1.266,358,1.342,361,1.087,369,1.85,375,1.43,376,2.476,377,1.85,378,1.14,379,1.038,386,1.671,387,1.85,391,1.342,392,1.266,398,1.43,406,1.43,421,1.85,422,2.691,442,1.43,443,3.13,444,2.691,445,1.85,447,1.199,454,1.537,455,1.85,457,1.266,461,1.43,466,1.14,470,1.342,471,1.85,472,2.691,488,4.504,497,2.691,507,1.537,509,1.537,510,1.85,517,1.43,522,1.342,533,1.537,534,2.893,535,2.476,538,1.342,558,1.342,560,1.931,569,1.85,572,1.43,573,1.038,611,1.537,612,2.893,618,1.43,633,1.342,637,1.537,660,2.691,664,2.691,665,3.317,670,1.671,671,3.317,685,2.691,690,2.691,692,1.671,698,2.691,708,1.537,709,1.85,721,1.43,736,2.691,741,1.671,756,1.85,771,2.691,786,1.537,788,2.691,791,1.537,808,1.85,831,1.671,834,1.537,854,1.537,855,2.893,893,1.537,894,2.893,895,2.476,896,2.691,899,1.342,908,2.691,910,2.691,914,2.691,916,1.537,917,1.85,927,1.342,957,1.85,961,1.85,968,1.537,975,1.537,976,2.893,985,1.342,1006,1.85,1023,1.85,1027,1.85,1029,1.85,1031,1.85,1034,1.85,1036,1.671,1037,1.85,1038,2.121,1039,8.072,1040,3.417,1041,4.919,1042,4.919,1043,6.957,1044,6.957,1045,2.979,1046,6.829,1047,7.532,1048,2.121,1049,2.121,1050,5.284,1051,4.289,1052,2.121,1053,2.121,1054,7.169,1055,6.304,1056,5.763,1057,6.304,1058,1.85,1059,4.29,1060,4.29,1061,3.417,1062,3.417,1063,4.919,1064,2.121,1065,2.121,1066,4.29,1067,4.29,1068,2.121,1069,2.121,1070,1.85,1071,2.121,1072,2.121,1073,2.121,1074,2.121,1075,3.741,1076,1.85,1077,1.85,1078,1.85,1079,3.417,1080,3.417,1081,3.417,1082,2.121,1083,2.121]],["title/classes/createPotentialTestDto.html",[0,0.24,447,2.288]],["body/classes/createPotentialTestDto.html",[0,0.381,1,2.467,2,0.555,3,0.099,4,0.087,5,0.087,7,1.327,9,0.29,10,1.419,11,1.875,12,0.721,13,0.013,14,1.536,15,2.251,16,1.536,17,1.536,18,1.476,19,0.688,21,0.141,29,0.176,33,0.099,43,0.008,44,0.008,61,0.554,70,1.432,81,2.663,110,3.168,122,1.588,130,1.572,171,1.138,191,0.762,240,1.318,267,1.946,283,4.062,286,1.599,288,4.59,289,4.292,290,2.124,336,3.416,390,3.99,437,4.331,443,3.13,446,4.069,447,2.863,772,5.918,773,5.346,774,5.918,775,6.328,778,3.99,780,4.417,781,4.417,1077,6.328,1078,3.105,1084,5.066,1085,5.066,1086,3.561,1087,5.066,1088,3.561,1089,3.561,1090,3.561,1091,3.561,1092,3.561,1093,5.897,1094,5.897,1095,6.424]],["title/dependencies.html",[174,2.02,1007,2.657]],["body/dependencies.html",[0,0.333,13,0.013,22,1.683,25,1.286,26,1.683,28,3.35,43,0.011,44,0.011,93,1.047,174,2.328,196,3.174,221,4.069,290,3.35,821,3.786,823,4.896,1025,3.551,1096,7.693,1097,5.615,1098,5.615,1099,5.615,1100,5.615,1101,5.615,1102,5.615,1103,5.615,1104,5.615,1105,5.615,1106,5.615,1107,5.615,1108,5.615,1109,5.615,1110,5.615,1111,5.615,1112,5.615,1113,5.615,1114,5.615,1115,5.615]],["title/miscellaneous/functions.html",[1116,2.445,1117,4.25]],["body/miscellaneous/functions.html",[9,0.39,13,0.012,29,0.359,43,0.01,44,0.01,60,1.354,61,0.592,62,1.354,116,1.908,177,3.784,238,2.252,264,0.989,279,4.876,344,2.063,443,2.063,488,4.175,534,3.225,634,4.876,876,5.986,891,5.758,894,3.225,1037,5.986,1050,6.331,1051,6.929,1075,5.399,1116,3.466,1117,4.171,1118,8.1,1119,7.261,1120,6.866,1121,6.331,1122,4.783,1123,4.783,1124,6.192]],["title/index.html",[9,0.275,1125,3.374,1126,3.374]],["body/index.html",[4,0.123,13,0.013,29,0.249,32,3.963,43,0.01,44,0.01,279,3.963,323,2.703,446,3.276,634,5.538,892,3.963,977,5.038,1036,3.963,1121,4.387,1127,5.032,1128,5.032,1129,6.396,1130,5.032,1131,5.032,1132,5.032,1133,5.032,1134,5.032,1135,5.032,1136,5.032,1137,5.032,1138,7.933,1139,5.032,1140,5.032,1141,7.808,1142,5.032,1143,6.396,1144,5.032,1145,5.032,1146,5.032,1147,5.032,1148,5.032,1149,5.032,1150,5.032,1151,6.396,1152,6.396,1153,5.032,1154,5.032,1155,5.032,1156,5.032,1157,5.032,1158,5.032,1159,5.032,1160,5.032,1161,5.032,1162,5.032,1163,5.032,1164,5.032,1165,5.032,1166,5.032,1167,5.032,1168,4.387,1169,5.032,1170,5.032,1171,5.032,1172,5.032,1173,5.032,1174,5.032,1175,4.387]],["title/modules.html",[173,2.051]],["body/modules.html",[13,0.011,32,6.535,43,0.011,44,0.011,172,4.034,173,2.061,183,3.146,184,2.608,540,4.034,546,3.754,629,4.034,730,3.754,871,4.034,875,3.521,903,4.034,992,4.034,1176,8.297,1177,8.297,1178,8.339,1179,5.567,1180,5.567]],["title/overview.html",[1181,4.832]],["body/overview.html",[2,0.604,13,0.013,43,0.008,44,0.008,47,1.488,115,1.383,144,3.682,171,0.65,172,5.645,173,1.434,174,1.606,175,1.896,176,1.896,177,1.74,178,1.815,179,1.815,180,3.378,181,3.378,182,3.378,183,4.096,184,3.719,185,3.682,186,2.631,187,1.896,188,1.896,354,3.682,378,2.081,391,3.904,392,3.682,457,3.682,522,3.904,538,3.904,540,4.831,541,3.378,542,3.378,546,5.012,547,3.378,549,3.378,573,3.637,629,5.645,630,3.378,632,3.378,633,3.904,730,5.012,731,3.378,733,3.378,828,3.378,829,3.378,830,3.378,871,5.832,872,3.378,873,3.378,874,3.378,875,4.7,899,3.904,903,4.831,904,3.378,905,3.378,913,3.378,927,3.904,948,3.378,950,3.378,985,3.904,992,5.645,993,3.378,995,3.378,1070,3.378,1181,3.378,1182,3.874,1183,3.874,1184,3.874]],["title/properties.html",[10,1.365,1007,2.657]],["body/properties.html",[10,1.785,13,0.013,29,0.315,43,0.011,44,0.011,1168,5.557,1175,5.557,1185,6.373,1186,6.373,1187,6.373]],["title/miscellaneous/variables.html",[1116,2.445,1188,4.25]],["body/miscellaneous/variables.html",[0,0.25,9,0.344,12,0.686,13,0.013,18,3.312,24,2.296,26,2.07,43,0.009,44,0.009,61,0.526,70,1.333,116,2.27,153,1.973,192,4.152,198,4.124,218,3.379,264,1.428,277,6.02,285,1.306,344,2.454,361,2.157,400,3.902,443,2.78,466,2.263,492,6.446,497,3.317,507,4.124,508,3.672,558,3.599,560,3.902,637,4.124,640,4.077,660,3.317,663,3.672,685,3.317,689,3.672,698,3.317,707,3.672,771,3.317,785,4.482,786,4.124,787,3.672,891,5.6,910,3.317,912,4.482,914,3.317,1045,4.962,1058,3.672,1076,3.672,1116,3.051,1188,3.672,1189,6.447,1190,4.211,1191,4.211,1192,4.211,1193,4.211,1194,4.211,1195,4.211,1196,5.691,1197,6.905,1198,6.905,1199,6.905]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1186,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":913,"title":{"classes/Teacher-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1182,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1070,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2/2",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":163,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["201",{"_index":156,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["28",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1184,"title":{},"body":{"overview.html":{}}}],["4.1.13",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":160,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["42",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["7.0.12",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1183,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["abstract",{"_index":641,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["abstract.schema",{"_index":94,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractdocument:19",{"_index":286,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractrepository",{"_index":46,"title":{"injectables/AbstractRepository.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["abstractrepository:14",{"_index":241,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:25",{"_index":244,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:40",{"_index":243,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:50",{"_index":245,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:59",{"_index":242,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["access",{"_index":407,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/TeacherModule.html":{},"injectables/TestProgramRepository.html":{}}}],["accessing",{"_index":485,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["added",{"_index":799,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["address",{"_index":431,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["allows",{"_index":954,"title":{},"body":{"modules/TeacherModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["amazing",{"_index":1158,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":772,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["api",{"_index":1123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1121,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/common",{"_index":191,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["application",{"_index":891,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application_service",{"_index":192,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmodel",{"_index":239,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["applications",{"_index":892,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["applied",{"_index":703,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/Teacher.html":{}}}],["apply",{"_index":338,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["applyforstudy",{"_index":856,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(@body",{"_index":864,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(data",{"_index":857,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applying",{"_index":341,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/StudentManagementController.html":{}}}],["apps/.../main.ts",{"_index":1118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../meeting.schema.ts",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialclass.schema.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialmodule.schema.ts",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialstudent.schema.ts",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialtest.schema.ts",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../service.ts",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../teacher.schema.ts",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/class",{"_index":116,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/meeting",{"_index":534,"title":{},"body":{"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/module",{"_index":344,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/student",{"_index":264,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/study",{"_index":894,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/test",{"_index":443,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":81,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["associated",{"_index":283,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["async",{"_index":50,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["asynchronously",{"_index":482,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["author",{"_index":1168,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":1180,"title":{},"body":{"modules.html":{}}}],["await",{"_index":104,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["backers",{"_index":1159,"title":{},"body":{"index.html":{}}}],["base",{"_index":30,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["basic",{"_index":1014,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["being",{"_index":667,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["between",{"_index":551,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["birthday",{"_index":423,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["body",{"_index":142,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1178,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1176,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1130,"title":{},"body":{"index.html":{}}}],["bus",{"_index":866,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["business",{"_index":229,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["call",{"_index":887,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramRepository.html":{}}}],["care",{"_index":1013,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["case",{"_index":495,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["catch",{"_index":158,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["change",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["classmanagement",{"_index":328,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["classmanagementcontroller",{"_index":114,"title":{"controllers/ClassManagementController.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"coverage.html":{}}}],["classmanagementmodule",{"_index":172,"title":{"modules/ClassManagementModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["classmanagementrepository",{"_index":185,"title":{"injectables/ClassManagementRepository.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["classmanagementservice",{"_index":144,"title":{"injectables/ClassManagementService.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":813,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientproxy",{"_index":811,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["clients",{"_index":845,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule",{"_index":839,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":847,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_classmanagementmodule",{"_index":180,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_imports",{"_index":181,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_providers",{"_index":182,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_meetingmanagementmodule",{"_index":541,"title":{},"body":{"modules/MeetingManagementModule.html":{},"overview.html":{}}}],["cluster_meetingmanagementmodule_providers",{"_index":542,"title":{},"body":{"modules/MeetingManagementModule.html":{},"overview.html":{}}}],["cluster_meetingmodule",{"_index":547,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_meetingmodule_imports",{"_index":548,"title":{},"body":{"modules/MeetingModule.html":{}}}],["cluster_meetingmodule_providers",{"_index":549,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule",{"_index":630,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule_imports",{"_index":631,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["cluster_modulemanagementmodule_providers",{"_index":632,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_potentialstudentmodule",{"_index":731,"title":{},"body":{"modules/PotentialStudentModule.html":{},"overview.html":{}}}],["cluster_potentialstudentmodule_imports",{"_index":732,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["cluster_potentialstudentmodule_providers",{"_index":733,"title":{},"body":{"modules/PotentialStudentModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":828,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":829,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":830,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule",{"_index":872,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_imports",{"_index":873,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_providers",{"_index":874,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule",{"_index":904,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule_providers",{"_index":905,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":948,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":949,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":950,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule",{"_index":993,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule_imports",{"_index":994,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["cluster_testprogrammodule_providers",{"_index":995,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["collection",{"_index":498,"title":{},"body":{"classes/Meeting.html":{},"modules/TeacherModule.html":{}}}],["command",{"_index":233,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["command/event",{"_index":222,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["commandbus",{"_index":861,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandhandler",{"_index":321,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["commandhandler(createpotentialclasscommand",{"_index":322,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["commandhandler(createpotentialmodulecommand",{"_index":360,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["commandhandler(createpotentialstudentcommand",{"_index":405,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["commandhandler(createpotentialtestcommand",{"_index":464,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["commands/create",{"_index":203,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["committing",{"_index":332,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["common",{"_index":643,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["communication",{"_index":955,"title":{},"body":{"modules/TeacherModule.html":{}}}],["complete",{"_index":696,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["completion",{"_index":401,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["configmodule",{"_index":195,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configmodule.forroot",{"_index":211,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configservice",{"_index":475,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('mongodb_uri",{"_index":493,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":851,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":852,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":209,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configure",{"_index":481,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{}}}],["configures",{"_index":876,"title":{},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{}}}],["configureswagger",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configureswagger(app",{"_index":1119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":476,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["connecting",{"_index":477,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":221,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/TeacherModule.html":{},"dependencies.html":{}}}],["console.log(\"triggered",{"_index":324,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["console.log('message",{"_index":870,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{}}}],["constant",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants/service",{"_index":636,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["constants/services",{"_index":193,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["constructor(@injectmodel(potentialclass.name",{"_index":247,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["constructor(@injectmodel(potentialmodule.name",{"_index":646,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["constructor(@injectmodel(potentialstudent.name",{"_index":886,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["constructor(@injectmodel(potentialtest.name",{"_index":1010,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["constructor(@injectmodel(teacher.name",{"_index":960,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["constructor(applicationmodel",{"_index":235,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(classmanagementrepository",{"_index":250,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["constructor(clientproxy",{"_index":810,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["constructor(createpotentialclassdto",{"_index":296,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["constructor(createpotentialmoduledto",{"_index":347,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["constructor(createpotentialstudentdto",{"_index":380,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["constructor(createpotentialtestdto",{"_index":448,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(meetingrepository",{"_index":570,"title":{},"body":{"injectables/MeetingService.html":{}}}],["constructor(model",{"_index":57,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(modulemanagementrepository",{"_index":647,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["constructor(potentialclass",{"_index":673,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["constructor(potentialmodule",{"_index":693,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["constructor(potentialstudentrepository",{"_index":757,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["constructor(private",{"_index":527,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{}}}],["constructor(protected",{"_index":95,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(public",{"_index":301,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(publisher",{"_index":306,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["constructor(teacher",{"_index":742,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["constructor(teacherrepository",{"_index":962,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(testprogramrepository",{"_index":1015,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["constructs",{"_index":237,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["contact",{"_index":752,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["containing",{"_index":89,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["context",{"_index":331,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{}}}],["controller",{"_index":113,"title":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["controller('class",{"_index":148,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["controller('meetings",{"_index":526,"title":{},"body":{"controllers/MeetingController.html":{}}}],["controller('module",{"_index":621,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["controller('potentialstudents",{"_index":724,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["controller('student",{"_index":863,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["controller('study",{"_index":901,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["controller('teachers",{"_index":941,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('test",{"_index":986,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["controllers",{"_index":115,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["convert",{"_index":748,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["corresponding",{"_index":390,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["coverage",{"_index":1036,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":31,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ModuleManagementModule.html":{}}}],["cqrsmodule",{"_index":197,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["create",{"_index":51,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["create(@body",{"_index":151,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["create(createmeetingdto",{"_index":512,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["create(createpotentialclassdto",{"_index":125,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["create(createpotentialmoduledto",{"_index":613,"title":{},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["create(createpotentialstudentdto",{"_index":713,"title":{},"body":{"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{}}}],["create(createteacherdto",{"_index":923,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(document",{"_index":63,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["created",{"_index":68,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{}}}],["createddocument",{"_index":99,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createddocument.save",{"_index":102,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createmeetingdto",{"_index":263,"title":{"classes/CreateMeetingDto.html":{}},"body":{"classes/CreateMeetingDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["createmeetingdto.endtime",{"_index":597,"title":{},"body":{"injectables/MeetingService.html":{}}}],["createmeetingdto.starttime",{"_index":530,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["createmeetingdto.studentid",{"_index":591,"title":{},"body":{"injectables/MeetingService.html":{}}}],["createmeetingdto.teacherid",{"_index":529,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["createpotentialclasscommand",{"_index":202,"title":{"classes/CreatePotentialClassCommand.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclasscommandhandler",{"_index":302,"title":{"classes/CreatePotentialClassCommandHandler.html":{}},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclassdto",{"_index":126,"title":{"classes/CreatePotentialClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["createpotentialmodulecommand",{"_index":343,"title":{"classes/CreatePotentialModuleCommand.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["createpotentialmodulecommandhandler",{"_index":352,"title":{"classes/CreatePotentialModuleCommandHandler.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["createpotentialmoduledto",{"_index":346,"title":{"classes/CreatePotentialModuleDto.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["createpotentialstudentcommand",{"_index":375,"title":{"classes/CreatePotentialStudentCommand.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["createpotentialstudentcommand(data",{"_index":865,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["createpotentialstudentcommandhandler",{"_index":386,"title":{"classes/CreatePotentialStudentCommandHandler.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["createpotentialstudentdto",{"_index":379,"title":{"classes/CreatePotentialStudentDto.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["createpotentialstudentdto.email",{"_index":753,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.name",{"_index":750,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.phonenumber",{"_index":754,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.study",{"_index":751,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialtestcommand",{"_index":442,"title":{"classes/CreatePotentialTestCommand.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["createpotentialtestcommand(data",{"_index":990,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestcommandhandler",{"_index":454,"title":{"classes/CreatePotentialTestCommandHandler.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["createpotentialtestdto",{"_index":447,"title":{"classes/createPotentialTestDto.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["createpotentialtestdto(@body",{"_index":989,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto(data",{"_index":980,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto.duration",{"_index":803,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.ec",{"_index":806,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.module",{"_index":800,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.name",{"_index":802,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["creates",{"_index":450,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["createteacherdto",{"_index":470,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["creating",{"_index":130,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["credits",{"_index":781,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["crud",{"_index":958,"title":{},"body":{"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["data",{"_index":129,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{}}}],["database",{"_index":220,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["databasemodule",{"_index":183,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":273,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/Meeting.html":{},"classes/PotentialStudent.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["decorator",{"_index":884,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTest.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"classes/createPotentialTestDto.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["defines",{"_index":918,"title":{},"body":{"controllers/TeacherController.html":{}}}],["defining",{"_index":842,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["definition",{"_index":785,"title":{},"body":{"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":52,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["delete(':id",{"_index":132,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["delete(@param('id",{"_index":169,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["delete(id",{"_index":69,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["deleteapplicationbyid",{"_index":978,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleteapplicationbyid(@param('id",{"_index":987,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["deleteapplicationbyid(id",{"_index":982,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleted",{"_index":73,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["deletes",{"_index":582,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"injectables/TestProgramService.html":{}}}],["deleting",{"_index":717,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["dependencies",{"_index":174,"title":{"dependencies.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":580,"title":{},"body":{"injectables/MeetingService.html":{}}}],["development",{"_index":1140,"title":{},"body":{"index.html":{}}}],["document",{"_index":37,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["documentation",{"_index":1037,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":78,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["dto",{"_index":267,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"injectables/MeetingService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["dto/create",{"_index":452,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["dto/createpotentialclassdto",{"_index":146,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{}}}],["dto/createpotentialmoduledto",{"_index":351,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["dto/update",{"_index":525,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["dto/updatepotentialclassdto",{"_index":147,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["dto/updatepotentialmoduledto",{"_index":620,"title":{},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["duration",{"_index":773,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["dynamically",{"_index":836,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["dynamicmodule",{"_index":838,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e2e",{"_index":1148,"title":{},"body":{"index.html":{}}}],["each",{"_index":1095,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["ec",{"_index":774,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["ecs",{"_index":807,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["educational",{"_index":780,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["efficient",{"_index":1131,"title":{},"body":{"index.html":{}}}],["email",{"_index":424,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["emits",{"_index":817,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["emitted",{"_index":738,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["empty",{"_index":441,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{}}}],["end",{"_index":276,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["endpoint",{"_index":514,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["endpoints",{"_index":919,"title":{},"body":{"controllers/TeacherController.html":{}}}],["endtime",{"_index":269,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{}}}],["entities",{"_index":1032,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{}}}],["entity",{"_index":640,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"injectables/TestProgramRepository.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":210,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["envfilepath",{"_index":213,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["err",{"_index":159,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["err.message",{"_index":161,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["error",{"_index":715,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["event",{"_index":232,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["event.commit",{"_index":334,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["event.publish(event",{"_index":420,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["event/potentialclass",{"_index":206,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["eventbus",{"_index":862,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["eventpublisher",{"_index":307,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events",{"_index":311,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events/potentialmodule",{"_index":359,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["events/potentialstudent",{"_index":403,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["events/potentialtest",{"_index":462,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{}}}],["eventshandler",{"_index":679,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["eventshandler(potentialclassregisteredevent",{"_index":680,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["eventshandler(potentialmoduleregisteredevent",{"_index":697,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["eventshandler(potentialstudentregisteredevent",{"_index":745,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventshandler(potentialtestregisteredevent",{"_index":797,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["everyone",{"_index":798,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["exec",{"_index":111,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["execute",{"_index":305,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/TestProgramService.html":{}}}],["execute(command",{"_index":312,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executes",{"_index":314,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executing",{"_index":1009,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["execution",{"_index":320,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["exports",{"_index":179,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["express",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["external",{"_index":996,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["extract",{"_index":411,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["factory",{"_index":487,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["feature",{"_index":224,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{}}}],["field",{"_index":439,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["fields",{"_index":90,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["filter",{"_index":79,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["filterquery",{"_index":75,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find",{"_index":53,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find(filterquery",{"_index":74,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findall",{"_index":123,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["findbyid",{"_index":124,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["findbyid(@param(\"id",{"_index":165,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["findbyid(@param('id",{"_index":625,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["findbyid(id",{"_index":135,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["finding",{"_index":920,"title":{},"body":{"controllers/TeacherController.html":{}}}],["findone",{"_index":54,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findone(filterquery",{"_index":83,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["forrootasync",{"_index":480,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["found",{"_index":82,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["framework",{"_index":1129,"title":{},"body":{"index.html":{}}}],["function",{"_index":488,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":880,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["functions",{"_index":1117,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":837,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["get(\":id",{"_index":164,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["get(':id",{"_index":136,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["getapplications",{"_index":979,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["gethello",{"_index":536,"title":{},"body":{"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{}}}],["getmeetingresults(@payload",{"_index":869,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["getmeetings",{"_index":921,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getmeetings(@payload",{"_index":947,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getmeetings(data",{"_index":929,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications",{"_index":922,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications(@payload",{"_index":946,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications(data",{"_index":931,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getting",{"_index":1125,"title":{"index.html":{}},"body":{}}],["give",{"_index":805,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["given",{"_index":217,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{}}}],["graph",{"_index":1179,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1155,"title":{},"body":{"index.html":{}}}],["handle",{"_index":228,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handle(event",{"_index":677,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handled",{"_index":399,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handler",{"_index":325,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["handlers",{"_index":419,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["handles",{"_index":388,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{}}}],["handling",{"_index":223,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["hello",{"_index":544,"title":{},"body":{"injectables/MeetingManagementService.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudyProgramService.html":{}}}],["here",{"_index":1165,"title":{},"body":{"index.html":{}}}],["http",{"_index":711,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["https://nestjs.com",{"_index":1172,"title":{},"body":{"index.html":{}}}],["icommand",{"_index":294,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{}}}],["icommandhandler",{"_index":304,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["identifier",{"_index":36,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["ievent",{"_index":737,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["ieventhandler",{"_index":672,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["implements",{"_index":293,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["importing",{"_index":635,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["imports",{"_index":190,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["included",{"_index":1004,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":409,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["indicating",{"_index":515,"title":{},"body":{"controllers/MeetingController.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["information",{"_index":793,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["inherited",{"_index":240,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["inherits",{"_index":699,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["initializes",{"_index":349,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["inject",{"_index":494,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject('rabbitmq_client",{"_index":826,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"overview.html":{}}}],["injected",{"_index":645,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel",{"_index":246,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel(meeting.name",{"_index":589,"title":{},"body":{"injectables/MeetingService.html":{}}}],["injectmodel(potentialclass.name",{"_index":257,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["injectmodel(potentialmodule.name",{"_index":654,"title":{},"body":{"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["injectmodel(potentialstudent.name",{"_index":765,"title":{},"body":{"injectables/PotentialStudentService.html":{},"injectables/StudentManagementService.html":{}}}],["injectmodel(potentialtest.name",{"_index":1020,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["injectmodel(teacher.name",{"_index":746,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TeacherService.html":{}}}],["injects",{"_index":496,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["installation",{"_index":1137,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1139,"title":{},"body":{"index.html":{}}}],["instance",{"_index":238,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["interact",{"_index":231,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/TestProgramService.html":{}}}],["interacting",{"_index":824,"title":{},"body":{"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{}}}],["interacts",{"_index":889,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["interface",{"_index":378,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":853,"title":{},"body":{"interfaces/RmqModuleOptions.html":{}}}],["isarray",{"_index":1093,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isarray()@isstring({each",{"_index":1084,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isdate",{"_index":274,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialStudentDto.html":{}}}],["isemail",{"_index":428,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["isglobal",{"_index":212,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["ismongoid",{"_index":287,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["ismongoid()@isstring()@isnotempty",{"_index":280,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isnumber",{"_index":1094,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isnumber()@isnotempty",{"_index":1087,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isphonenumber",{"_index":434,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["isstring",{"_index":289,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isstring()@isnotempty",{"_index":336,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["it's",{"_index":801,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["join",{"_index":1161,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":1169,"title":{},"body":{"index.html":{}}}],["last",{"_index":606,"title":{},"body":{"injectables/MeetingService.html":{}}}],["lastvaluefrom",{"_index":822,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["lastvaluefrom(this.clientproxy.emit(queue",{"_index":827,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["legend",{"_index":175,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":48,"title":{},"body":{"injectables/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":65,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:25",{"_index":84,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:40",{"_index":76,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:50",{"_index":88,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:59",{"_index":71,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:6",{"_index":59,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:19",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":474,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts",{"_index":831,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts:31",{"_index":835,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts",{"_index":808,"title":{},"body":{"injectables/RabbitmqService.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:11",{"_index":812,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:31",{"_index":816,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["license",{"_index":1175,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1152,"title":{},"body":{"index.html":{}}}],["list",{"_index":584,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{}}}],["load",{"_index":208,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["log",{"_index":408,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["logic",{"_index":230,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["logs",{"_index":934,"title":{},"body":{"controllers/TeacherController.html":{}}}],["made",{"_index":683,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["management",{"_index":120,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"injectables/TeacherService.html":{}}}],["management.controller",{"_index":200,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.controller.ts",{"_index":118,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:113",{"_index":615,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:114",{"_index":133,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:23",{"_index":858,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["management.controller.ts:28",{"_index":614,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:30",{"_index":128,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:50",{"_index":616,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:52",{"_index":134,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:67",{"_index":617,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:69",{"_index":137,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:85",{"_index":619,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:87",{"_index":141,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:9",{"_index":537,"title":{},"body":{"controllers/MeetingManagementController.html":{}}}],["management.module.ts",{"_index":189,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.repository",{"_index":201,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["management.repository.ts",{"_index":234,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["management.repository.ts:11",{"_index":236,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["management.repository.ts:12",{"_index":644,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["management.repository.ts:14",{"_index":883,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["management.service",{"_index":145,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.service.ts",{"_index":249,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/MeetingManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management.service.ts:12",{"_index":648,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:13",{"_index":251,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:24",{"_index":649,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:25",{"_index":252,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:34",{"_index":254,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:35",{"_index":651,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:44",{"_index":255,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:45",{"_index":652,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:5",{"_index":543,"title":{},"body":{"injectables/MeetingManagementService.html":{}}}],["management.service.ts:55",{"_index":256,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:56",{"_index":653,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:69",{"_index":650,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:71",{"_index":253,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management/.env",{"_index":214,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{}}}],["management/src/class",{"_index":117,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{}}}],["management/src/commands/create",{"_index":291,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["management/src/constants/service.ts",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/constants/services.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/dto/createpotentialclassdto.ts",{"_index":335,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"coverage.html":{}}}],["management/src/dto/createpotentialclassdto.ts:15",{"_index":337,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["management/src/dto/createpotentialclassdto.ts:20",{"_index":340,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts",{"_index":369,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"coverage.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:16",{"_index":371,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:21",{"_index":372,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:26",{"_index":370,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/updatepotentialclassdto.ts",{"_index":1027,"title":{},"body":{"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["management/src/dto/updatepotentialmoduledto.ts",{"_index":1029,"title":{},"body":{"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["management/src/event/potentialclass",{"_index":664,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialmodule",{"_index":690,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialstudent",{"_index":736,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/main.ts",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["management/src/meeting",{"_index":535,"title":{},"body":{"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"coverage.html":{}}}],["management/src/meeting/dto/create",{"_index":265,"title":{},"body":{"classes/CreateMeetingDto.html":{},"coverage.html":{}}}],["management/src/meeting/dto/update",{"_index":1023,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.controller.ts",{"_index":510,"title":{},"body":{"controllers/MeetingController.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.controller.ts:17",{"_index":513,"title":{},"body":{"controllers/MeetingController.html":{}}}],["management/src/meeting/meeting.controller.ts:30",{"_index":519,"title":{},"body":{"controllers/MeetingController.html":{}}}],["management/src/meeting/meeting.module.ts",{"_index":550,"title":{},"body":{"modules/MeetingModule.html":{}}}],["management/src/meeting/meeting.service.ts",{"_index":569,"title":{},"body":{"injectables/MeetingService.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.service.ts:11",{"_index":574,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:26",{"_index":576,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:50",{"_index":583,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:59",{"_index":585,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:70",{"_index":587,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:84",{"_index":581,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/module",{"_index":612,"title":{},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{}}}],["management/src/potentialstudent/dto/create",{"_index":421,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"coverage.html":{}}}],["management/src/potentialstudent/dto/update",{"_index":1031,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts",{"_index":709,"title":{},"body":{"controllers/PotentialStudentController.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:19",{"_index":714,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:38",{"_index":718,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:54",{"_index":720,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:71",{"_index":722,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:94",{"_index":716,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.module.ts",{"_index":734,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts",{"_index":756,"title":{},"body":{"injectables/PotentialStudentService.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:12",{"_index":758,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:23",{"_index":760,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:31",{"_index":762,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:40",{"_index":763,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:50",{"_index":764,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:59",{"_index":761,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/schemas/meeting.schema.ts",{"_index":497,"title":{},"body":{"classes/Meeting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/meeting.schema.ts:12",{"_index":502,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:15",{"_index":503,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:18",{"_index":501,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:21",{"_index":500,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/potentialclass.schema",{"_index":373,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialclass.schema.ts",{"_index":660,"title":{},"body":{"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialclass.schema.ts:14",{"_index":661,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialclass.schema.ts:20",{"_index":662,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialmodule.schema.ts",{"_index":685,"title":{},"body":{"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:15",{"_index":687,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:21",{"_index":688,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:27",{"_index":686,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialstudent.schema",{"_index":342,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialstudent.schema.ts",{"_index":698,"title":{},"body":{"classes/PotentialStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:16",{"_index":704,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:23",{"_index":706,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:30",{"_index":705,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:37",{"_index":701,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:40",{"_index":700,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/teacher.schema",{"_index":374,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"classes/PotentialModule.html":{}}}],["management/src/schemas/teacher.schema.ts",{"_index":910,"title":{},"body":{"classes/Teacher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/teacher.schema.ts:16",{"_index":911,"title":{},"body":{"classes/Teacher.html":{}}}],["management/src/student",{"_index":855,"title":{},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management/src/teacher/dto/create",{"_index":471,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/dto/update",{"_index":1034,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts",{"_index":917,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts:22",{"_index":924,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:36",{"_index":926,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:47",{"_index":933,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:52",{"_index":930,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.module",{"_index":1001,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["management/src/teacher/teacher.module.ts",{"_index":951,"title":{},"body":{"modules/TeacherModule.html":{}}}],["management/src/teacher/teacher.repository.ts",{"_index":957,"title":{},"body":{"injectables/TeacherRepository.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.repository.ts:14",{"_index":959,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["management/src/teacher/teacher.service.ts",{"_index":961,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.service.ts:15",{"_index":963,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:28",{"_index":964,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:32",{"_index":966,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:36",{"_index":967,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:40",{"_index":965,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:44",{"_index":969,"title":{},"body":{"injectables/TeacherService.html":{}}}],["manager",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":121,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["match",{"_index":602,"title":{},"body":{"injectables/MeetingService.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["meeting",{"_index":268,"title":{"classes/Meeting.html":{}},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["meeting.controller",{"_index":556,"title":{},"body":{"modules/MeetingModule.html":{}}}],["meeting.dto",{"_index":524,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{}}}],["meeting.dto.ts",{"_index":266,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["meeting.dto.ts:15",{"_index":281,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:23",{"_index":284,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:29",{"_index":278,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:35",{"_index":275,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.endtime",{"_index":596,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.name",{"_index":564,"title":{},"body":{"modules/MeetingModule.html":{}}}],["meeting.service",{"_index":523,"title":{},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{}}}],["meeting.starttime",{"_index":595,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.student",{"_index":593,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.teacher",{"_index":594,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting/meeting.module",{"_index":878,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["meetingcontroller",{"_index":509,"title":{"controllers/MeetingController.html":{}},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"coverage.html":{}}}],["meetingmanagementcontroller",{"_index":533,"title":{"controllers/MeetingManagementController.html":{}},"body":{"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"coverage.html":{}}}],["meetingmanagementmodule",{"_index":540,"title":{"modules/MeetingManagementModule.html":{}},"body":{"modules/MeetingManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["meetingmanagementservice",{"_index":538,"title":{"injectables/MeetingManagementService.html":{}},"body":{"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["meetingmodule",{"_index":546,"title":{"modules/MeetingModule.html":{}},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["meetingrepository",{"_index":575,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meetings",{"_index":511,"title":{},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["meetingschema",{"_index":507,"title":{},"body":{"classes/Meeting.html":{},"modules/MeetingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meetingservice",{"_index":522,"title":{"injectables/MeetingService.html":{}},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"coverage.html":{},"overview.html":{}}}],["merge",{"_index":414,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["merging",{"_index":330,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["message",{"_index":157,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TeacherController.html":{}}}],["messagepattern",{"_index":939,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messagepattern('meeting_notifications",{"_index":868,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["messagepattern('teacher_notifications",{"_index":932,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messages",{"_index":794,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["metadata",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":396,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{}}}],["methods",{"_index":49,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["microservice",{"_index":825,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["minutes",{"_index":778,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["miscellaneous",{"_index":1116,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1151,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1143,"title":{},"body":{"index.html":{}}}],["model",{"_index":58,"title":{},"body":{"injectables/AbstractRepository.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["module",{"_index":171,"title":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["modulemanagement",{"_index":364,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["modulemanagementcontroller",{"_index":611,"title":{"controllers/ModuleManagementController.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["modulemanagementmodule",{"_index":629,"title":{"modules/ModuleManagementModule.html":{}},"body":{"modules/ModuleManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["modulemanagementrepository",{"_index":633,"title":{"injectables/ModuleManagementRepository.html":{}},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modulemanagementservice",{"_index":354,"title":{"injectables/ModuleManagementService.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":173,"title":{"modules.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":478,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodb_uri",{"_index":491,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":42,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["mongoosemodule",{"_index":194,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature",{"_index":225,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":882,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":483,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":1164,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":77,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["myśliwiec",{"_index":1170,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":682,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["necessary",{"_index":316,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["needed",{"_index":605,"title":{},"body":{"injectables/MeetingService.html":{}}}],["negative",{"_index":603,"title":{},"body":{"injectables/MeetingService.html":{}}}],["nest",{"_index":634,"title":{},"body":{"modules/ModuleManagementModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nest.js",{"_index":1124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestframework",{"_index":1174,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":93,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":196,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1025,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":821,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["node.js",{"_index":1128,"title":{},"body":{"index.html":{}}}],["non",{"_index":440,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{}}}],["notfoundexception",{"_index":92,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":107,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notification",{"_index":578,"title":{},"body":{"injectables/MeetingService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["notifications",{"_index":676,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["npm",{"_index":1138,"title":{},"body":{"index.html":{}}}],["number",{"_index":437,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"controllers/MeetingController.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["object",{"_index":299,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{}}}],["objectid",{"_index":39,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["objects",{"_index":928,"title":{},"body":{"controllers/TeacherController.html":{}}}],["open",{"_index":1153,"title":{},"body":{"index.html":{}}}],["operation",{"_index":1018,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["operations",{"_index":317,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":843,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["out",{"_index":188,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["over",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1181,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1007,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/TestProgramRepository.html":{}}}],["packages",{"_index":997,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["param('id",{"_index":167,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1011,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["partial",{"_index":87,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["partialtype",{"_index":1024,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["partialtype(createmeetingdto",{"_index":1026,"title":{},"body":{"classes/UpdateMeetingDto.html":{}}}],["partialtype(createpotentialclassdto",{"_index":1028,"title":{},"body":{"classes/UpdatePotentialClassDto.html":{}}}],["partialtype(createpotentialmoduledto",{"_index":1030,"title":{},"body":{"classes/UpdatePotentialModuleDto.html":{}}}],["partialtype(createpotentialstudentdto",{"_index":1033,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{}}}],["partialtype(createteacherdto",{"_index":1035,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["pass",{"_index":888,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["passed",{"_index":885,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{}}}],["passing",{"_index":804,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["patch",{"_index":521,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{}}}],["patch(':id",{"_index":518,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{}}}],["pattern",{"_index":945,"title":{},"body":{"controllers/TeacherController.html":{}}}],["patterns",{"_index":940,"title":{},"body":{"controllers/TeacherController.html":{}}}],["payload",{"_index":936,"title":{},"body":{"controllers/TeacherController.html":{}}}],["perform",{"_index":890,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["performs",{"_index":315,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["phone",{"_index":436,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["phonenumber",{"_index":425,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["placeholder",{"_index":604,"title":{},"body":{"injectables/MeetingService.html":{}}}],["please",{"_index":1162,"title":{},"body":{"index.html":{}}}],["post",{"_index":127,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["potential",{"_index":122,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialclass",{"_index":153,"title":{"classes/PotentialClass.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialclass.command",{"_index":204,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts",{"_index":303,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["potentialclass.command.handler.ts:11",{"_index":308,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts:27",{"_index":313,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.ts",{"_index":292,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"coverage.html":{}}}],["potentialclass.command.ts:12",{"_index":300,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.command.ts:7",{"_index":297,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.name",{"_index":226,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["potentialclassregisteredevent",{"_index":205,"title":{"classes/PotentialClassRegisteredEvent.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassregisteredevent(potentialclass",{"_index":329,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclassregisteredeventhandler",{"_index":670,"title":{"classes/PotentialClassRegisteredEventHandler.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassschema",{"_index":198,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialclassservice",{"_index":150,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["potentialmodule",{"_index":361,"title":{"classes/PotentialModule.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule.command",{"_index":357,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["potentialmodule.command.handler.ts",{"_index":353,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["potentialmodule.command.handler.ts:10",{"_index":355,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.handler.ts:22",{"_index":356,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.ts",{"_index":345,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"coverage.html":{}}}],["potentialmodule.command.ts:12",{"_index":350,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.command.ts:7",{"_index":348,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.name",{"_index":639,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["potentialmoduleregisteredevent",{"_index":358,"title":{"classes/PotentialModuleRegisteredEvent.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleregisteredevent(potentialmodule",{"_index":365,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmoduleregisteredeventhandler",{"_index":692,"title":{"classes/PotentialModuleRegisteredEventHandler.html":{}},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleschema",{"_index":637,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmoduleservice",{"_index":622,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["potentialstudent",{"_index":339,"title":{"classes/PotentialStudent.html":{}},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["potentialstudent.command",{"_index":402,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.command.handler.ts",{"_index":387,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["potentialstudent.command.handler.ts:12",{"_index":393,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.handler.ts:28",{"_index":395,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.ts",{"_index":377,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"coverage.html":{}}}],["potentialstudent.command.ts:15",{"_index":383,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.command.ts:9",{"_index":381,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.controller",{"_index":735,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["potentialstudent.dto",{"_index":385,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"classes/UpdatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts",{"_index":422,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["potentialstudent.dto.ts:15",{"_index":429,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:23",{"_index":438,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:30",{"_index":435,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:33",{"_index":427,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:8",{"_index":433,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.name",{"_index":566,"title":{},"body":{"modules/MeetingModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{}}}],["potentialstudent.schema",{"_index":505,"title":{},"body":{"classes/Meeting.html":{}}}],["potentialstudent.service",{"_index":723,"title":{},"body":{"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{}}}],["potentialstudent/create",{"_index":376,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["potentialstudent/dto/create",{"_index":384,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent/potentialstudent.module",{"_index":879,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent/potentialstudent.service",{"_index":404,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentcontroller",{"_index":708,"title":{"controllers/PotentialStudentController.html":{}},"body":{"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"coverage.html":{}}}],["potentialstudentmodule",{"_index":730,"title":{"modules/PotentialStudentModule.html":{}},"body":{"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["potentialstudentregisteredevent",{"_index":398,"title":{"classes/PotentialStudentRegisteredEvent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent(potentialstudent",{"_index":413,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentregisteredeventhandler",{"_index":741,"title":{"classes/PotentialStudentRegisteredEventHandler.html":{}},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentrepository",{"_index":759,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["potentialstudents",{"_index":710,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["potentialstudentschema",{"_index":558,"title":{},"body":{"modules/MeetingModule.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialstudentservice",{"_index":392,"title":{"injectables/PotentialStudentService.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"coverage.html":{},"overview.html":{}}}],["potentialtest",{"_index":466,"title":{"classes/PotentialTest.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest.command",{"_index":460,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.command.handler",{"_index":1000,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtest.command.handler.ts",{"_index":455,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["potentialtest.command.handler.ts:10",{"_index":458,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.handler.ts:27",{"_index":459,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.ts",{"_index":445,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"coverage.html":{}}}],["potentialtest.command.ts:12",{"_index":451,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.command.ts:7",{"_index":449,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.dto",{"_index":453,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.dto.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:13",{"_index":1090,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:20",{"_index":1091,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:27",{"_index":1088,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:34",{"_index":1089,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:42",{"_index":1092,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:50",{"_index":1086,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.name",{"_index":1003,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtestregisteredevent",{"_index":461,"title":{"classes/PotentialTestRegisteredEvent.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialtestregisteredevent(potentialtest",{"_index":468,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtestregisteredeventhandler",{"_index":791,"title":{"classes/PotentialTestRegisteredEventHandler.html":{}},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["potentialtestschema",{"_index":786,"title":{},"body":{"classes/PotentialTest.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":119,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["private",{"_index":149,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["process",{"_index":796,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["processes",{"_index":747,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["production",{"_index":1145,"title":{},"body":{"index.html":{}}}],["program",{"_index":897,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["program.controller",{"_index":907,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.controller.ts",{"_index":896,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["program.controller.ts:24",{"_index":983,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:34",{"_index":981,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:44",{"_index":984,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:9",{"_index":898,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["program.module.ts",{"_index":906,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.repository",{"_index":463,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{}}}],["program.repository.ts",{"_index":1006,"title":{},"body":{"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["program.repository.ts:14",{"_index":1008,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["program.service",{"_index":900,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["program.service.ts",{"_index":908,"title":{},"body":{"injectables/StudyProgramService.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["program.service.ts:12",{"_index":1016,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:27",{"_index":1019,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:36",{"_index":1017,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:5",{"_index":909,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["program/.env",{"_index":1002,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["program/src/commands/create",{"_index":444,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["program/src/constants/services.ts",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/dto/create",{"_index":1077,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["program/src/events/potentialtest",{"_index":788,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["program/src/main.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["program/src/schemas/potentialtest.schema.ts",{"_index":771,"title":{},"body":{"classes/PotentialTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/potentialtest.schema.ts:13",{"_index":782,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:19",{"_index":783,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:25",{"_index":777,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:31",{"_index":779,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:37",{"_index":784,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:43",{"_index":776,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/teacher.schema.ts",{"_index":914,"title":{},"body":{"classes/Teacher-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/teacher.schema.ts:13",{"_index":915,"title":{},"body":{"classes/Teacher-1.html":{}}}],["program/src/study",{"_index":895,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{}}}],["program/src/test",{"_index":976,"title":{},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["programs",{"_index":465,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["progressive",{"_index":1127,"title":{},"body":{"index.html":{}}}],["project",{"_index":1154,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({required",{"_index":499,"title":{},"body":{"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({type",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/createPotentialTestDto.html":{},"properties.html":{}}}],["property",{"_index":34,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{}}}],["provide",{"_index":227,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{}}}],["provided",{"_index":642,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["providers",{"_index":178,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["provides",{"_index":554,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["proxy",{"_index":814,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["public",{"_index":295,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["publish",{"_index":366,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publisher",{"_index":309,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publishes",{"_index":389,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["publishing",{"_index":310,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["put",{"_index":143,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["put(':id",{"_index":140,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["query",{"_index":80,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["questions",{"_index":775,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["queue",{"_index":818,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq",{"_index":216,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["rabbitmq.service",{"_index":841,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq_client",{"_index":848,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmqservice",{"_index":573,"title":{"injectables/RabbitmqService.html":{}},"body":{"injectables/MeetingService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1163,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":96,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["received",{"_index":935,"title":{},"body":{"controllers/TeacherController.html":{}}}],["receives",{"_index":859,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["reflect",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":215,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["register(undefined",{"_index":833,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":846,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registered",{"_index":418,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event",{"_index":207,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler",{"_index":999,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["registered.event.handler.ts",{"_index":671,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["registered.event.handler.ts:12",{"_index":694,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:13",{"_index":674,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:14",{"_index":743,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:23",{"_index":695,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:24",{"_index":744,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:28",{"_index":678,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:30",{"_index":795,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.ts",{"_index":665,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"coverage.html":{}}}],["registered.event.ts:11",{"_index":790,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:12",{"_index":668,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:14",{"_index":740,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registered.event.ts:6",{"_index":789,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:7",{"_index":666,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:9",{"_index":739,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registers",{"_index":844,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registration",{"_index":691,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["related",{"_index":567,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["repositories",{"_index":1005,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["repository",{"_index":323,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["represented",{"_index":38,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["representing",{"_index":400,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":430,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["request",{"_index":860,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["requests",{"_index":712,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["required",{"_index":382,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{}}}],["reset",{"_index":187,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["resolved",{"_index":607,"title":{},"body":{"injectables/MeetingService.html":{}}}],["resolves",{"_index":318,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["response",{"_index":925,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsible",{"_index":456,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["result",{"_index":319,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/TestProgramService.html":{}}}],["results",{"_index":43,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":792,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["retrieved",{"_index":586,"title":{},"body":{"injectables/MeetingService.html":{}}}],["retrieves",{"_index":489,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramService.html":{}}}],["retrieving",{"_index":719,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["rmqmodule",{"_index":184,"title":{"modules/RmqModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":219,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["rmqmodule.register({name",{"_index":881,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["rmqmoduleoptions",{"_index":834,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["run",{"_index":1141,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":823,"title":{},"body":{"injectables/RabbitmqService.html":{},"dependencies.html":{}}}],["saved",{"_index":363,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["saves",{"_index":397,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["saving",{"_index":326,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["scalable",{"_index":1132,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":516,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":504,"title":{},"body":{"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["schemafactory.createforclass(meeting",{"_index":508,"title":{},"body":{"classes/Meeting.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialclass",{"_index":663,"title":{},"body":{"classes/PotentialClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialmodule",{"_index":689,"title":{},"body":{"classes/PotentialModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialstudent",{"_index":707,"title":{},"body":{"classes/PotentialStudent.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialtest",{"_index":787,"title":{},"body":{"classes/PotentialTest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teacher",{"_index":912,"title":{},"body":{"classes/Teacher.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":563,"title":{},"body":{"modules/MeetingModule.html":{},"modules/TestProgramModule.html":{}}}],["schemas/meeting.schema",{"_index":557,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["schemas/potentialclass.schema",{"_index":199,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["schemas/potentialmodule.schema",{"_index":638,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["schemas/potentialstudent.schema",{"_index":559,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{}}}],["schemas/potentialtest.schema",{"_index":998,"title":{},"body":{"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["schemas/teacher.schema",{"_index":561,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{}}}],["schematypes",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":40,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["send",{"_index":681,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["sending",{"_index":675,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["sendmessage",{"_index":809,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sendmessage(queue",{"_index":815,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sends",{"_index":577,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/RabbitmqService.html":{}}}],["sent",{"_index":819,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["server",{"_index":1133,"title":{},"body":{"index.html":{}}}],["service",{"_index":218,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":555,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["side",{"_index":1134,"title":{},"body":{"index.html":{}}}],["single",{"_index":85,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"modules/MeetingManagementModule.html":{},"injectables/MeetingManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["specified",{"_index":138,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["specifies",{"_index":952,"title":{},"body":{"modules/TeacherModule.html":{}}}],["specify",{"_index":956,"title":{},"body":{"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["sponsors",{"_index":1157,"title":{},"body":{"index.html":{}}}],["start",{"_index":279,"title":{},"body":{"classes/CreateMeetingDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":1144,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1146,"title":{},"body":{"index.html":{}}}],["started",{"_index":1126,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1136,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":270,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{}}}],["statements",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":832,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["status",{"_index":155,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["stay",{"_index":1166,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"controllers/MeetingManagementController.html":{},"injectables/MeetingManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":282,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"classes/UpdatePotentialStudentDto.html":{}}}],["studentid",{"_index":271,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["studentmanagementcontroller",{"_index":854,"title":{"controllers/StudentManagementController.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["studentmanagementmodule",{"_index":871,"title":{"modules/StudentManagementModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["studentmanagementrepository",{"_index":406,"title":{"injectables/StudentManagementRepository.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["studentmanagementservice",{"_index":391,"title":{"injectables/StudentManagementService.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["studentrepository",{"_index":571,"title":{},"body":{"injectables/MeetingService.html":{}}}],["students",{"_index":552,"title":{},"body":{"modules/MeetingModule.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{}}}],["study",{"_index":426,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{}}}],["studyprogramcontroller",{"_index":893,"title":{"controllers/StudyProgramController.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"coverage.html":{}}}],["studyprogrammodule",{"_index":903,"title":{"modules/StudyProgramModule.html":{}},"body":{"modules/StudyProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["studyprogramservice",{"_index":899,"title":{"injectables/StudyProgramService.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":820,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["super",{"_index":669,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["super(applicationmodel",{"_index":248,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["support",{"_index":32,"title":{},"body":{"classes/AbstractDocument.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1177,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":1012,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["tdocument",{"_index":64,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["teacher",{"_index":285,"title":{"classes/Teacher.html":{},"classes/Teacher-1.html":{}},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacher.controller",{"_index":953,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":938,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":472,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:17",{"_index":473,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.name",{"_index":565,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["teacher.schema",{"_index":506,"title":{},"body":{"classes/Meeting.html":{}}}],["teacher.service",{"_index":937,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":877,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["teacher_notifications",{"_index":944,"title":{},"body":{"controllers/TeacherController.html":{}}}],["teachercontroller",{"_index":916,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teacherid",{"_index":272,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["teachermodule",{"_index":875,"title":{"modules/TeacherModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":572,"title":{"injectables/TeacherRepository.html":{}},"body":{"injectables/MeetingService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"coverage.html":{}}}],["teachers",{"_index":553,"title":{},"body":{"modules/MeetingModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["teacherschema",{"_index":560,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacherservice",{"_index":927,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":446,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":1150,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1149,"title":{},"body":{"index.html":{}}}],["testprogramcontroller",{"_index":975,"title":{"controllers/TestProgramController.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["testprogrammodule",{"_index":992,"title":{"modules/TestProgramModule.html":{}},"body":{"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["testprogramrepository",{"_index":457,"title":{"injectables/TestProgramRepository.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["testprogramservice",{"_index":985,"title":{"injectables/TestProgramService.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":977,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["thanks",{"_index":1156,"title":{},"body":{"index.html":{}}}],["this.classmanagementrepository.create(createpotentialclassdto",{"_index":258,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.delete(id",{"_index":262,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.find",{"_index":259,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.findone",{"_index":260,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.update",{"_index":261,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementservice.create(createpotentialclassdto",{"_index":327,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.commandbus.execute(command",{"_index":867,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["this.meetingmanagementservice.gethello",{"_index":539,"title":{},"body":{"controllers/MeetingManagementController.html":{}}}],["this.meetingrepository.create(meeting",{"_index":599,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.delete(id",{"_index":610,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.find",{"_index":600,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.findone",{"_index":601,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.update(id",{"_index":609,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingservice.create(createmeetingdto",{"_index":528,"title":{},"body":{"controllers/MeetingController.html":{}}}],["this.meetingservice.update(id",{"_index":532,"title":{},"body":{"controllers/MeetingController.html":{}}}],["this.model(document",{"_index":100,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.find(filterquery).exec",{"_index":108,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidanddelete(id).exec",{"_index":112,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":109,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findone(filterquery).exec",{"_index":105,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.modulemanagementrepository.create",{"_index":655,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.delete(id",{"_index":659,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.find",{"_index":656,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.findone",{"_index":657,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.update",{"_index":658,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementservice.create(createpotentialmoduledto",{"_index":362,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.potentialclassservice.create",{"_index":154,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.delete(id",{"_index":170,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.findall",{"_index":162,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.findbyid(id",{"_index":166,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.update",{"_index":168,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialmoduleservice.create",{"_index":623,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.delete(id",{"_index":628,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.findall",{"_index":624,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.findbyid(id",{"_index":626,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.update",{"_index":627,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialstudentrepository.create(createpotentialstudentdto",{"_index":766,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.delete(id",{"_index":770,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.find",{"_index":767,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.findone",{"_index":768,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.update(id",{"_index":769,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentservice.create(createpotentialstudentdto",{"_index":725,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.delete(id",{"_index":729,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.findall",{"_index":726,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.findbyid(id",{"_index":727,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.update(id",{"_index":728,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.publisher.mergeobjectcontext(classmanagement",{"_index":333,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(modulemanagement",{"_index":368,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(student",{"_index":416,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(test",{"_index":469,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.rabbitmqservice.sendmessage('meeting_notifications",{"_index":598,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.rabbitmqservice.sendmessage('student_notifications",{"_index":608,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.rabbitmqservice.sendmessage('study",{"_index":684,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["this.rabbitmqservice.sendmessage('teacher_notifications",{"_index":755,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.studentmanagementservice.create(createpotentialstudentdto",{"_index":412,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.studentrepository.findone",{"_index":590,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.studyprogramservice.gethello",{"_index":902,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["this.teacher.findone({}).exec()).toobject",{"_index":749,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.teacherrepository.create(createteacherdto",{"_index":970,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.delete(id",{"_index":973,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.find",{"_index":971,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.findone",{"_index":592,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.teacherrepository.findone({_id",{"_index":972,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.update(id",{"_index":974,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":942,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":943,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.testprogramrepository.create(createpotentialtestdto",{"_index":467,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.testprogramrepository.delete(id",{"_index":1022,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramrepository.find",{"_index":1021,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramservice.deleteapplicationbyid(id",{"_index":988,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["this.testprogramservice.getapplications",{"_index":991,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["throw",{"_index":106,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["throws",{"_index":103,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["time",{"_index":277,"title":{},"body":{"classes/CreateMeetingDto.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1167,"title":{},"body":{"index.html":{}}}],["track",{"_index":415,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["transfer",{"_index":298,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/UpdateTeacherDto.html":{}}}],["transport",{"_index":840,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":849,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["trigger",{"_index":417,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["triggered",{"_index":410,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["true",{"_index":110,"title":{},"body":{"injectables/AbstractRepository.html":{},"modules/ClassManagementModule.html":{},"classes/Meeting.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TestProgramModule.html":{},"classes/createPotentialTestDto.html":{}}}],["true})@isnotempty({each",{"_index":1085,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["try",{"_index":152,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["twitter",{"_index":1173,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["typescript",{"_index":1135,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["unique",{"_index":35,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unit",{"_index":1147,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":131,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["unlicensed",{"_index":1187,"title":{},"body":{"properties.html":{}}}],["update",{"_index":55,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["update(@param('id",{"_index":531,"title":{},"body":{"controllers/MeetingController.html":{}}}],["update(id",{"_index":86,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["updated",{"_index":91,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updatemeetingdto",{"_index":517,"title":{"classes/UpdateMeetingDto.html":{}},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["updatepotentialclassdto",{"_index":139,"title":{"classes/UpdatePotentialClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["updatepotentialmoduledto",{"_index":618,"title":{"classes/UpdatePotentialModuleDto.html":{}},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["updatepotentialstudentdto",{"_index":721,"title":{"classes/UpdatePotentialStudentDto.html":{}},"body":{"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["updates",{"_index":588,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["updateteacherdto",{"_index":968,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["updating",{"_index":520,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/PotentialStudentController.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["uri",{"_index":490,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["urls",{"_index":850,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["used",{"_index":394,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["usefactory",{"_index":484,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["uses",{"_index":479,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["usevalue",{"_index":568,"title":{},"body":{"modules/MeetingModule.html":{}}}],["using",{"_index":367,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["valid",{"_index":432,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["validation",{"_index":702,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["value",{"_index":492,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MeetingService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":486,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["variable",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1188,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1185,"title":{},"body":{"properties.html":{}}}],["via",{"_index":579,"title":{},"body":{"injectables/MeetingService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["watch",{"_index":1142,"title":{},"body":{"index.html":{}}}],["website",{"_index":1171,"title":{},"body":{"index.html":{}}}],["work",{"_index":562,"title":{},"body":{"modules/MeetingModule.html":{}}}],["world",{"_index":545,"title":{},"body":{"injectables/MeetingManagementService.html":{},"injectables/StudyProgramService.html":{}}}],["you'd",{"_index":1160,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":186,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Prop, Schema } from \"@nestjs/mongoose\";\nimport mongoose, { SchemaTypes, Types } from \"mongoose\";\n\n/**\n * @class AbstractDocument\n * @extends AggregateRoot\n * @description Base class for Mongoose schema with CQRS support.\n */\n@Schema()\nexport class AbstractDocument extends AggregateRoot {\n    /**\n     * @property {_id}\n     * @type {Types.ObjectId}\n     * @description Unique identifier for the document, represented by a Mongoose ObjectId.\n     */\n    @Prop({ type: SchemaTypes.ObjectId, default: () => new mongoose.Types.ObjectId()})\n    _id: Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractRepository.html":{"url":"injectables/AbstractRepository.html","title":"injectable - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:14\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:59\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:40\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:25\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:50\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractDocument } from './abstract.schema';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class AbstractRepository {\n  constructor(protected readonly model: Model) {}\n\n  /**\n   * Create a new document.\n   * @param document The document to create.\n   * @returns The created document.\n   */\n  async create(document: TDocument): Promise {\n    const createdDocument = new this.model(document);\n    return createdDocument.save();\n  }\n\n  /**\n   * Find a single document matching the filter query.\n   * @param filterQuery The filter query to find the document.\n   * @returns The found document.\n   * @throws NotFoundException if the document is not found.\n   */\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery).exec();\n\n    if (!document) {\n      throw new NotFoundException('Document not found');\n    }\n\n    return document;\n  }\n\n  /**\n   * Find multiple documents matching the filter query.\n   * @param filterQuery The filter query to find the documents.\n   * @returns An array of found documents.\n   */\n  async find(filterQuery: FilterQuery): Promise {\n    return this.model.find(filterQuery).exec();\n  }\n\n  /**\n   * Update a document by its ID.\n   * @param id The ID of the document to update.\n   * @param document The partial document containing the fields to update.\n   * @returns The updated document.\n   */\n  async update(id: string, document: Partial): Promise {\n    return this.model.findByIdAndUpdate(id, document, { new: true }).exec();\n  }\n  \n  /**\n   * Delete a document by its ID.\n   * @param id The ID of the document to delete.\n   * @returns The deleted document.\n   */\n  async delete(id: string): Promise {\n    return this.model.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassManagementController.html":{"url":"controllers/ClassManagementController.html","title":"controller - ClassManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class-management\n            \n\n\n            \n                Description\n            \n            \n                Controller for managing potential classes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialClassDto: CreatePotentialClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:30\n                \n            \n\n\n            \n                \n                    Create a new potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialClassDto\n                                    \n                                                CreatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:114\n                \n            \n\n\n            \n                \n                    Delete a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:52\n                \n            \n\n\n            \n                \n                    Get all potential classes.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential classes.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:69\n                \n            \n\n\n            \n                \n                    Get a potential class by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential class with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialClassDto: UpdatePotentialClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:87\n                \n            \n\n\n            \n                \n                    Update a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                                \n                                    updatePotentialClassDto\n                                    \n                                                UpdatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential class.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ClassManagementService } from './class-management.service'\nimport { CreatePotentialClassDto } from './dto/CreatePotentialClassDto';\nimport { UpdatePotentialClassDto } from './dto/UpdatePotentialClassDto';\n\n/**\n * Controller for managing potential classes.\n */\n@Controller('class-management')\nexport class ClassManagementController {\n  constructor(\n    private readonly potentialClassService: ClassManagementService,\n  ) {}\n\n  /**\n   * Create a new potential class.\n   *\n   * @param createPotentialClassDto - The data for creating a potential class.\n   * @returns The created potential class.\n   */\n  @Post()\n  async create(@Body() createPotentialClassDto: CreatePotentialClassDto) {\n    try {\n      const potentialClass = await this.potentialClassService.create(\n        createPotentialClassDto,\n      );\n\n      return {\n        status: 201,\n        message: 'Created Potential Class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get all potential classes.\n   *\n   * @returns All potential classes.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const classes = await this.potentialClassService.findAll();\n\n      return { status: 200, data: { classes } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get a potential class by its ID.\n   *\n   * @param id - The ID of the potential class.\n   * @returns The potential class with the specified ID.\n   */\n  @Get(\":id\")\n  async findById(@Param(\"id\") id: string) {\n    try {\n      const classes = await this.potentialClassService.findById(id);\n\n      return { status: 200, data: { classes } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Update a potential class.\n   *\n   * @param id - The ID of the potential class.\n   * @param updatePotentialClassDto - The updated data for the potential class.\n   * @returns The updated potential class.\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialClassDto: UpdatePotentialClassDto,\n  ) {\n    try {\n      const potentialClass = await this.potentialClassService.update(\n        id,\n        updatePotentialClassDto,\n      );\n\n      return {\n        status: 200,\n        message: 'Updated Potential class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Delete a potential class.\n   *\n   * @param id - The ID of the potential class to delete.\n   * @returns The deleted potential class.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialClass = await this.potentialClassService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassManagementModule.html":{"url":"modules/ClassManagementModule.html","title":"module - ClassManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/class-management/src/class-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing potential classes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassManagementRepository\n                        \n                        \n                            ClassManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialClass, PotentialClassSchema } from './schemas/potentialClass.schema';\nimport { ClassManagementController } from './class-management.controller';\nimport { ClassManagementService } from './class-management.service';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\nimport { PotentialClassRegisteredEvent } from './event/potentialClass-registered.event';\n\n/**\n * Module for managing potential classes.\n */\n@Module({\n  imports: [\n    // Load configuration from .env file\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/class-management/.env'\n    }),\n\n    // Register RabbitMQ module with the given service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import the DatabaseModule for database connection\n    DatabaseModule,\n\n    // Import the CqrsModule for Command/Event handling\n    CqrsModule,\n\n    // Register the PotentialClass model as a Mongoose feature\n    MongooseModule.forFeature([{ name: PotentialClass.name, schema: PotentialClassSchema }])\n  ],\n  controllers: [ClassManagementController],\n  providers: [\n    // Provide the ClassManagementService to handle business logic\n    ClassManagementService,\n\n    // Provide the ClassManagementRepository to interact with the database\n    ClassManagementRepository,\n\n    // Provide the PotentialClassRegisteredEvent for event handling\n    PotentialClassRegisteredEvent,\n\n    // Provide the CreatePotentialClassCommand for command handling\n    CreatePotentialClassCommand,\n  ],\n})\nexport class ClassManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementRepository.html":{"url":"injectables/ClassManagementRepository.html","title":"injectable - ClassManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for the PotentialClass schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialClass } from \"./schemas/potentialClass.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n@Injectable()\nexport class ClassManagementRepository extends AbstractRepository {\n    /**\n     * Constructs an instance of ClassManagementRepository.\n     * @param applicationModel The Mongoose model for the PotentialClass schema.\n     */\n    constructor(@InjectModel(PotentialClass.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementService.html":{"url":"injectables/ClassManagementService.html","title":"injectable - ClassManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing potential classes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ClassManagementRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ClassManagementRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialClassDto: CreatePotentialClassDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialClassDto\n                                    \n                                                CreatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:71\n                \n            \n\n\n            \n                \n                    Delete a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:34\n                \n            \n\n\n            \n                \n                    Get all potential classes.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential classes.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:44\n                \n            \n\n\n            \n                \n                    Get a potential class by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential class with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialClassDto: UpdatePotentialClassDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:55\n                \n            \n\n\n            \n                \n                    Update a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                                \n                                    updatePotentialClassDto\n                                    \n                                                UpdatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential class.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from './schemas/potentialClass.schema';\nimport { AbstractRepository } from '@app/common';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassDto } from './dto/CreatePotentialClassDto';\nimport { UpdatePotentialClassDto } from './dto/UpdatePotentialClassDto';\n\n/**\n * Service for managing potential classes.\n */\n@Injectable()\nexport class ClassManagementService {\n  constructor(\n    @InjectModel(PotentialClass.name)\n    private readonly ClassManagementRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Create a new potential class.\n   *\n   * @param createPotentialClassDto - The data for creating a potential class.\n   * @returns The created potential class.\n   */\n  async create(createPotentialClassDto: CreatePotentialClassDto) {\n    return await this.ClassManagementRepository.create(createPotentialClassDto);\n  }\n\n  /**\n   * Get all potential classes.\n   *\n   * @returns All potential classes.\n   */\n  async findAll() {\n    return await this.ClassManagementRepository.find({});\n  }\n\n  /**\n   * Get a potential class by its ID.\n   *\n   * @param id - The ID of the potential class.\n   * @returns The potential class with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.ClassManagementRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Update a potential class.\n   *\n   * @param id - The ID of the potential class.\n   * @param updatePotentialClassDto - The updated data for the potential class.\n   * @returns The updated potential class.\n   */\n  async update(\n    id: string,\n    updatePotentialClassDto: UpdatePotentialClassDto,\n  ) {\n    return await this.ClassManagementRepository.update(\n      id,\n      updatePotentialClassDto,\n    );\n  }\n\n  /**\n   * Delete a potential class.\n   *\n   * @param id - The ID of the potential class to delete.\n   * @returns The deleted potential class.\n   */\n  async delete(id: string) {\n    return await this.ClassManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingDto.html":{"url":"classes/CreateMeetingDto.html","title":"class - CreateMeetingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/dto/create-meeting.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a meeting.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                    \n                                    \n                                studentId\n                            \n                            \n                                    \n                                    \n                                    \n                                teacherId\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:35\n                        \n                    \n\n            \n                \n                    End time of the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:29\n                        \n                    \n\n            \n                \n                    Start time of the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:15\n                        \n                    \n\n            \n                \n                    ID of the student associated with the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        teacherId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:23\n                        \n                    \n\n            \n                \n                    ID of the teacher associated with the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsDate, IsMongoId, IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO for creating a meeting.\n * Extends the AbstractDocument class.\n */\nexport class CreateMeetingDto extends AbstractDocument {\n  /**\n   * ID of the student associated with the meeting.\n   */\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  studentId: string;\n\n  /**\n   * ID of the teacher associated with the meeting.\n   */\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  teacherId: string;\n\n  /**\n   * Start time of the meeting.\n   */\n  @IsDate()\n  startTime: Date;\n\n  /**\n   * End time of the meeting.\n   */\n  @IsDate()\n  endTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommand.html":{"url":"classes/CreatePotentialClassCommand.html","title":"class - CreatePotentialClassCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: CreatePotentialClassDto)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        CreatePotentialClassDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) containing the data for creating the potential class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialClassDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) containing the data for creating the potential class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialClassDto } from '../dto/CreatePotentialClassDto';\n\nexport class CreatePotentialClassCommand implements ICommand {\n  /**\n   * Constructs an instance of CreatePotentialClassCommand.\n   * @param createPotentialClassDto The DTO (Data Transfer Object) containing the data for creating the potential class.\n   */\n  constructor(public readonly createPotentialClassDto: CreatePotentialClassDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommandHandler.html":{"url":"classes/CreatePotentialClassCommandHandler.html","title":"class - CreatePotentialClassCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, classManagementService: ClassManagementService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommandHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The event publisher for publishing events.\n\n                                                        \n                                                \n                                                \n                                                        classManagementService\n                                                  \n                                                        \n                                                                        ClassManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialClassCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the CreatePotentialClassCommand and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialClassCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialClassCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialClassCommand } from \"./create-potentialClass.command\";\nimport { ClassManagementRepository } from \"../class-management.repository\";\nimport { PotentialClassRegisteredEvent } from \"../event/potentialClass-registered.event\";\nimport { ClassManagementService } from \"../class-management.service\";\n\n@CommandHandler(CreatePotentialClassCommand)\nexport class CreatePotentialClassCommandHandler implements ICommandHandler {\n    /**\n     * Constructs an instance of CreatePotentialClassCommandHandler.\n     * @param publisher The event publisher for publishing events.\n     * @param classManagementRepository The repository for managing classes.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private classManagementService: ClassManagementService\n    ) {}\n\n    /**\n     * Executes the CreatePotentialClassCommand and performs the necessary operations.\n     * @param command The CreatePotentialClassCommand instance.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialClassCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialClassDto } = command;\n\n        // Saving potential class into the database\n        const potentialClass = await this.classManagementService.create(createPotentialClassDto);\n\n        // Creating a PotentialClassRegisteredEvent\n        const classManagement = new PotentialClassRegisteredEvent(potentialClass);\n\n        // Merging the event with the event context and committing it\n        const event = this.publisher.mergeObjectContext(classManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassDto.html":{"url":"classes/CreatePotentialClassDto.html","title":"class - CreatePotentialClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/CreatePotentialClassDto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/CreatePotentialClassDto.ts:15\n                        \n                    \n\n            \n                \n                    The name of the class to apply for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/CreatePotentialClassDto.ts:20\n                        \n                    \n\n            \n                \n                    The potential student applying for the class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { AbstractDocument } from \"@app/common\";\nimport { PotentialStudent } from \"apps/student-management/src/schemas/potentialStudent.schema\";\n\nexport class CreatePotentialClassDto extends AbstractDocument {\n    /**\n     * The name of the class to apply for.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The potential student applying for the class.\n     */\n    student: PotentialStudent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommand.html":{"url":"classes/CreatePotentialModuleCommand.html","title":"class - CreatePotentialModuleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command for creating a potential module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: CreatePotentialModuleDto)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the CreatePotentialModuleCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        CreatePotentialModuleDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating a potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialModuleDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating a potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialModuleDto } from '../dto/CreatePotentialModuleDto';\n\n/**\n * Command for creating a potential module.\n */\nexport class CreatePotentialModuleCommand implements ICommand {\n  /**\n   * Initializes a new instance of the CreatePotentialModuleCommand class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating a potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: CreatePotentialModuleDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommandHandler.html":{"url":"classes/CreatePotentialModuleCommandHandler.html","title":"class - CreatePotentialModuleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for creating potential modules.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, moduleManagementService: ModuleManagementService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleManagementService\n                                                  \n                                                        \n                                                                        ModuleManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialModuleCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:22\n                \n            \n\n\n            \n                \n                    Executes the create potential module command.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialModuleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The create potential module command.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialModuleCommand } from \"./create-potentialModule.command\";\nimport { PotentialModuleRegisteredEvent } from \"../events/potentialModule-registered.event\"\nimport { ModuleManagementService } from \"../module-management.service\";\n\n/**\n * Command handler for creating potential modules.\n */\n@CommandHandler(CreatePotentialModuleCommand)\nexport class CreatePotentialModuleCommandHandler implements ICommandHandler {\n\n    constructor(\n        private readonly publisher: EventPublisher,\n        private moduleManagementService: ModuleManagementService\n    ) {}\n\n    /**\n     * Executes the create potential module command.\n     * @param command The create potential module command.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialModuleCommand): Promise {\n        console.log(\"Triggered Command Handler\")\n\n        const { createPotentialModuleDto } = command;\n\n        // Saving potential module into the database\n        const potentialModule = await this.moduleManagementService.create(createPotentialModuleDto);\n        \n        // Create a PotentialModuleRegisteredEvent with the saved potential module\n        const moduleManagement = new PotentialModuleRegisteredEvent(potentialModule);\n\n        // Publish the event using the EventPublisher\n        const event = this.publisher.mergeObjectContext(moduleManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleDto.html":{"url":"classes/CreatePotentialModuleDto.html","title":"class - CreatePotentialModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/CreatePotentialModuleDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for applying a module.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:26\n                        \n                    \n\n            \n                \n                    Class associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:16\n                        \n                    \n\n            \n                \n                    Name of the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { PotentialClass } from \"apps/class-management/src/schemas/potentialClass.schema\";\nimport { Teacher } from \"apps/student-management/src/schemas/teacher.schema\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO (Data Transfer Object) for applying a module.\n * Extends the AbstractDocument class.\n */\nexport class CreatePotentialModuleDto extends AbstractDocument {\n    /**\n     * Name of the module.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * Teacher associated with the module.\n     */\n    teacher: string;\n\n    /**\n     * Class associated with the module.\n     */\n    class: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommand.html":{"url":"classes/CreatePotentialStudentCommand.html","title":"class - CreatePotentialStudentCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential student.\nImplements the ICommand interface from the @nestjs/cqrs module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: CreatePotentialStudentDto)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        CreatePotentialStudentDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data required to create a potential student.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialStudentDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:15\n                        \n                    \n\n            \n                \n                    - The data required to create a potential student.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialStudentDto } from '../../potentialStudent/dto/create-potentialStudent.dto';\n\n/**\n * Command class for creating a potential student.\n * Implements the ICommand interface from the @nestjs/cqrs module.\n */\nexport class CreatePotentialStudentCommand implements ICommand {\n  /**\n   * Constructor for the CreatePotentialStudentCommand class.\n   * @param createPotentialStudentDto - The data required to create a potential student.\n   */\n  constructor(\n    public readonly createPotentialStudentDto: CreatePotentialStudentDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommandHandler.html":{"url":"classes/CreatePotentialStudentCommandHandler.html","title":"class - CreatePotentialStudentCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for CreatePotentialStudentCommand.\nThis class handles the command to create a potential student and publishes the corresponding event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, studentManagementService: PotentialStudentService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommandHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe EventPublisher instance used to publish events.\n\n\n                                                        \n                                                \n                                                \n                                                        studentManagementService\n                                                  \n                                                        \n                                                                        PotentialStudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialStudentCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:28\n                \n            \n\n\n            \n                \n                    Execute method that handles the CreatePotentialStudentCommand.\nIt saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialStudentCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe CreatePotentialStudentCommand to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialStudentCommand } from \"./create-potentialStudent.command\";\nimport { PotentialStudentRegisteredEvent } from \"../../events/potentialStudent-registered.event\";\nimport { PotentialStudentService } from \"../../potentialStudent/potentialStudent.service\";\n\n/**\n * Command handler for CreatePotentialStudentCommand.\n * This class handles the command to create a potential student and publishes the corresponding event.\n */\n@CommandHandler(CreatePotentialStudentCommand)\nexport class CreatePotentialStudentCommandHandler implements ICommandHandler {\n\n    /**\n     * Constructor for the CreatePotentialStudentCommandHandler class.\n     * @param publisher - The EventPublisher instance used to publish events.\n     * @param studentManagementRepository - The StudentManagementRepository instance used to access the database.\n     */\n    constructor(\n        private readonly publisher: EventPublisher, private studentManagementService: PotentialStudentService) {}\n\n    /**\n     * Execute method that handles the CreatePotentialStudentCommand.\n     * It saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n     * @param command - The CreatePotentialStudentCommand to be handled.\n     * @returns A Promise representing the completion of the execution.\n     */\n    async execute(command: CreatePotentialStudentCommand): Promise {\n        // Log a message to indicate that the command handler has been triggered\n        console.log(\"Triggered Command Handler\")\n\n        // Extract the createPotentialStudentDto from the command\n        const { createPotentialStudentDto } = command;\n\n        // Saving student into database\n        const potentialStudent = await this.studentManagementService.create(createPotentialStudentDto);\n        const student = new PotentialStudentRegisteredEvent(potentialStudent);\n\n        // Merge the event with the EventPublisher context to track its operations\n        const event = this.publisher.mergeObjectContext(student);\n\n        // Publish the event to trigger any registered event handlers for this event\n        event.publish(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentDto.html":{"url":"classes/CreatePotentialStudentDto.html","title":"class - CreatePotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:15\n                        \n                    \n\n            \n                \n                    The email property represents the email address of the potential student.\nIt must be a valid email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:30\n                        \n                    \n\n            \n                \n                    The phoneNumber property represents the phone number of the potential student.\nIt must be a valid phone number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:23\n                        \n                    \n\n            \n                \n                    The study property represents the field of study of the potential student.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsDate, IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from \"class-validator\";\n\nexport class CreatePotentialStudentDto extends AbstractDocument {\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The email property represents the email address of the potential student.\n     * It must be a valid email address.\n     */\n    @IsEmail()\n    email: string;\n\n    /**\n     * The study property represents the field of study of the potential student.\n     * It must be a non-empty string.\n     */\n    @IsString()\n    @IsNotEmpty()\n    study: string;\n  \n    /**\n     * The phoneNumber property represents the phone number of the potential student.\n     * It must be a valid phone number.\n     */\n    @IsPhoneNumber()\n    phoneNumber: string;\n\n    @IsDate()\n    birthday: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommand.html":{"url":"classes/CreatePotentialTestCommand.html","title":"class - CreatePotentialTestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential test.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: createPotentialTestDto)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreatePotentialTestCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        createPotentialTestDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for creating a potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialTestDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for creating a potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { createPotentialTestDto } from \"../dto/create-potentialTest.dto\";\n\n/**\n * Command class for creating a potential test.\n */\nexport class CreatePotentialTestCommand implements ICommand {\n    /**\n     * Creates an instance of CreatePotentialTestCommand.\n     * @param createPotentialTestDto The DTO object containing the data for creating a potential test.\n     */\n    constructor(public readonly createPotentialTestDto: createPotentialTestDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommandHandler.html":{"url":"classes/CreatePotentialTestCommandHandler.html","title":"class - CreatePotentialTestCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler class responsible for handling the CreatePotentialTestCommand.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialTestCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the command handler logic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialTestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialTestCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the command execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialTestCommand } from \"./create-potentialTest.command\";\nimport { PotentialTestRegisteredEvent } from \"../events/potentialTest-registered.event\";\nimport { TestProgramRepository } from \"../test-program.repository\";\n\n/**\n * Command handler class responsible for handling the CreatePotentialTestCommand.\n */\n@CommandHandler(CreatePotentialTestCommand)\nexport class CreatePotentialTestCommandHandler implements ICommandHandler {\n    constructor(\n        /**\n         * The event publisher used to publish events.\n         */\n        private readonly publisher: EventPublisher,\n        /**\n         * The repository for managing test programs.\n         */\n        private testProgramRepository: TestProgramRepository\n    ) {}\n\n    /**\n     * Executes the command handler logic.\n     * @param command The CreatePotentialTestCommand instance.\n     * @returns A promise that resolves to the result of the command execution.\n     */\n    async execute(command: CreatePotentialTestCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialTestDto } = command;\n\n        // Saving the test into the database\n        const potentialTest = await this.testProgramRepository.create(createPotentialTestDto);\n        const test = new PotentialTestRegisteredEvent(potentialTest);\n\n        const event = this.publisher.mergeObjectContext(test);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/create-teacher.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) class for creating a teacher.\nExtends the AbstractDocument class from the \"@app/common\" module.\nThis class represents the data required to create a teacher.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/teacher/dto/create-teacher.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name property represents the name of the teacher.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * Data Transfer Object (DTO) class for creating a teacher.\n * Extends the AbstractDocument class from the \"@app/common\" module.\n * This class represents the data required to create a teacher.\n */\nexport class CreateTeacherDto extends AbstractDocument {\n  /**\n   * The name property represents the name of the teacher.\n   * It must be a non-empty string.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Import necessary dependencies\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * @module DatabaseModule\n * @description Module for configuring the database connection using Mongoose.\n */\n@Module({\n  imports: [\n    /**\n     * @module MongooseModule\n     * @description Mongoose module for connecting to the MongoDB database.\n     * It uses the `forRootAsync` method to configure the connection asynchronously.\n     */\n    MongooseModule.forRootAsync({\n      /**\n       * @method useFactory\n       * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n       * @returns {Object} - The Mongoose connection configuration object.\n       * @description Factory function for creating the Mongoose connection configuration object.\n       * It retrieves the MongoDB URI from the `MONGODB_URI` configuration value using the ConfigService.\n       */\n      useFactory: (configService: ConfigService) => ({\n          uri: configService.get('MONGODB_URI')\n      }),\n      /**\n       * @property {Array} inject\n       * @description An array of dependencies to inject into the factory function.\n       * In this case, it injects the ConfigService.\n       */\n      inject: [ConfigService]\n    })\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Meeting.html":{"url":"classes/Meeting.html","title":"class - Meeting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Meeting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/meeting.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema for the Meeting collection.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: PotentialStudent})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Teacher})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from '@app/common';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PotentialStudent } from './potentialStudent.schema';\nimport { Teacher } from './teacher.schema';\n\n/**\n * Schema for the Meeting collection.\n */\n@Schema()\nexport class Meeting extends AbstractDocument {\n  @Prop({ required: true, type: PotentialStudent })\n  student: PotentialStudent;\n\n  @Prop({ required: true, type: Teacher })\n  teacher: Teacher;\n\n  @Prop({ required: true })\n  startTime: Date;\n\n  @Prop({ required: true })\n  endTime: Date;\n}\n\nexport const MeetingSchema = SchemaFactory.createForClass(Meeting);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingController.html":{"url":"controllers/MeetingController.html","title":"controller - MeetingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meetings\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMeetingDto: CreateMeetingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.controller.ts:17\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new meeting.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createMeetingDto\n                                    \n                                                CreateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating a meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: number; message: string; }\n\n                    \n                    \n                        Object containing the status and a message indicating the scheduled meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateMeetingDto: UpdateMeetingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.controller.ts:30\n                \n            \n\n\n            \n                \n                    Endpoint for updating a meeting.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to update.\n\n                                    \n                                \n                                \n                                    updateMeetingDto\n                                    \n                                                UpdateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for updating the meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: number; message: string; }\n\n                    \n                    \n                        Object containing the status and a message indicating the updated meeting.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Post, Put } from '@nestjs/common';\nimport { MeetingService } from './meeting.service';\nimport { CreateMeetingDto } from './dto/create-meeting.dto';\nimport { UpdateMeetingDto } from './dto/update-meeting.dto';\n\n@Controller('meetings')\nexport class MeetingController {\n  constructor(private readonly meetingService: MeetingService) {}\n\n  /**\n   * Endpoint for creating a new meeting.\n   * \n   * @param createMeetingDto The data for creating a meeting.\n   * @returns Object containing the status and a message indicating the scheduled meeting.\n   */\n  @Post()\n  create(@Body() createMeetingDto: CreateMeetingDto) {\n    this.meetingService.create(createMeetingDto);\n    return { status: 201, message: `Your meeting with teacher ${createMeetingDto.teacherId} is scheduled for ${createMeetingDto.startTime}.` };\n  }\n\n  /**\n   * Endpoint for updating a meeting.\n   * \n   * @param id The ID of the meeting to update.\n   * @param updateMeetingDto The data for updating the meeting.\n   * @returns Object containing the status and a message indicating the updated meeting.\n   */\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMeetingDto: UpdateMeetingDto) {\n    this.meetingService.update(id, updateMeetingDto);\n    return { status: 200, message: `Your meeting is updated` };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingManagementController.html":{"url":"controllers/MeetingManagementController.html","title":"controller - MeetingManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/meeting-management/src/meeting-management.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/meeting-management/src/meeting-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MeetingManagementService } from './meeting-management.service';\n\n@Controller()\nexport class MeetingManagementController {\n  constructor(private readonly meetingManagementService: MeetingManagementService) {}\n\n  @Get()\n  getHello(): string {\n    return this.meetingManagementService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingManagementModule.html":{"url":"modules/MeetingManagementModule.html","title":"module - MeetingManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingManagementModule\n\n\n\ncluster_MeetingManagementModule_providers\n\n\n\n\nMeetingManagementService\n\nMeetingManagementService\n\n\n\nMeetingManagementModule\n\nMeetingManagementModule\n\nMeetingManagementModule -->\n\nMeetingManagementService->MeetingManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/meeting-management/src/meeting-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeetingManagementController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MeetingManagementController } from './meeting-management.controller';\nimport { MeetingManagementService } from './meeting-management.service';\n\n@Module({\n  imports: [],\n  controllers: [MeetingManagementController],\n  providers: [MeetingManagementService],\n})\nexport class MeetingManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingManagementService.html":{"url":"injectables/MeetingManagementService.html","title":"injectable - MeetingManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/meeting-management/src/meeting-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/meeting-management/src/meeting-management.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MeetingManagementService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingModule.html":{"url":"modules/MeetingModule.html","title":"module - MeetingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_imports\n\n\n\ncluster_MeetingModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nRmqModule->MeetingModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The MeetingModule is responsible for managing meetings between potential students and teachers.\nIt provides the necessary controllers, services, and modules to handle meeting operations.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeetingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MeetingService } from './meeting.service';\nimport { MeetingController } from './meeting.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { APPLICATION_SERVICE } from '../constants/services';\nimport { AbstractRepository, RmqModule } from '@app/common';\nimport { Meeting, MeetingSchema } from '../schemas/meeting.schema';\nimport { PotentialStudent, PotentialStudentSchema } from '../schemas/potentialStudent.schema';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\n\n/**\n * The MeetingModule is responsible for managing meetings between potential students and teachers.\n * It provides the necessary controllers, services, and modules to handle meeting operations.\n */\n@Module({\n  imports: [\n    // Register the RmqModule with the specified service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Register the MongooseModule to work with the Meeting, Teacher, and PotentialStudent schemas\n    MongooseModule.forFeature([\n      { name: Meeting.name, schema: MeetingSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n      { name: PotentialStudent.name, schema: PotentialStudentSchema },\n    ]),\n  ],\n  controllers: [MeetingController],\n  providers: [\n    // Provide the MeetingService to handle meeting-related operations\n    MeetingService,\n\n    // Provide the AbstractRepository with the PotentialStudent model\n    { provide: AbstractRepository, useValue: { model: PotentialStudent } },\n  ],\n})\nexport class MeetingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingService.html":{"url":"injectables/MeetingService.html","title":"injectable - MeetingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meetingRepository: AbstractRepository, studentRepository: AbstractRepository, teacherRepository: AbstractRepository, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/meeting/meeting.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meetingRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMeetingDto: CreateMeetingDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:26\n                \n            \n\n\n            \n                \n                    Creates a new meeting between a potential student and a teacher.\nSends a notification message via RabbitMQ.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createMeetingDto\n                                    \n                                                CreateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing meeting details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:84\n                \n            \n\n\n            \n                \n                    Deletes a meeting by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:50\n                \n            \n\n\n            \n                \n                    Retrieves all meetings.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A list of meetings.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:59\n                \n            \n\n\n            \n                \n                    Retrieves a meeting by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The retrieved meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateMeetingDto: UpdateMeetingDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:70\n                \n            \n\n\n            \n                \n                    Updates a meeting by its ID.\nSends a notification message via RabbitMQ.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to update.\n\n                                    \n                                \n                                \n                                    updateMeetingDto\n                                    \n                                                UpdateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing updated meeting details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated meeting.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { Meeting } from '../schemas/meeting.schema';\nimport { CreateMeetingDto } from './dto/create-meeting.dto';\nimport { UpdateMeetingDto } from './dto/update-meeting.dto';\nimport { PotentialStudent } from '../schemas/potentialStudent.schema';\nimport { Teacher } from '../schemas/teacher.schema';\n\n@Injectable()\nexport class MeetingService {\n  constructor(\n    @InjectModel(Meeting.name)\n    private readonly meetingRepository: AbstractRepository,\n    private readonly studentRepository: AbstractRepository,\n    private readonly teacherRepository: AbstractRepository,\n    private readonly rabbitmqService: RabbitmqService,\n  ) {}\n\n  /**\n   * Creates a new meeting between a potential student and a teacher.\n   * Sends a notification message via RabbitMQ.\n   * @param createMeetingDto The DTO containing meeting details.\n   * @returns The created meeting.\n   */\n  async create(createMeetingDto: CreateMeetingDto) {\n    const student = await this.studentRepository.findOne({\n      _id: createMeetingDto.studentId,\n    });\n    const teacher = await this.teacherRepository.findOne({\n      _id: createMeetingDto.teacherId,\n    });\n\n    const meeting = new Meeting();\n    meeting.student = student;\n    meeting.teacher = teacher;\n    meeting.startTime = createMeetingDto.startTime;\n    meeting.endTime = createMeetingDto.endTime;\n\n    const message = `A meeting with ${teacher.name} is scheduled for ${meeting.startTime}.`;\n    await this.rabbitmqService.sendMessage('meeting_notifications', message);\n\n    return await this.meetingRepository.create(meeting);\n  }\n\n  /**\n   * Retrieves all meetings.\n   * @returns A list of meetings.\n   */\n  async findAll() {\n    return await this.meetingRepository.find({});\n  }\n\n  /**\n   * Retrieves a meeting by its ID.\n   * @param id The ID of the meeting.\n   * @returns The retrieved meeting.\n   */\n  async findById(id: string) {\n    return await this.meetingRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Updates a meeting by its ID.\n   * Sends a notification message via RabbitMQ.\n   * @param id The ID of the meeting to update.\n   * @param updateMeetingDto The DTO containing updated meeting details.\n   * @returns The updated meeting.\n   */\n  async update(id: string, updateMeetingDto: UpdateMeetingDto) {\n    const match = 'Negative'; // Placeholder value, update as needed\n    const message = `Your last meeting resolved into a ${match} match`;\n\n    await this.rabbitmqService.sendMessage('student_notifications', message);\n\n    return await this.meetingRepository.update(id, updateMeetingDto);\n  }\n\n  /**\n   * Deletes a meeting by its ID.\n   * @param id The ID of the meeting to delete.\n   * @returns The deleted meeting.\n   */\n  async delete(id: string) {\n    return await this.meetingRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModuleManagementController.html":{"url":"controllers/ModuleManagementController.html","title":"controller - ModuleManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModuleManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialModuleDto: CreatePotentialModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:28\n                \n            \n\n\n            \n                \n                    Create a new potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialModuleDto\n                                    \n                                                CreatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:113\n                \n            \n\n\n            \n                \n                    Delete a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:50\n                \n            \n\n\n            \n                \n                    Get all potential modules.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential modules.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:67\n                \n            \n\n\n            \n                \n                    Get a potential module by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential module with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:85\n                \n            \n\n\n            \n                \n                    Update a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                                \n                                    updatePotentialModuleDto\n                                    \n                                                UpdatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential module.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Patch\n} from '@nestjs/common';\nimport { ModuleManagementService } from './module-management.service';\nimport { CreatePotentialModuleDto } from './dto/CreatePotentialModuleDto';\nimport { UpdatePotentialModuleDto } from './dto/UpdatePotentialModuleDto';\n\n@Controller('module-management')\nexport class ModuleManagementController {\n  constructor(\n    private readonly potentialModuleService: ModuleManagementService,\n  ) {}\n\n  /**\n   * Create a new potential module.\n   *\n   * @param createPotentialModuleDto - The data for creating a potential module.\n   * @returns The created potential module.\n   */\n  @Post()\n  async create(@Body() createPotentialModuleDto: CreatePotentialModuleDto) {\n    try {\n      const potentialModule = await this.potentialModuleService.create(\n        createPotentialModuleDto,\n      );\n\n      return {\n        status: 201,\n        message: 'Created Potential Module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get all potential modules.\n   *\n   * @returns All potential modules.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const modules = await this.potentialModuleService.findAll();\n\n      return { status: 200, data: { modules } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get a potential module by its ID.\n   *\n   * @param id - The ID of the potential module.\n   * @returns The potential module with the specified ID.\n   */\n  @Get(':id')\n  async findById(@Param('id') id: string) {\n    try {\n      const module = await this.potentialModuleService.findById(id);\n\n      return { status: 200, data: { module } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Update a potential module.\n   *\n   * @param id - The ID of the potential module.\n   * @param updatePotentialModuleDto - The updated data for the potential module.\n   * @returns The updated potential module.\n   */\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialModuleDto: UpdatePotentialModuleDto,\n  ) {\n    try {\n      const potentialModule = await this.potentialModuleService.update(\n        id,\n        updatePotentialModuleDto,\n      );\n  \n      return {\n        status: 200,\n        message: 'Updated Potential Module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n  \n\n  /**\n   * Delete a potential module.\n   *\n   * @param id - The ID of the potential module to delete.\n   * @returns The deleted potential module.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialModule = await this.potentialModuleService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModuleManagementModule.html":{"url":"modules/ModuleManagementModule.html","title":"module - ModuleManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModuleManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_imports\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/module-management/src/module-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Nest module for managing the module management feature.\nResponsible for importing dependencies, configuring providers, and controllers.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModuleManagementRepository\n                        \n                        \n                            ModuleManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModuleManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialModule, PotentialModuleSchema } from './schemas/potentialModule.schema';\nimport { ModuleManagementService } from './module-management.service';\nimport { ModuleManagementController } from './module-management.controller';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { PotentialModuleRegisteredEvent } from './events/potentialModule-registered.event';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Nest module for managing the module management feature.\n * Responsible for importing dependencies, configuring providers, and controllers.\n */\n@Module({\n  imports: [\n    // Import configuration module\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/module-management/.env'\n    }),\n\n    // Import RabbitMQ module\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import database module\n    DatabaseModule,\n\n    // Import CQRS module\n    CqrsModule,\n\n    // Import Mongoose module and register potential module schema\n    MongooseModule.forFeature([{ name: PotentialModule.name, schema: PotentialModuleSchema }])\n  ],\n  controllers: [ModuleManagementController],\n  providers: [\n    // Configure module management service and repository\n    ModuleManagementService,\n    ModuleManagementRepository,\n\n    // Configure event and command handlers\n    PotentialModuleRegisteredEvent,\n    CreatePotentialModuleCommand\n  ],\n})\nexport class ModuleManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementRepository.html":{"url":"injectables/ModuleManagementRepository.html","title":"injectable - ModuleManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repository class for handling database operations related to the PotentialModule entity.\nExtends the abstract repository class provided by the common module.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.repository.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the ModuleManagementRepository instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected Mongoose model for the PotentialModule schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialModule } from \"./schemas/potentialModule.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Repository class for handling database operations related to the `PotentialModule` entity.\n * Extends the abstract repository class provided by the common module.\n */\n@Injectable()\nexport class ModuleManagementRepository extends AbstractRepository {\n    /**\n     * Constructs the `ModuleManagementRepository` instance.\n     * @param applicationModel The injected Mongoose model for the `PotentialModule` schema.\n     */\n    constructor(@InjectModel(PotentialModule.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementService.html":{"url":"injectables/ModuleManagementService.html","title":"injectable - ModuleManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing potential modules.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ModuleManagementRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ModuleManagementRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialModuleDto: CreatePotentialModuleDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Create a new potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialModuleDto\n                                    \n                                                CreatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:69\n                \n            \n\n\n            \n                \n                    Delete a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:35\n                \n            \n\n\n            \n                \n                    Get all potential modules.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential modules.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:45\n                \n            \n\n\n            \n                \n                    Get a potential module by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential module with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:56\n                \n            \n\n\n            \n                \n                    Update a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                                \n                                    updatePotentialModuleDto\n                                    \n                                                UpdatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential module.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialModule } from './schemas/potentialModule.schema';\nimport { AbstractRepository } from '@app/common';\nimport { CreatePotentialModuleDto } from './dto/CreatePotentialModuleDto';\nimport { UpdatePotentialModuleDto } from './dto/UpdatePotentialModuleDto';\n\n/**\n * Service for managing potential modules.\n */\n@Injectable()\nexport class ModuleManagementService {\n  constructor(\n    @InjectModel(PotentialModule.name)\n    private readonly ModuleManagementRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Create a new potential module.\n   *\n   * @param createPotentialModuleDto - The data for creating a potential module.\n   * @returns The created potential module.\n   */\n  async create(createPotentialModuleDto: CreatePotentialModuleDto) {\n    return await this.ModuleManagementRepository.create(\n      createPotentialModuleDto,\n    );\n  }\n\n  /**\n   * Get all potential modules.\n   *\n   * @returns All potential modules.\n   */\n  async findAll() {\n    return await this.ModuleManagementRepository.find({});\n  }\n\n  /**\n   * Get a potential module by its ID.\n   *\n   * @param id - The ID of the potential module.\n   * @returns The potential module with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.ModuleManagementRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Update a potential module.\n   *\n   * @param id - The ID of the potential module.\n   * @param updatePotentialModuleDto - The updated data for the potential module.\n   * @returns The updated potential module.\n   */\n  async update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto) {\n    return await this.ModuleManagementRepository.update(\n      id,\n      updatePotentialModuleDto,\n    );\n  }\n\n  /**\n   * Delete a potential module.\n   *\n   * @param id - The ID of the potential module to delete.\n   * @returns The deleted potential module.\n   */\n  async delete(id: string) {\n    return await this.ModuleManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClass.html":{"url":"classes/PotentialClass.html","title":"class - PotentialClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/schemas/potentialClass.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema for representing a potential class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:14\n                        \n                    \n\n            \n                \n                    The name of the potential class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:20\n                        \n                    \n\n            \n                \n                    The student associated with the potential class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { PotentialStudent } from 'apps/student-management/src/schemas/potentialStudent.schema';\n\n/**\n * Schema for representing a potential class.\n */\n@Schema()\nexport class PotentialClass extends AbstractDocument {\n  /**\n   * The name of the potential class.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The student associated with the potential class.\n   */\n  @Prop({ required: true })\n  student: PotentialStudent;\n}\n\n/**\n * Mongoose schema for the PotentialClass class.\n */\nexport const PotentialClassSchema = SchemaFactory.createForClass(PotentialClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEvent.html":{"url":"classes/PotentialClassRegisteredEvent.html","title":"class - PotentialClassRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data related to the potential class being registered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The data related to the potential class being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\nexport class PotentialClassRegisteredEvent extends AggregateRoot {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEvent.\n     * @param createPotentialClassDto The data related to the potential class being registered.\n     */\n    constructor(public readonly createPotentialClassDto: any) {\n        super();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEventHandler.html":{"url":"classes/PotentialClassRegisteredEventHandler.html","title":"class - PotentialClassRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialClass: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEventHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        potentialClass\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for PotentialClass.\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The RabbitmqService for sending notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialClassRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:28\n                \n            \n\n\n            \n                \n                    Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialClassRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialClassRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialClassRegisteredEvent } from './potentialClass-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from '../schemas/potentialClass.schema';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialClassRegisteredEvent)\nexport class PotentialClassRegisteredEventHandler implements IEventHandler {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEventHandler.\n     * @param potentialClass The Mongoose model for PotentialClass.\n     * @param rabbitmqService The RabbitmqService for sending notifications.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name) private readonly potentialClass: Model,\n        private readonly rabbitmqService: RabbitmqService\n    ) {}\n\n    /**\n     * Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n     * @param event The PotentialClassRegisteredEvent instance.\n     */\n    async handle(event: PotentialClassRegisteredEvent): Promise {\n        // Send a notification to the study using RabbitMQ\n        const message = `A new class named: ${PotentialClass.name} has been made`;\n\n        await this.rabbitmqService.sendMessage('study-notification', message);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModule.html":{"url":"classes/PotentialModule.html","title":"class - PotentialModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/schemas/potentialModule.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialModule entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:27\n                        \n                    \n\n            \n                \n                    Class associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:15\n                        \n                    \n\n            \n                \n                    Name of the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { Teacher } from 'apps/student-management/src/schemas/teacher.schema';\nimport { PotentialClass } from 'apps/class-management/src/schemas/potentialClass.schema';\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\n@Schema()\nexport class PotentialModule extends AbstractDocument {\n  /**\n   * Name of the potential module.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * Teacher associated with the potential module.\n   */\n  @Prop({ required: true })\n  teacher: string;\n\n  /**\n   * Class associated with the potential module.\n   */\n  @Prop({ required: true})\n  class: string;\n}\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\nexport const PotentialModuleSchema = SchemaFactory.createForClass(PotentialModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEvent.html":{"url":"classes/PotentialModuleRegisteredEvent.html","title":"class - PotentialModuleRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event representing the registration of a potential module.\nExtends the AggregateRoot class.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PotentialModuleRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating the potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating the potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event representing the registration of a potential module.\n * Extends the AggregateRoot class.\n */\nexport class PotentialModuleRegisteredEvent extends AggregateRoot {\n  /**\n   * Initializes a new instance of the PotentialModuleRegisteredEvent class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating the potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEventHandler.html":{"url":"classes/PotentialModuleRegisteredEventHandler.html","title":"class - PotentialModuleRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialModuleRegisteredEvent.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialModule: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialModule\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialModuleRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:23\n                \n            \n\n\n            \n                \n                    Handles the PotentialModuleRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialModuleRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialModuleRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves when the event handling is complete.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialModuleRegisteredEvent } from './potentialModule-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PotentialModule } from '../schemas/potentialModule.schema';\n\n/**\n * Event handler for the PotentialModuleRegisteredEvent.\n */\n@EventsHandler(PotentialModuleRegisteredEvent)\nexport class PotentialModuleRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(PotentialModule.name) private readonly potentialModule: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialModuleRegisteredEvent.\n   * @param event The PotentialModuleRegisteredEvent instance.\n   * @returns A promise that resolves when the event handling is complete.\n   */\n  async handle(event: PotentialModuleRegisteredEvent): Promise {\n    const message = `A new module named: ${PotentialModule.name} has been made`;\n    await this.rabbitmqService.sendMessage('study-notification', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudent.html":{"url":"classes/PotentialStudent.html","title":"class - PotentialStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/potentialStudent.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:37\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:30\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:23\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * @description Mongoose schema for the PotentialStudent class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class PotentialStudent extends AbstractDocument {\n  /**\n   * @description Property representing the name of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * @description Property representing the study of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  study: string;\n\n  /**\n   * @description Property representing the phone number of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  phoneNumber: string;\n\n  /**\n   * @description Property representing the email of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true})\n  birthday: Date;\n}\n\n/**\n * @description Mongoose schema for the PotentialStudent class created using SchemaFactory.\n */\nexport const PotentialStudentSchema = SchemaFactory.createForClass(PotentialStudent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PotentialStudentController.html":{"url":"controllers/PotentialStudentController.html","title":"controller - PotentialStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PotentialStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                potentialStudents\n            \n\n\n            \n                Description\n            \n            \n                Controller class for handling potential student-related HTTP requests.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialStudentDto: CreatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:19\n                \n            \n\n\n            \n                \n                    Endpoint for creating a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialStudentDto\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the data for creating a potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:94\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:38\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential students.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of potential students or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:54\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving a potential student by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential student with the specified ID or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:71\n                \n            \n\n\n            \n                \n                    Endpoint for updating a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to update.\n\n                                    \n                                \n                                \n                                    updatePotentialStudentDto\n                                    \n                                                UpdatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the updated data for the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { PotentialStudentService } from './potentialStudent.service';\nimport { CreatePotentialStudentDto } from './dto/create-potentialStudent.dto';\nimport { UpdatePotentialStudentDto } from './dto/update-potentialStudent.dto';\n\n/**\n * Controller class for handling potential student-related HTTP requests.\n */\n@Controller('potentialStudents')\nexport class PotentialStudentController {\n  constructor(private readonly potentialStudentService: PotentialStudentService) {}\n\n  /**\n   * Endpoint for creating a potential student.\n   * @param createPotentialStudentDto The DTO containing the data for creating a potential student.\n   * @returns The created potential student or an error message.\n   */\n  @Post()\n  async create(@Body() createPotentialStudentDto: CreatePotentialStudentDto) {\n    try {\n      const potentialStudent = await this.potentialStudentService.create(createPotentialStudentDto);\n\n      return {\n        status: 201,\n        message: 'Created Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for retrieving all potential students.\n   * @returns An array of potential students or an error message.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const students = await this.potentialStudentService.findAll();\n\n      return { status: 200, data: { students } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for retrieving a potential student by ID.\n   * @param id The ID of the potential student.\n   * @returns The potential student with the specified ID or an error message.\n   */\n  @Get(':id')\n  async findById(@Param('id') id: string) {\n    try {\n      const student = await this.potentialStudentService.findById(id);\n\n      return { status: 200, data: { student } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for updating a potential student.\n   * @param id The ID of the potential student to update.\n   * @param updatePotentialStudentDto The DTO containing the updated data for the potential student.\n   * @returns The updated potential student or an error message.\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialStudentDto: UpdatePotentialStudentDto,\n  ) {\n    try {\n      const potentialStudent = await this.potentialStudentService.update(id, updatePotentialStudentDto);\n\n      return {\n        status: 200,\n        message: 'Updated Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for deleting a potential student.\n   * @param id The ID of the potential student to delete.\n   * @returns The deleted potential student or an error message.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialStudent = await this.potentialStudentService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PotentialStudentModule.html":{"url":"modules/PotentialStudentModule.html","title":"module - PotentialStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    PotentialStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PotentialStudentModule\n\n\n\ncluster_PotentialStudentModule_imports\n\n\n\ncluster_PotentialStudentModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nPotentialStudentModule -->\n\nRmqModule->PotentialStudentModule\n\n\n\n\n\nPotentialStudentService\n\nPotentialStudentService\n\nPotentialStudentModule -->\n\nPotentialStudentService->PotentialStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module class for the potential student module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PotentialStudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PotentialStudentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\nimport { PotentialStudentService } from './potentialStudent.service';\nimport { PotentialStudent, PotentialStudentSchema } from '../schemas/potentialStudent.schema';\nimport { PotentialStudentController } from './potentialStudent.controller';\n\n/**\n * Module class for the potential student module.\n */\n@Module({\n  imports: [\n    // Register RabbitMQ module with the given service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Register the PotentialStudent model as a Mongoose feature\n    MongooseModule.forFeature([{ name: PotentialStudent.name, schema: PotentialStudentSchema }])\n  ],\n  controllers: [PotentialStudentController],\n  providers: [PotentialStudentService]\n})\nexport class PotentialStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEvent.html":{"url":"classes/PotentialStudentRegisteredEvent.html","title":"class - PotentialStudentRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for representing the registration of a potential student.\nExtends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\nThis class represents an event that is emitted when a potential student is registered.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialStudentRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data representing the potential student being registered.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:14\n                        \n                    \n\n            \n                \n                    - The data representing the potential student being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot, IEvent } from '@nestjs/cqrs';\n\n/**\n * Event class for representing the registration of a potential student.\n * Extends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\n * This class represents an event that is emitted when a potential student is registered.\n */\nexport class PotentialStudentRegisteredEvent extends AggregateRoot implements IEvent {\n  /**\n   * Constructor for the PotentialStudentRegisteredEvent class.\n   * @param createPotentialStudentDto - The data representing the potential student being registered.\n   */\n  constructor(public readonly createPotentialStudentDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEventHandler.html":{"url":"classes/PotentialStudentRegisteredEventHandler.html","title":"class - PotentialStudentRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Implements the IEventHandler interface for the event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialStudentRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialStudentRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialStudentRegisteredEvent object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEvent } from './potentialStudent-registered.event';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RabbitmqService } from '@app/common';\nimport { Teacher } from '../schemas/teacher.schema';\n\n/**\n * @description Event handler for the PotentialStudentRegisteredEvent.\n * Implements the IEventHandler interface for the event.\n */\n@EventsHandler(PotentialStudentRegisteredEvent)\nexport class PotentialStudentRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * @description Handle method that processes the PotentialStudentRegisteredEvent.\n   * @param event The PotentialStudentRegisteredEvent object.\n   */\n  async handle(event: PotentialStudentRegisteredEvent): Promise {\n    // Log a message to indicate that the event handler has been triggered\n    console.log(\"Triggered event handler\")\n\n    // Find a teacher and convert it to an object\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n\n    // Extract the createPotentialStudentDto from the event\n    const { createPotentialStudentDto } = event;\n\n    // Create a notification message for the teacher\n    const message = `Hello ${teacher.name}, ${createPotentialStudentDto.name} has applied for the study ${createPotentialStudentDto.study}. Contact: ${createPotentialStudentDto.email}, ${createPotentialStudentDto.phoneNumber}`;\n\n    // Send the notification message to the teacher using RabbitMQ\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PotentialStudentService.html":{"url":"injectables/PotentialStudentService.html","title":"injectable - PotentialStudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PotentialStudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for potential students.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialStudentRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialStudentRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialStudentDto: CreatePotentialStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:23\n                \n            \n\n\n            \n                \n                    Creates a new potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialStudentDto\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the potential student data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential student.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential student.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:31\n                \n            \n\n\n            \n                \n                    Retrieves all potential students.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A list of potential students.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:40\n                \n            \n\n\n            \n                \n                    Retrieves a potential student by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential student with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:50\n                \n            \n\n\n            \n                \n                    Updates a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to update.\n\n                                    \n                                \n                                \n                                    updatePotentialStudentDto\n                                    \n                                                UpdatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the updated potential student data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential student.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialStudent } from '../schemas/PotentialStudent.schema';\nimport { AbstractRepository } from '@app/common';\nimport { CreatePotentialStudentDto } from './dto/create-potentialStudent.dto';\nimport { UpdatePotentialStudentDto } from './dto/update-potentialStudent.dto';\n\n/**\n * Service class for potential students.\n */\n@Injectable()\nexport class PotentialStudentService {\n  constructor(\n    @InjectModel(PotentialStudent.name)\n    private readonly potentialStudentRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Creates a new potential student.\n   * @param createPotentialStudentDto The DTO containing the potential student data.\n   * @returns The created potential student.\n   */\n  async create(createPotentialStudentDto: CreatePotentialStudentDto) {\n    return await this.potentialStudentRepository.create(createPotentialStudentDto);\n  }\n\n  /**\n   * Retrieves all potential students.\n   * @returns A list of potential students.\n   */\n  async findAll() {\n    return await this.potentialStudentRepository.find({});\n  }\n\n  /**\n   * Retrieves a potential student by ID.\n   * @param id The ID of the potential student.\n   * @returns The potential student with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.potentialStudentRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Updates a potential student.\n   * @param id The ID of the potential student to update.\n   * @param updatePotentialStudentDto The DTO containing the updated potential student data.\n   * @returns The updated potential student.\n   */\n  async update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto) {\n    return await this.potentialStudentRepository.update(id, updatePotentialStudentDto);\n  }\n\n  /**\n   * Deletes a potential student.\n   * @param id The ID of the potential student to delete.\n   * @returns The deleted potential student.\n   */\n  async delete(id: string) {\n    return await this.potentialStudentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTest.html":{"url":"classes/PotentialTest.html","title":"class - PotentialTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/potentialTest.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialTest entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answers\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                ec\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:43\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:25\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:31\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:19\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:37\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * Mongoose schema for the PotentialTest entity.\n */\n@Schema()\nexport class PotentialTest extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @Prop({ required: true })\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @Prop({ required: true })\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @Prop({ required: true })\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  answers: string[];\n}\n\n/**\n * Mongoose schema definition for the PotentialTest entity.\n */\nexport const PotentialTestSchema = SchemaFactory.createForClass(PotentialTest);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEvent.html":{"url":"classes/PotentialTestRegisteredEvent.html","title":"class - PotentialTestRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for indicating the registration of a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of PotentialTestRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for the registered potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:11\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for the registered potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event class for indicating the registration of a potential test.\n */\nexport class PotentialTestRegisteredEvent extends AggregateRoot {\n  /**\n   * Creates an instance of PotentialTestRegisteredEvent.\n   * @param createPotentialTestDto The DTO object containing the data for the registered potential test.\n   */\n  constructor(public readonly createPotentialTestDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEventHandler.html":{"url":"classes/PotentialTestRegisteredEventHandler.html","title":"class - PotentialTestRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialTestRegisteredEvent.\nImplements the IEventHandler interface from the \"@nestjs/cqrs\" module.\nThis event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialTestRegisteredEventHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Teacher model from the \"teacher\" schema used to retrieve teacher information.\n\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitmqService instance used to send messages via RabbitMQ.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialTestRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:30\n                \n            \n\n\n            \n                \n                    Handles the PotentialTestRegisteredEvent by sending a notification to students.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialTestRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe PotentialTestRegisteredEvent to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the handling process.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEvent } from './potentialTest-registered.event';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n/**\n * Event handler for the PotentialTestRegisteredEvent.\n * Implements the IEventHandler interface from the \"@nestjs/cqrs\" module.\n * This event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n */\n@EventsHandler(PotentialTestRegisteredEvent)\nexport class PotentialTestRegisteredEventHandler implements IEventHandler {\n  /**\n   * Constructor for the PotentialTestRegisteredEventHandler class.\n   * @param teacher - The Teacher model from the \"teacher\" schema used to retrieve teacher information.\n   * @param rabbitmqService - The RabbitmqService instance used to send messages via RabbitMQ.\n   */\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher : Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialTestRegisteredEvent by sending a notification to students.\n   * @param event - The PotentialTestRegisteredEvent to be handled.\n   * @returns A Promise representing the completion of the handling process.\n   */\n  async handle(event: PotentialTestRegisteredEvent): Promise {\n    console.log(\"Triggered event handler\")\n    \n    // Retrieve teacher information\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n    const { createPotentialTestDto } = event;\n\n    // Send a notification to the students using RabbitMQ\n    const message = `Hello everyone, ${teacher.name} has added a new test for ${createPotentialTestDto.module}, it's about ${createPotentialTestDto.name}, it will have a duration of ${createPotentialTestDto.duration} minutes, passing this test will give ${createPotentialTestDto.ec} ECs`;\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitmqService.html":{"url":"injectables/RabbitmqService.html","title":"injectable - RabbitmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:11\n                            \n                        \n\n                \n                    \n                            It injects the RabbitMQ client proxy into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitMQ client proxy instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(queue: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:31\n                \n            \n\n\n            \n                \n                    It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the queue to send the message to.\n\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be sent.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the message is sent successfully.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n/**\n * @class RabbitmqService\n * @description Service for interacting with RabbitMQ microservice client.\n */\n@Injectable()\nexport class RabbitmqService {\n\n  /**\n   * @constructor\n   * @param {ClientProxy} clientProxy - The RabbitMQ client proxy instance.\n   * @description Constructs an instance of the RabbitmqService.\n   * It injects the RabbitMQ client proxy into the service.\n   */\n  constructor(\n    @Inject('RABBITMQ_CLIENT') private readonly clientProxy: ClientProxy,\n  ) {}\n\n  /**\n   * @method sendMessage\n   * @param {string} queue - The name of the queue to send the message to.\n   * @param {string} message - The message to be sent.\n   * @returns {Promise} - A promise that resolves when the message is sent successfully.\n   * @description Sends a message to the specified queue using the RabbitMQ client proxy.\n   * It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n   */\n  sendMessage(queue: string, message: string): Promise {\n    return lastValueFrom(this.clientProxy.emit(queue, message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.module.ts:31\n                \n            \n\n\n            \n                \n                    It returns a dynamically generated module configuration that can be used for importing the module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RmqModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \nThe dynamically generated module configuration.\n\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // Import necessary dependencies\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentManagementController.html":{"url":"controllers/StudentManagementController.html","title":"controller - StudentManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student-management\n            \n\n\n            \n                Description\n            \n            \n                It handles HTTP requests related to student management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                applyForStudy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        applyForStudy\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyForStudy(data: CreatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/student-management.controller.ts:23\n                \n            \n\n\n            \n                \n                    It receives a POST request and creates a potential student using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData for creating a potential student.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \nA promise that resolves to the created student.\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post} from '@nestjs/common';\nimport { CreatePotentialStudentCommand } from './commands/create-potentialStudent/create-potentialStudent.command';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialStudentDto } from './potentialStudent/dto/create-potentialStudent.dto';\n\n/**\n * @class StudentManagementController\n * @description Controller for managing student-related operations.\n * It handles HTTP requests related to student management.\n */\n@Controller('student-management')\nexport class StudentManagementController {\n  constructor(private readonly commandBus: CommandBus, private readonly eventBus: EventBus) {}\n\n  /**\n   * @method applyForStudy\n   * @param {createPotentialStudentDto} data - Data for creating a potential student.\n   * @returns {Promise} - A promise that resolves to the created student.\n   * @description Endpoint for applying for study.\n   * It receives a POST request and creates a potential student using the provided data.\n   */\n  @Post()\n  async applyForStudy(@Body() data: CreatePotentialStudentDto) {\n    const command = new CreatePotentialStudentCommand(data);\n\n    // Execute the command using the command bus\n    const student = this.commandBus.execute(command);\n\n    // Return the student\n    return student;\n  }\n\n  // @MessagePattern('meeting_notifications')\n  // public async getMeetingResults(@Payload() data: any) {\n  //   console.log('Message: ', data);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentManagementModule.html":{"url":"modules/StudentManagementModule.html","title":"module - StudentManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nMeetingModule\n\nMeetingModule\n\nStudentManagementModule -->\n\nMeetingModule->StudentManagementModule\n\n\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nStudentManagementModule -->\n\nPotentialStudentModule->StudentManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/student-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports necessary dependencies, configures the module, and provides controllers and services.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            MeetingModule\n                        \n                        \n                            PotentialStudentModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            TeacherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { StudentManagementController } from './student-management.controller';\nimport { StudentManagementService } from './student-management.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialStudent, PotentialStudentSchema} from './schemas/potentialStudent.schema';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from './teacher/teacher.module';\nimport { MeetingModule } from './meeting/meeting.module';\nimport { PotentialStudentModule } from './potentialStudent/potentialStudent.module';\n\n/**\n * @module StudentManagementModule\n * @description Module for managing student-related functionality.\n * It imports necessary dependencies, configures the module, and provides controllers and services.\n */\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n    envFilePath: '.env'\n  }), RmqModule.register({name: APPLICATION_SERVICE}), DatabaseModule, CqrsModule, MongooseModule.forFeature([{name: PotentialStudent.name, schema: PotentialStudentSchema}, { name: Teacher.name, schema: TeacherSchema}]), TeacherModule, PotentialStudentModule, MeetingModule],\n  controllers: [StudentManagementController],\n  providers: [StudentManagementService],\n})\nexport class StudentManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementRepository.html":{"url":"injectables/StudentManagementRepository.html","title":"injectable - StudentManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the PotentialStudent model using the @InjectModel decorator.\nThe injected model is passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the PotentialStudent schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialStudent } from \"./schemas/potentialStudent.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * @class StudentManagementRepository\n * @description Repository class for managing potential students.\n * It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n */\n@Injectable()\nexport class StudentManagementRepository extends AbstractRepository {\n  /**\n   * @constructor\n   * @param {Model} applicationModel - The Mongoose model for the PotentialStudent schema.\n   * @description Constructs an instance of the StudentManagementRepository.\n   * It injects the PotentialStudent model using the @InjectModel decorator.\n   * The injected model is passed to the constructor of the AbstractRepository class.\n   */\n  constructor(@InjectModel(PotentialStudent.name) applicationModel: Model) {\n    // Call the constructor of the AbstractRepository class and pass the applicationModel\n    super(applicationModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementService.html":{"url":"injectables/StudentManagementService.html","title":"injectable - StudentManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the StudentManagementRepository to perform application-related operations.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * @class StudentManagementService\n * @description Service class for managing student applications.\n * It interacts with the StudentManagementRepository to perform application-related operations.\n */\n@Injectable()\nexport class StudentManagementService {\n  // constructor(\n  //   // @InjectModel(PotentialStudent.name)\n  //   // private readonly studentManagementRepository: AbstractRepository,\n  // ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudyProgramController.html":{"url":"controllers/StudyProgramController.html","title":"controller - StudyProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudyProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                study-program\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/study-program/src/study-program.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { StudyProgramService } from './study-program.service';\n\n@Controller('study-program')\nexport class StudyProgramController {\n  constructor(private readonly studyProgramService: StudyProgramService) {}\n\n  @Get()\n  getHello(): string {\n    return this.studyProgramService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudyProgramModule.html":{"url":"modules/StudyProgramModule.html","title":"module - StudyProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    StudyProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/study-program/src/study-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudyProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudyProgramController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudyProgramController } from './study-program.controller';\nimport { StudyProgramService } from './study-program.service';\n\n@Module({\n  imports: [],\n  controllers: [StudyProgramController],\n  providers: [StudyProgramService],\n})\nexport class StudyProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudyProgramService.html":{"url":"injectables/StudyProgramService.html","title":"injectable - StudyProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudyProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/study-program/src/study-program.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StudyProgramService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher.html":{"url":"classes/Teacher.html","title":"class - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/teacher.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * @description Mongoose schema for the Teacher class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * @description Property representing the name of the teacher.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * @description Mongoose schema for the Teacher class created using SchemaFactory.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher-1.html":{"url":"classes/Teacher-1.html","title":"class - Teacher-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the Teacher entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/teacher.schema.ts:13\n                        \n                    \n\n            \n                \n                    The name of the teacher.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * Mongoose schema for the Teacher entity.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * The name of the teacher.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * Mongoose schema definition for the Teacher entity.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n\n            \n                Description\n            \n            \n                It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                getMeetings\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                GetNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:22\n                \n            \n\n\n            \n                \n                    It creates a new teacher using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO object containing teacher data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A response object with status and message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:36\n                \n            \n\n\n            \n                \n                    It retrieves all teachers from the teacherService.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An array of teacher objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        getMeetings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMeetings(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('meeting_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        GetNotifications\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetNotifications(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('teacher_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:47\n                \n            \n\n\n            \n                \n                    It logs the received message.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The payload data of the received message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\n\n/**\n * @description Controller class for handling teacher-related HTTP requests and message patterns.\n * It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n */\n@Controller('teachers')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  /**\n   * @description Handler for the POST /teachers endpoint.\n   * It creates a new teacher using the provided data.\n   * @param createTeacherDto The DTO object containing teacher data.\n   * @returns A response object with status and message.\n   */\n  @Post()\n  async create(@Body() createTeacherDto: CreateTeacherDto) {\n    // Call the teacherService to create a teacher\n    await this.teacherService.create(createTeacherDto);\n\n    // Return a response object with status and message\n    return { status: 201, message: 'Created Teacher' };\n  }\n\n  /**\n   * @description Handler for the GET /teachers endpoint.\n   * It retrieves all teachers from the teacherService.\n   * @returns An array of teacher objects.\n   */\n  @Get()\n  findAll() {\n    // Call the teacherService to find all teachers\n    return this.teacherService.findAll();\n  }\n\n  /**\n   * @description Message handler for 'teacher_notifications' pattern.\n   * It logs the received message.\n   * @param data The payload data of the received message.\n   */\n  @MessagePattern('teacher_notifications')\n  public async GetNotifications(@Payload() data: any) {\n    console.log('Message: ', data);\n  }\n\n  @MessagePattern('meeting_notifications')\n  public async getMeetings(@Payload() data: any) {\n    console.log('Message: ', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports the required modules and specifies the controllers and providers for the teacher feature.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\n\n/**\n * @module TeacherModule\n * @description Module for managing teachers.\n * It imports the required modules and specifies the controllers and providers for the teacher feature.\n */\n@Module({\n  // Import required modules\n  imports: [\n    /**\n     * @description Register the RmqModule with the given name.\n     * It allows communication with RabbitMQ microservice.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    /**\n     * @description Register the MongooseModule with the Teacher schema.\n     * It provides the Mongoose connection and access to the Teacher collection.\n     */\n    MongooseModule.forFeature([{ name: Teacher.name, schema: TeacherSchema }])\n  ],\n  // Specify the controllers\n  controllers: [TeacherController],\n  providers: [TeacherService]\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherRepository.html":{"url":"injectables/TeacherRepository.html","title":"injectable - TeacherRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides CRUD operations for teachers.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\nThe injected model is then passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the Teacher schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Teacher } from \"../schemas/teacher.schema\";\n\n/**\n * @class TeacherRepository\n * @description Repository class for managing teacher data.\n * It extends the AbstractRepository class and provides CRUD operations for teachers.\n */\n@Injectable()\nexport class TeacherRepository extends AbstractRepository {\n    /**\n     * @constructor\n     * @param {Model} applicationModel - The Mongoose model for the Teacher schema.\n     * @description Constructs an instance of the TeacherRepository.\n     * It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\n     * The injected model is then passed to the constructor of the AbstractRepository class.\n     */\n    constructor(@InjectModel(Teacher.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the TeacherRepository to perform teacher-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.service.ts:15\n                            \n                        \n\n                \n                    \n                            It injects the TeacherRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for teacher management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTeacherDto: UpdateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeacherDto\n                                    \n                                                UpdateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { AbstractRepository } from '@app/common';\nimport { UpdateTeacherDto } from './dto/update-teacher.dto';\n\n/**\n * @class TeacherService\n * @description Service class for managing teachers.\n * It interacts with the TeacherRepository to perform teacher-related operations.\n */\n@Injectable()\nexport class TeacherService {\n  /**\n   * @constructor\n   * @param {TeacherRepository} teacherRepository - The repository for teacher management.\n   * @description Constructs an instance of the TeacherService.\n   * It injects the TeacherRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(Teacher.name)\n    private readonly teacherRepository: AbstractRepository,\n  ) {\n  }\n\n  async create(createTeacherDto: CreateTeacherDto){\n    return await this.teacherRepository.create(createTeacherDto);\n  }\n\n  async findAll(){\n    return await this.teacherRepository.find({});\n  }\n\n  async findById(id: string){\n    return await this.teacherRepository.findOne({_id: id});\n  }\n\n  async delete(id: string){\n    return await this.teacherRepository.delete(id);\n  }\n\n  async update(id: string, updateTeacherDto: UpdateTeacherDto){\n    return await this.teacherRepository.update(id, updateTeacherDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestProgramController.html":{"url":"controllers/TestProgramController.html","title":"controller - TestProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test-program\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing potential tests in the test-program module.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialTestDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialTestDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialTestDto(data: createPotentialTestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:34\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new potential test.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A Promise that resolves to the created potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:24\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential test by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential test to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the deleted potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential tests.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { TestProgramService } from './test-program.service';\nimport { createPotentialTestDto } from './dto/create-potentialTest.dto';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialTestCommand } from './commands/create-potentialTest.command';\n\n/**\n * Controller class for managing potential tests in the test-program module.\n */\n@Controller('test-program')\nexport class TestProgramController {\n  constructor(\n    private readonly testProgramService: TestProgramService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Endpoint for deleting a potential test by its ID.\n   * @param id The ID of the potential test to be deleted.\n   * @returns A Promise that resolves to the deleted potential test.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.testProgramService.deleteApplicationById(id);\n  }\n\n  /**\n   * Endpoint for creating a new potential test.\n   * @param data The data for creating the potential test.\n   * @returns A Promise that resolves to the created potential test.\n   */\n  @Post()\n  async createPotentialTestDto(@Body() data: createPotentialTestDto) {\n    const command = new CreatePotentialTestCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Endpoint for retrieving all potential tests.\n   * @returns A Promise that resolves to an array of potential tests.\n   */\n  @Get()\n  async getApplications() {\n    return this.testProgramService.getApplications();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestProgramModule.html":{"url":"modules/TestProgramModule.html","title":"module - TestProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    TestProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_imports\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/test-program/src/test-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestProgramRepository\n                        \n                        \n                            TestProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestProgramController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes from external packages\nimport { Module } from '@nestjs/common';\nimport { TestProgramController } from './test-program.controller';\nimport { TestProgramService } from './test-program.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialTest, PotentialTestSchema } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEventHandler } from './events/potentialTest-registered.event.handler';\nimport { CreatePotentialTestCommandHandler } from './commands/create-potentialTest.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from 'apps/student-management/src/teacher/teacher.module';\n\n@Module({\n  // Import and configure modules for the TestProgramModule\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/test-program/.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    // Import MongooseModule and specify the schemas to be used\n    MongooseModule.forFeature([\n      { name: PotentialTest.name, schema: PotentialTestSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n  ],\n  // Specify the controllers to be included in the TestProgramModule\n  controllers: [TestProgramController],\n  // Specify the services and repositories to be included in the TestProgramModule\n  providers: [\n    TestProgramService,\n    TestProgramRepository,\n    PotentialTestRegisteredEventHandler,\n    CreatePotentialTestCommandHandler,\n  ],\n})\nexport class TestProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramRepository.html":{"url":"injectables/TestProgramRepository.html","title":"injectable - TestProgramRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramRepository class.\nThis class extends the AbstractRepository class from the \"@app/common\" package.\nIt provides data access methods for the \"PotentialTest\" entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.repository.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramRepository class.\n                        This model is used for executing database operations related to the \"PotentialTest\" entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose Model for the \"PotentialTest\" entity, injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialTest } from \"./schemas/potentialTest.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Injectable TestProgramRepository class.\n * This class extends the AbstractRepository class from the \"@app/common\" package.\n * It provides data access methods for the \"PotentialTest\" entity.\n */\n@Injectable()\nexport class TestProgramRepository extends AbstractRepository {\n    /**\n     * Constructor for the TestProgramRepository class.\n     * @param applicationModel The Mongoose Model for the \"PotentialTest\" entity, injected using @InjectModel decorator.\n     *                         This model is used for executing database operations related to the \"PotentialTest\" entity.\n     */\n    constructor(@InjectModel(PotentialTest.name) applicationModel: Model) {\n        // Call the constructor of the parent AbstractRepository class passing the injected \"applicationModel\".\n        // The parent class takes care of creating basic CRUD operations for the \"PotentialTest\" entity.\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramService.html":{"url":"injectables/TestProgramService.html","title":"injectable - TestProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramService class.\nThis class provides methods to interact with the test program data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramService class.\n                            This repository is used to execute database operations related to the test program.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TestProgramRepository instance injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes an application from the test program by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the result of the delete operation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:27\n                \n            \n\n\n            \n                \n                    Retrieves all applications from the test program.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests (applications).\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialTest } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\n\n/**\n * Injectable TestProgramService class.\n * This class provides methods to interact with the test program data.\n */\n@Injectable()\nexport class TestProgramService {\n  /**\n   * Constructor for the TestProgramService class.\n   * @param testProgramRepository The TestProgramRepository instance injected using @InjectModel decorator.\n   *                             This repository is used to execute database operations related to the test program.\n   */\n  constructor(\n    @InjectModel(PotentialTest.name)\n    private readonly testProgramRepository: TestProgramRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications from the test program.\n   * @returns A Promise that resolves to an array of potential tests (applications).\n   */\n  async getApplications() {\n    return this.testProgramRepository.find({});\n  }\n\n  /**\n   * Deletes an application from the test program by its ID.\n   * @param id The ID of the application to be deleted.\n   * @returns A Promise that resolves to the result of the delete operation.\n   */\n  async deleteApplicationById(id: string) {\n    return this.testProgramRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMeetingDto.html":{"url":"classes/UpdateMeetingDto.html","title":"class - UpdateMeetingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMeetingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/dto/update-meeting.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a meeting.\nExtends the CreateMeetingDto and allows partial updates.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateMeetingDto } from \"./create-meeting.dto\";\n\n/**\n * DTO for updating a meeting.\n * Extends the CreateMeetingDto and allows partial updates.\n */\nexport class UpdateMeetingDto extends PartialType(CreateMeetingDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialClassDto.html":{"url":"classes/UpdatePotentialClassDto.html","title":"class - UpdatePotentialClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/UpdatePotentialClassDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a potential class.\nExtends the CreatePotentialClassDto with partial properties.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePotentialClassDto } from './CreatePotentialClassDto';\n\n/**\n * DTO for updating a potential class.\n * Extends the CreatePotentialClassDto with partial properties.\n */\nexport class UpdatePotentialClassDto extends PartialType(CreatePotentialClassDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialModuleDto.html":{"url":"classes/UpdatePotentialModuleDto.html","title":"class - UpdatePotentialModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/UpdatePotentialModuleDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a potential module.\nExtends the CreatePotentialModuleDto and allows partial updates.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreatePotentialModuleDto } from \"./CreatePotentialModuleDto\";\n\n/**\n * DTO for updating a potential module.\n * Extends the CreatePotentialModuleDto and allows partial updates.\n */\nexport class UpdatePotentialModuleDto extends PartialType(CreatePotentialModuleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialStudentDto.html":{"url":"classes/UpdatePotentialStudentDto.html","title":"class - UpdatePotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/dto/update-potentialStudent.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating potential student entities.\nExtends the PartialType class from @nestjs/mapped-types.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreatePotentialStudentDto } from \"./create-potentialStudent.dto\";\n\n/**\n * DTO for updating potential student entities.\n * Extends the `PartialType` class from `@nestjs/mapped-types`.\n */\nexport class UpdatePotentialStudentDto extends PartialType(CreatePotentialStudentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/update-teacher.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for updating a teacher.\nExtends the PartialType class from @nestjs/mapped-types.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\n/**\n * Data transfer object for updating a teacher.\n * Extends the `PartialType` class from `@nestjs/mapped-types`.\n */\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/class-management/src/class-management.controller.ts\n            \n            controller\n            ClassManagementController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.repository.ts\n            \n            injectable\n            ClassManagementRepository\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.service.ts\n            \n            injectable\n            ClassManagementService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.handler.ts\n            \n            class\n            CreatePotentialClassCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.ts\n            \n            class\n            CreatePotentialClassCommand\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/CreatePotentialClassDto.ts\n            \n            class\n            CreatePotentialClassDto\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/UpdatePotentialClassDto.ts\n            \n            class\n            UpdatePotentialClassDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.handler.ts\n            \n            class\n            PotentialClassRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.ts\n            \n            class\n            PotentialClassRegisteredEvent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            class\n            PotentialClass\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            variable\n            PotentialClassSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/meeting-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/meeting-management/src/meeting-management.controller.ts\n            \n            controller\n            MeetingManagementController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/meeting-management/src/meeting-management.service.ts\n            \n            injectable\n            MeetingManagementService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.handler.ts\n            \n            class\n            CreatePotentialModuleCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.ts\n            \n            class\n            CreatePotentialModuleCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/constants/service.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/CreatePotentialModuleDto.ts\n            \n            class\n            CreatePotentialModuleDto\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/UpdatePotentialModuleDto.ts\n            \n            class\n            UpdatePotentialModuleDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.handler.ts\n            \n            class\n            PotentialModuleRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.ts\n            \n            class\n            PotentialModuleRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.controller.ts\n            \n            controller\n            ModuleManagementController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.repository.ts\n            \n            injectable\n            ModuleManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.service.ts\n            \n            injectable\n            ModuleManagementService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            class\n            PotentialModule\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            variable\n            PotentialModuleSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n            \n            class\n            CreatePotentialStudentCommandHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n            \n            class\n            CreatePotentialStudentCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n            \n            class\n            PotentialStudentRegisteredEventHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.ts\n            \n            class\n            PotentialStudentRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/dto/create-meeting.dto.ts\n            \n            class\n            CreateMeetingDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/dto/update-meeting.dto.ts\n            \n            class\n            UpdateMeetingDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/meeting.controller.ts\n            \n            controller\n            MeetingController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/meeting.service.ts\n            \n            injectable\n            MeetingService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts\n            \n            class\n            CreatePotentialStudentDto\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/dto/update-potentialStudent.dto.ts\n            \n            class\n            UpdatePotentialStudentDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/potentialStudent.controller.ts\n            \n            controller\n            PotentialStudentController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/potentialStudent.service.ts\n            \n            injectable\n            PotentialStudentService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/meeting.schema.ts\n            \n            class\n            Meeting\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/meeting.schema.ts\n            \n            variable\n            MeetingSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            class\n            PotentialStudent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            variable\n            PotentialStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.controller.ts\n            \n            controller\n            StudentManagementController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.repository.ts\n            \n            injectable\n            StudentManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.service.ts\n            \n            injectable\n            StudentManagementService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.repository.ts\n            \n            injectable\n            TeacherRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/study-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.controller.ts\n            \n            controller\n            StudyProgramController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.service.ts\n            \n            injectable\n            StudyProgramService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.handler.ts\n            \n            class\n            CreatePotentialTestCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.ts\n            \n            class\n            CreatePotentialTestCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/dto/create-potentialTest.dto.ts\n            \n            class\n            createPotentialTestDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.handler.ts\n            \n            class\n            PotentialTestRegisteredEventHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.ts\n            \n            class\n            PotentialTestRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            class\n            PotentialTest\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            variable\n            PotentialTestSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.controller.ts\n            \n            controller\n            TestProgramController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.repository.ts\n            \n            injectable\n            TestProgramRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.service.ts\n            \n            injectable\n            TestProgramService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            injectable\n            AbstractRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.service.ts\n            \n            injectable\n            RabbitmqService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialTestDto.html":{"url":"classes/createPotentialTestDto.html","title":"class - createPotentialTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/dto/create-potentialTest.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO class for creating a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                ec\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:50\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:27\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:34\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:20\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:42\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsArray, IsNotEmpty, IsString, IsNumber } from \"class-validator\";\n\n/**\n * DTO class for creating a potential test.\n */\nexport class createPotentialTestDto extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.4\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.4\n        \n            @nestjs/cqrs : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.0.4\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.4\n        \n            @nestjs/swagger : ^7.0.12\n        \n            amqp-connection-manager : ^4.1.13\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The NestJS application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/meeting-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/module-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger for API documentation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/student-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Nest application instance.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/study-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/test-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the Nest.js application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest.js application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ClassManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModuleManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PotentialStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudyProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_MeetingManagementModule\n\n\n\ncluster_MeetingManagementModule_providers\n\n\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_providers\n\n\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_PotentialStudentModule\n\n\n\ncluster_PotentialStudentModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nRmqModule->MeetingModule\n\n\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nPotentialStudentModule -->\n\nRmqModule->PotentialStudentModule\n\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\nMeetingManagementService\n\nMeetingManagementService\n\n\n\nMeetingManagementModule\n\nMeetingManagementModule\n\nMeetingManagementModule -->\n\nMeetingManagementService->MeetingManagementModule\n\n\n\nStudentManagementModule -->\n\nMeetingModule->StudentManagementModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\nStudentManagementModule -->\n\nPotentialStudentModule->StudentManagementModule\n\n\n\n\n\nPotentialStudentService\n\nPotentialStudentService\n\nPotentialStudentModule -->\n\nPotentialStudentService->PotentialStudentModule\n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../service.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            MeetingSchema   (apps/.../meeting.schema.ts)\n                        \n                        \n                            PotentialClassSchema   (apps/.../potentialClass.schema.ts)\n                        \n                        \n                            PotentialModuleSchema   (apps/.../potentialModule.schema.ts)\n                        \n                        \n                            PotentialStudentSchema   (apps/.../potentialStudent.schema.ts)\n                        \n                        \n                            PotentialTestSchema   (apps/.../potentialTest.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/module-management/src/constants/service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/test-program/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/meeting.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MeetingSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Meeting)\n                    \n                \n\n\n        \n    \n\n    apps/class-management/src/schemas/potentialClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialClass)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialClass class.\n\n                \n            \n\n        \n    \n\n    apps/module-management/src/schemas/potentialModule.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialModuleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialModule)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialModule entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/potentialStudent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialStudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialStudent)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/potentialTest.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialTestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialTest)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the PotentialTest entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the Teacher entity.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
