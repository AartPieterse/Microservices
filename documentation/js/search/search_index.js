var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.246,1,1.518]],["body/classes/AbstractDocument.html",[0,0.428,1,2.636,2,0.737,3,0.146,4,0.128,5,0.128,6,4.345,7,1.776,8,4.921,9,0.407,10,1.732,11,2.67,12,0.632,13,0.014,14,2.968,15,1.57,16,2.125,17,2.125,18,2.593,19,0.476,20,4.99,21,0.204,22,1.462,23,3.557,24,2.273,25,1.106,26,2.149,27,4.99,28,2.957,29,0.256,30,4.99,31,4.345,32,3.92,33,0.146,34,2.799,35,4.99,36,4.345,37,2.957,38,4.99,39,4.99,40,4.99,41,1.317,42,4.99,43,0.01,44,0.01]],["title/injectables/AbstractRepository.html",[45,0.921,46,1.518]],["body/injectables/AbstractRepository.html",[0,0.182,1,1.123,3,0.087,4,0.076,5,0.076,9,0.242,12,0.597,13,0.014,19,0.628,21,0.155,26,0.87,29,0.253,33,0.087,37,4.89,41,1.548,43,0.007,44,0.011,45,1.016,46,1.675,47,1.168,48,2.586,49,1.016,50,2.105,51,1.798,52,2.587,53,4.089,54,2.784,55,2.865,56,0.635,57,2.97,58,2.921,59,2.97,60,1.176,61,0.479,62,1.176,63,2.784,64,3.329,65,2.97,66,1.559,67,2.654,68,1.612,69,1.885,70,1.311,71,2.97,72,2.728,73,1.811,74,2.784,75,4.652,76,2.97,77,2.784,78,4.138,79,4.406,80,4.406,81,1.811,82,4.138,83,2.784,84,2.97,85,2.784,86,1.811,87,3.343,88,2.97,89,1.885,90,2.784,91,1.885,92,4.427,93,0.592,94,2.97,95,2.97,96,0.635,97,1.133,98,1.393,99,2.97,100,2.97,101,2.201,102,2.97,103,2.97,104,1.082,105,2.97,106,2.97,107,2.97,108,2.97,109,2.97,110,2.97,111,2.97]],["title/controllers/ClassManagementController.html",[112,1.518,113,2.897]],["body/controllers/ClassManagementController.html",[0,0.493,2,1.019,3,0.07,4,0.062,5,0.062,9,0.197,12,0.478,13,0.014,15,1.799,19,0.545,21,0.154,29,0.231,33,0.07,41,0.996,43,0.006,44,0.006,49,0.867,50,2.024,51,1.439,52,2.491,55,2.338,56,0.516,60,0.941,61,0.383,62,0.941,66,1.475,68,1.695,69,1.027,70,1.343,72,2.801,73,1.903,86,0.987,91,2.434,93,0.481,96,0.516,97,1.044,98,1.799,101,2.42,104,2.082,112,1.76,113,2.727,114,0.912,115,2.383,116,4.069,117,1.742,118,1.353,119,2.535,120,1.485,121,1.555,122,2.806,123,2.119,124,2.101,125,3.495,126,2.758,127,2.412,128,1.908,129,1.147,130,2.649,131,2.727,132,2.412,133,2.412,134,1.353,135,1.895,136,2.412,137,1.917,138,4.525,139,2.967,140,2.412,141,2.238,142,1.742,143,2.238,144,1.43,145,1.895,146,2.101,147,2.412,148,0.816,149,2.412,150,1.619,151,4.491,152,2.809,153,2.412,154,4.629,155,1.619,156,3.039,157,4.491,158,4.491,159,4.491,160,4.491,161,2.412,162,3.802,163,2.412,164,2.412,165,2.412,166,1.895,167,2.412,168,1.895,169,2.412]],["title/modules/ClassManagementModule.html",[170,0.691,171,2.897]],["body/modules/ClassManagementModule.html",[0,0.402,2,0.778,3,0.11,4,0.097,5,0.135,13,0.014,21,0.232,22,1.106,24,1.231,25,0.836,26,1.106,29,0.152,33,0.11,43,0.009,44,0.009,58,1.675,61,0.441,93,0.752,113,4.375,114,1.991,115,2.069,116,2.533,120,2.069,121,1.011,143,4.343,144,2.237,152,2.439,170,1.23,171,5.661,172,1.427,173,1.607,174,1.915,175,1.915,176,1.749,177,2.936,178,1.828,179,3.286,180,3.286,181,3.286,182,4.111,183,3.195,184,4.343,185,2.671,186,1.915,187,1.915,188,2.964,189,2.55,190,0.779,191,2.804,192,2.373,193,2.117,194,2.724,195,2.117,196,4.375,197,3.799,198,2.724,199,2.964,200,2.533,201,4.067,202,2.533,203,3.286,204,3.811,205,3.286,206,1.915,207,3.774,208,2.533,209,3.286,210,2.724,211,2.724,212,1.749,213,2.724,214,3.286,215,3.119,216,1.828,217,2.964,218,1.828,219,2.373,220,2.671,221,2.724,222,3.774,223,3.591,224,2.724,225,2.373,226,3.286,227,5.709,228,2.373,229,3.774,230,3.286,231,3.286,232,1.675,233,1.828]],["title/injectables/ClassManagementRepository.html",[45,0.921,184,2.378]],["body/injectables/ClassManagementRepository.html",[0,0.22,3,0.105,4,0.092,5,0.092,7,1.293,9,0.292,12,0.637,13,0.014,19,0.67,21,0.197,24,1.654,25,0.793,26,1.726,29,0.283,33,0.105,37,4.73,41,0.945,43,0.008,44,0.01,45,1.164,46,2.79,47,1.408,49,1.164,50,2.078,51,1.75,52,2.519,53,3.939,54,3.19,55,2.765,56,0.766,58,3.117,60,1.255,61,0.511,62,1.255,63,2.252,64,3.19,66,1.446,67,2.463,68,1.304,69,1.525,70,1.276,72,2.557,73,1.465,74,2.252,75,4.416,77,2.252,78,3.704,79,4.029,80,4.029,81,1.465,82,3.19,83,2.252,85,2.252,86,1.465,87,3.139,89,1.525,90,2.252,91,1.525,93,0.713,97,0.617,115,1.994,116,3.405,152,2.73,184,3.797,190,0.739,198,2.586,234,2.586,235,2.404,236,3.581,237,2.574,238,1.54,239,3.953,240,2.463,241,2.404,242,2.404,243,2.404,244,2.404,245,2.404,246,1.465,247,3.581,248,2.404]],["title/injectables/ClassManagementService.html",[45,0.921,143,2.378]],["body/injectables/ClassManagementService.html",[0,0.498,2,0.964,3,0.085,4,0.074,5,0.074,9,0.237,11,1.058,12,0.564,13,0.014,19,0.623,21,0.198,25,0.643,29,0.251,33,0.085,41,1.149,43,0.007,44,0.007,45,0.999,46,2.194,47,1.142,49,0.999,50,2.096,51,1.585,52,2.565,55,2.542,56,0.931,60,1.111,61,0.453,62,1.111,66,1.55,68,1.586,69,1.854,70,1.418,72,2.865,73,1.781,86,1.188,91,2.471,93,0.579,96,0.621,97,1.07,101,2.181,104,2.263,115,2.66,116,4.541,120,1.712,121,1.573,122,3.091,123,2.442,124,3.791,125,3.477,128,1.642,129,1.322,130,2.88,134,2.442,137,2.21,138,4.777,143,2.58,145,2.281,146,2.529,148,0.982,152,1.346,184,3.095,190,0.6,198,2.097,200,1.949,218,2.109,246,1.188,249,2.097,250,2.904,251,2.529,252,2.529,253,2.904,254,2.904,255,2.904,256,2.904,257,2.529,258,2.904,259,2.904,260,2.904,261,2.904,262,2.904]],["title/classes/CreateMeetingDto.html",[0,0.246,263,2.524]],["body/classes/CreateMeetingDto.html",[0,0.419,1,2.784,2,0.616,3,0.122,4,0.107,5,0.107,7,1.742,9,0.34,10,1.539,11,2.051,12,0.648,13,0.014,14,1.774,15,2.247,16,1.774,17,1.774,18,1.703,19,0.681,21,0.164,29,0.168,33,0.122,43,0.009,44,0.009,70,1.362,72,2.489,129,1.71,190,0.86,240,1.517,263,3.542,264,1.423,265,6.217,266,3.272,267,2.13,268,4.399,269,5.556,270,5.556,271,6.381,272,6.381,273,4.935,274,6.217,275,4.165,276,5.632,277,5.952,278,4.165,279,4.424,280,5.632,281,4.165,282,2.13,283,4.299,284,4.165,285,1.71,286,1.849,287,6.381,288,4.013,289,4.013,290,2.469]],["title/classes/CreatePotentialClassCommand.html",[0,0.246,201,2.693]],["body/classes/CreatePotentialClassCommand.html",[0,0.447,2,0.723,3,0.143,4,0.125,5,0.125,9,0.399,10,1.71,12,0.568,13,0.013,19,0.597,21,0.183,22,1.433,29,0.197,33,0.143,43,0.01,44,0.01,56,1.046,60,0.874,61,0.356,62,0.874,89,2.94,96,1.477,97,0.842,115,2.714,121,1.327,125,4.298,128,2.178,129,2.096,145,3.842,201,4.885,237,3.177,238,1.901,267,2.611,291,4.092,292,4.258,293,2.779,294,4.984,295,3.177,296,4.258,297,4.891,298,4.342,299,2.94,300,4.891,301,2.899]],["title/classes/CreatePotentialClassCommandHandler.html",[0,0.246,302,3.152]],["body/classes/CreatePotentialClassCommandHandler.html",[0,0.409,2,0.798,3,0.114,4,0.1,5,0.1,9,0.32,12,0.49,13,0.014,19,0.515,21,0.204,22,1.148,29,0.218,33,0.114,41,1.033,43,0.009,44,0.009,49,1.239,50,1.689,51,1.07,56,1.155,60,0.965,61,0.393,62,0.965,66,1.155,67,2.426,96,0.838,97,1.064,98,2.096,104,1.426,115,2.43,120,1.54,121,0.753,125,2.087,129,1.189,143,4.388,144,2.321,148,1.826,152,1.815,184,3.2,200,2.629,201,5.063,203,3.41,204,3.396,205,3.41,206,1.988,220,1.988,232,3.102,233,3.228,237,2.741,238,2.023,291,3.663,293,2.397,302,5.233,303,3.41,304,4.462,305,3.396,306,2.828,307,4.809,308,3.916,309,5.045,310,5.4,311,4.242,312,3.899,313,3.916,314,4.242,315,4.702,316,2.877,317,2.616,318,3.029,319,3.899,320,3.899,321,2.828,322,3.916,323,2.087,324,2.463,325,2.197,326,2.828,327,3.916,328,3.916,329,3.916,330,3.916,331,3.41,332,3.916,333,3.916,334,3.077]],["title/classes/CreatePotentialClassDto.html",[0,0.246,125,2.138]],["body/classes/CreatePotentialClassDto.html",[0,0.473,1,2.761,2,0.728,3,0.144,4,0.126,5,0.126,7,1.603,9,0.402,10,1.718,11,2.29,12,0.629,13,0.014,14,2.098,15,1.979,16,2.098,17,2.098,18,2.015,19,0.661,21,0.202,33,0.144,43,0.01,44,0.01,61,0.549,70,1.253,115,2.724,121,1.209,125,3.351,190,1.017,240,1.794,264,0.982,282,2.852,286,2.187,288,3.955,289,3.955,290,2.92,335,4.29,336,3.307,337,4.927,338,6.29,339,2.833,340,4.927,341,4.941,342,4.29]],["title/classes/CreatePotentialModuleCommand.html",[0,0.246,343,2.693]],["body/classes/CreatePotentialModuleCommand.html",[0,0.419,2,0.705,3,0.139,4,0.122,5,0.122,9,0.389,10,1.683,12,0.559,13,0.014,19,0.588,21,0.18,22,1.399,29,0.249,33,0.139,41,1.626,43,0.01,44,0.01,56,1.021,60,0.853,61,0.347,62,0.853,96,1.46,97,0.822,121,1.435,128,1.931,129,2.267,170,1.286,233,2.985,238,1.871,267,2.581,291,4.044,293,2.735,294,4.927,295,3.127,298,4.291,299,2.906,301,2.828,343,4.84,344,2.906,345,4.155,346,4.28,347,4.155,348,4.772,349,5.365,350,4.772,351,3.749]],["title/classes/CreatePotentialModuleCommandHandler.html",[0,0.246,352,3.152]],["body/classes/CreatePotentialModuleCommandHandler.html",[0,0.247,2,0.594,3,0.117,4,0.103,5,0.103,9,0.328,12,0.499,13,0.014,19,0.525,21,0.197,22,1.178,29,0.222,33,0.117,41,1.061,43,0.009,44,0.009,49,1.262,50,1.712,51,1.99,56,1.176,60,0.982,61,0.4,62,0.982,66,1.176,67,2.453,96,0.86,97,0.692,98,2.119,104,1.464,121,1.459,129,1.669,144,2.383,148,1.859,170,1.284,172,2.08,206,2.041,220,2.041,232,2.441,233,3.773,291,3.714,293,2.441,304,4.524,305,3.458,306,2.903,307,5.092,309,3.969,312,3.969,314,4.319,318,3.084,319,3.969,320,3.969,321,2.903,324,2.529,325,3.515,326,2.903,334,3.158,343,4.521,344,2.668,346,2.142,352,4.319,353,3.501,354,4.418,355,4.021,356,4.021,357,3.501,358,3.458,359,3.501,360,4.021,361,2.041,362,4.021,363,4.021,364,4.021,365,4.021,366,3.158,367,1.521,368,4.021]],["title/classes/CreatePotentialModuleDto.html",[0,0.246,346,2.138]],["body/classes/CreatePotentialModuleDto.html",[0,0.482,1,2.835,2,0.656,3,0.13,4,0.114,5,0.114,7,1.787,9,0.362,10,1.605,11,2.14,12,0.636,13,0.014,14,1.89,15,1.849,16,1.89,17,1.89,18,1.815,19,0.669,21,0.205,29,0.179,33,0.13,43,0.01,44,0.01,61,0.531,70,1.493,115,1.745,128,1.663,152,2.057,170,1.337,190,0.916,240,1.616,264,0.884,267,2.223,283,4.41,285,2.276,286,1.97,288,3.695,289,3.695,290,2.63,298,3.695,299,2.502,336,2.979,341,4.616,344,2.986,346,3.131,369,3.864,370,4.438,371,4.438,372,4.438,373,3.864,374,3.864]],["title/classes/CreatePotentialStudentCommand.html",[0,0.246,375,2.693]],["body/classes/CreatePotentialStudentCommand.html",[0,0.455,2,0.69,3,0.136,4,0.119,5,0.119,9,0.381,10,1.66,12,0.551,13,0.014,19,0.58,21,0.177,22,1.979,29,0.245,33,0.136,43,0.01,44,0.01,51,1.845,56,1.53,60,0.834,61,0.34,62,0.834,96,1.445,97,0.804,121,1.425,128,1.911,129,1.845,170,1.046,233,2.944,264,1.345,282,2.805,291,4.003,293,3.175,294,5.353,295,3.428,375,4.8,376,4.876,377,4.066,378,3.237,379,3.878,380,4.066,381,4.67,382,3.428,383,4.67,384,4.066,385,3.134]],["title/classes/CreatePotentialStudentCommandHandler.html",[0,0.246,386,3.152]],["body/classes/CreatePotentialStudentCommandHandler.html",[0,0.412,2,0.52,3,0.103,4,0.09,5,0.09,9,0.287,12,0.454,13,0.014,19,0.478,21,0.186,22,1.031,29,0.235,33,0.103,41,0.928,43,0.008,44,0.008,49,1.149,50,1.593,51,1.593,56,1.359,60,0.895,61,0.365,62,0.895,66,1.071,67,2.314,96,0.752,97,1.004,98,1.999,104,1.281,121,1.221,128,1.417,148,1.694,156,1.63,206,1.785,220,3.225,232,3.189,233,3.671,238,1.771,264,1.162,282,2.64,291,3.457,293,2.223,304,4.211,305,3.997,306,2.539,307,5.186,309,4.211,311,3.934,312,3.616,317,1.704,320,3.616,321,2.539,324,2.212,325,3.565,326,2.539,331,3.062,339,1.438,366,4.581,375,5.086,376,4.211,379,2.426,386,4.992,387,3.062,388,4.265,389,6.355,390,3.934,391,3.668,392,3.766,393,3.517,394,3.108,395,3.517,396,2.968,397,5.008,398,3.914,399,4.361,400,2.81,401,4.361,402,3.062,403,3.517,404,3.517,405,3.517,406,3.361,407,2.763,408,3.062,409,3.062,410,3.062,411,3.062,412,3.517,413,3.517,414,3.517,415,3.517,416,3.517,417,3.517,418,2.539,419,3.062,420,3.517]],["title/classes/CreatePotentialStudentDto.html",[0,0.246,379,1.944]],["body/classes/CreatePotentialStudentDto.html",[0,0.332,1,2.522,2,0.58,3,0.115,4,0.1,5,0.1,7,1.378,9,0.32,10,1.477,11,1.969,12,0.656,13,0.014,14,1.671,15,2.274,16,1.671,17,1.671,18,1.605,19,0.69,21,0.158,33,0.115,34,4.055,43,0.009,44,0.009,61,0.45,70,1.544,121,1.389,190,0.81,240,1.429,264,1.44,273,3.904,274,5.387,282,2.734,286,1.742,288,3.891,289,3.891,290,2.326,336,3.629,379,2.62,421,6.294,422,3.083,423,5.387,424,6.669,425,6.089,426,4.39,427,3.924,428,6.187,429,3.924,430,5.679,431,6.667,432,6.667,433,3.924,434,6.187,435,3.924,436,5.805,437,4.475,438,3.924,439,5.407,440,4.708,441,4.708]],["title/classes/CreatePotentialTestCommand.html",[0,0.246,442,2.693]],["body/classes/CreatePotentialTestCommand.html",[0,0.419,2,0.707,3,0.14,4,0.122,5,0.122,9,0.39,10,1.686,12,0.56,13,0.014,19,0.589,21,0.18,22,1.402,29,0.249,33,0.14,43,0.01,44,0.01,56,1.023,60,0.855,61,0.348,62,0.855,89,2.909,96,1.461,97,0.824,121,1.436,128,1.933,129,2.269,233,2.99,238,1.874,267,2.584,293,2.739,294,4.932,295,3.132,299,2.909,301,2.835,442,4.845,443,2.909,444,5.367,445,4.165,446,3.792,447,4.508,448,4.165,449,4.784,450,3.881,451,4.784,452,2.684,453,4.165]],["title/classes/CreatePotentialTestCommandHandler.html",[0,0.246,454,2.897]],["body/classes/CreatePotentialTestCommandHandler.html",[0,0.384,2,0.593,3,0.117,4,0.103,5,0.103,9,0.327,12,0.498,13,0.014,19,0.524,21,0.197,22,1.176,29,0.222,33,0.117,41,1.059,43,0.009,44,0.009,49,1.26,50,1.71,51,1.096,56,1.174,60,0.981,61,0.4,62,0.981,66,1.174,67,2.451,96,0.858,97,0.691,98,2.118,104,1.461,120,1.577,148,1.857,206,2.036,220,2.036,223,3.254,230,4.781,232,2.437,233,3.772,238,1.667,293,2.437,304,4.519,305,3.453,306,2.897,307,4.859,309,4.519,311,3.152,312,3.964,314,4.313,318,3.08,319,3.964,320,3.964,321,2.897,323,2.138,324,2.523,325,3.954,326,2.897,334,3.152,366,3.152,394,2.138,442,5.092,443,2.665,444,4.917,446,3.416,447,2.251,454,3.964,455,3.494,456,3.964,457,4.416,458,4.012,459,4.012,460,3.494,461,2.693,462,3.494,463,3.152,464,4.012,465,4.012,466,2.138,467,4.012,468,4.012,469,4.012]],["title/classes/CreateTeacherDto.html",[0,0.246,470,2.524]],["body/classes/CreateTeacherDto.html",[0,0.48,1,2.864,2,0.68,3,0.134,4,0.118,5,0.118,7,1.813,9,0.376,10,1.645,11,2.192,12,0.546,13,0.014,14,1.961,15,1.894,16,1.961,17,1.961,18,1.883,19,0.574,21,0.176,29,0.186,33,0.134,34,3.377,43,0.01,44,0.01,51,1.645,61,0.562,70,1.417,128,2.013,129,1.828,170,1.037,190,1.385,240,1.677,264,1.199,267,2.277,285,2.299,286,2.044,288,3.786,289,3.786,290,2.729,298,3.786,299,2.563,336,3.09,382,3.055,430,5.588,440,5.242,441,5.242,470,3.786,471,5.242,472,3.617,473,4.604]],["title/modules/DatabaseModule.html",[170,0.691,182,2.251]],["body/modules/DatabaseModule.html",[0,0.277,3,0.132,4,0.116,5,0.116,13,0.014,21,0.206,25,1.001,26,2.07,29,0.285,33,0.132,34,2.536,43,0.01,44,0.01,66,0.967,81,2.432,93,0.9,97,0.778,129,1.372,170,1.297,172,1.709,173,2.532,182,3.729,189,2.19,193,3.336,195,2.536,208,4.74,220,3.018,221,5.099,238,1.372,299,2.83,316,2.408,367,2.249,394,2.408,396,3.525,474,4.52,475,6.193,476,3.263,477,4.52,478,5.947,479,3.55,480,4.52,481,3.033,482,3.55,483,4.52,484,4.672,485,3.55,486,3.55,487,4.672,488,3.992,489,2.679,490,4.672,491,4.52,492,3.55,493,4.52,494,4.799,495,3.55,496,2.679]],["title/classes/Meeting.html",[0,0.246,268,2.251]],["body/classes/Meeting.html",[0,0.266,1,2.626,2,0.64,3,0.126,4,0.111,5,0.111,7,1.473,9,0.353,10,1.58,11,2.105,12,0.709,13,0.014,14,1.844,15,2.276,16,1.844,17,1.844,18,1.771,19,0.69,21,0.203,23,4.059,24,2.265,25,0.96,29,0.175,33,0.169,43,0.009,44,0.009,98,1.363,190,0.894,212,3.578,240,1.577,264,1.441,268,3.896,269,5.666,270,5.666,273,5.013,282,2.461,285,2.344,286,1.922,339,2.959,382,3.524,497,3.402,498,5.034,499,4.116,500,4.331,501,4.331,502,4.331,503,4.331,504,2.567,505,4.331,506,4.331,507,3.126,508,3.771]],["title/controllers/MeetingController.html",[112,1.518,509,2.897]],["body/controllers/MeetingController.html",[0,0.23,3,0.11,4,0.096,5,0.096,9,0.306,12,0.476,13,0.014,15,1.649,19,0.5,21,0.191,29,0.212,33,0.11,41,1.383,43,0.009,44,0.009,49,1.203,51,1.432,55,2.674,60,0.937,61,0.382,62,0.937,66,1.399,70,1.371,72,2.506,86,1.534,89,2.785,91,2.572,93,0.747,96,0.803,97,1.126,101,1.839,112,1.419,114,1.419,118,2.105,126,3.58,128,1.85,129,1.986,141,3.107,142,2.709,150,2.518,154,5.01,155,2.518,156,3.459,162,2.709,263,4.601,264,1.204,268,4.506,285,1.139,299,2.785,437,3.518,452,2.105,509,3.784,510,3.267,511,2.947,512,3.267,513,3.752,514,4.389,515,5.694,516,5.26,517,5.09,518,5.242,519,3.752,520,3.876,521,3.752,522,3.799,523,3.267,524,4.118,525,2.518,526,3.752,527,2.518,528,3.752,529,3.267,530,3.267,531,3.752,532,3.752]],["title/modules/MeetingModule.html",[170,0.691,533,2.693]],["body/modules/MeetingModule.html",[0,0.241,3,0.115,4,0.1,5,0.1,13,0.014,21,0.224,24,2.018,25,0.87,29,0.158,33,0.115,43,0.009,44,0.009,46,2.34,58,2.4,61,0.509,93,0.782,114,2.522,120,2.126,121,1.039,137,1.992,170,1.065,172,2.34,173,1.671,174,1.992,175,1.992,176,1.818,177,2.998,178,1.901,183,3.35,185,2.744,186,1.992,187,1.992,189,2.62,190,0.81,191,2.881,192,2.468,193,3.034,215,3.205,218,1.901,219,2.468,225,2.468,227,5.387,228,3.891,264,0.782,268,3.923,285,1.642,316,2.881,317,2.998,339,2.727,456,3.904,507,3.904,509,4.467,511,4.248,522,4.658,523,3.417,533,5.202,534,3.417,535,3.924,536,3.417,537,3.924,538,4.708,539,3.629,540,3.629,541,3.205,542,4.248,543,3.924,544,3.417,545,3.401,546,2.468,547,3.034,548,2.091,549,3.924,550,3.417,551,3.924,552,2.326,553,3.083,554,1.901,555,3.924]],["title/injectables/MeetingService.html",[45,0.921,522,2.524]],["body/injectables/MeetingService.html",[0,0.159,3,0.076,4,0.066,5,0.066,9,0.211,11,1.773,12,0.536,13,0.014,19,0.596,21,0.196,25,0.574,29,0.221,33,0.076,41,1.285,43,0.006,44,0.006,45,0.916,46,2.661,47,1.018,49,0.916,50,2.053,51,1.091,52,2.151,55,2.416,56,0.854,60,1.056,61,0.43,62,1.056,66,1.505,68,1.454,69,1.7,70,1.373,72,2.816,73,1.632,86,1.632,89,2.33,91,2.33,93,0.516,96,1.17,97,1.018,98,1.964,101,2.073,104,2.509,121,0.767,122,2.915,123,2.239,130,2.738,134,2.239,148,1.85,156,3.112,190,0.535,216,2.651,246,1.059,263,3.926,264,1.296,267,2.069,268,4.532,282,2.069,285,1.794,339,1.059,450,2.51,452,1.453,489,3.242,492,2.035,511,4.298,512,3.475,516,2.256,517,4.624,522,2.51,524,3.136,525,1.739,529,2.256,530,2.256,538,3.475,544,2.256,546,1.629,548,1.38,552,1.535,556,2.256,557,2.59,558,4.869,559,3.268,560,3.151,561,2.59,562,3.991,563,2.59,564,4.764,565,3.672,566,4.764,567,5.471,568,2.59,569,3.136,570,2.59,571,3.475,572,2.59,573,3.991,574,2.59,575,2.882,576,2.59,577,2.59,578,2.59,579,2.59,580,2.59,581,2.59,582,3.991,583,2.59,584,2.59,585,2.59,586,2.59,587,2.59,588,2.59,589,4.869,590,2.59,591,2.59,592,2.59,593,2.59,594,2.59,595,2.59,596,2.59,597,2.59]],["title/controllers/ModuleManagementController.html",[112,1.518,598,2.897]],["body/controllers/ModuleManagementController.html",[0,0.15,3,0.072,4,0.063,5,0.063,9,0.2,12,0.482,13,0.014,15,1.811,19,0.549,21,0.155,29,0.214,33,0.072,41,1.008,43,0.006,44,0.006,49,0.877,50,2.03,51,1.45,52,2.505,55,2.354,56,0.524,60,0.949,61,0.386,62,0.949,66,1.482,68,1.711,69,1.043,70,1.349,72,2.808,73,1.922,86,1.001,91,2.451,93,0.488,96,0.524,97,1.05,98,1.811,101,2.43,104,2.096,112,0.926,114,0.926,117,1.768,118,1.374,119,2.564,121,1.551,122,2.829,123,2.143,126,2.785,128,1.917,129,1.16,130,2.668,131,2.758,134,1.374,135,3.002,137,1.939,139,3.002,141,2.265,142,1.768,144,1.451,148,0.828,150,1.643,151,4.522,154,4.649,155,1.643,156,3.054,157,4.522,158,4.522,159,4.522,160,4.522,162,3.832,166,1.923,168,1.923,170,1.39,172,2.307,344,2.598,346,3.512,351,1.923,354,2.265,361,3.096,598,2.758,599,4.094,600,2.132,601,2.449,602,2.449,603,2.449,604,2.449,605,4.546,606,2.449,607,2.132,608,2.449,609,2.449,610,2.449,611,2.449,612,2.132,613,2.449,614,2.449,615,2.449]],["title/modules/ModuleManagementModule.html",[170,0.691,616,2.897]],["body/modules/ModuleManagementModule.html",[0,0.23,3,0.11,4,0.096,5,0.096,13,0.014,21,0.236,22,1.1,24,1.71,25,0.831,26,1.1,29,0.151,31,3.267,33,0.11,43,0.009,44,0.009,61,0.382,93,0.747,114,2.474,119,4.055,120,2.061,121,0.721,144,2.224,170,1.389,172,1.419,173,2.572,174,1.904,175,1.904,176,1.739,177,3.334,178,1.818,182,3.999,183,3.188,185,2.66,186,1.904,187,1.904,188,2.947,189,2.54,190,0.775,191,2.793,193,2.105,194,2.709,195,2.105,196,3.784,199,2.947,200,2.518,202,2.518,206,1.904,208,2.518,210,2.709,211,2.709,212,1.739,213,2.709,214,3.267,215,2.224,216,1.818,218,1.818,219,2.36,220,1.904,224,3.784,225,2.36,232,1.666,233,1.818,323,1.999,343,3.518,344,2.232,354,4.225,357,3.267,358,3.296,359,3.267,361,1.904,419,3.267,456,3.784,476,3.784,481,3.518,598,4.361,599,2.518,616,5.655,617,3.267,618,3.752,619,3.267,620,4.483,621,4.118,622,4.118,623,3.752,624,3.784,625,2.709,626,3.267]],["title/injectables/ModuleManagementRepository.html",[45,0.921,620,2.524]],["body/injectables/ModuleManagementRepository.html",[0,0.405,3,0.098,4,0.086,5,0.086,7,1.585,9,0.274,12,0.623,13,0.014,19,0.656,21,0.193,24,1.579,25,0.743,26,1.665,29,0.286,33,0.098,37,4.686,41,0.885,43,0.008,44,0.01,45,1.111,46,2.743,47,1.319,49,1.111,50,2.049,51,1.699,52,2.445,53,3.855,54,3.045,55,2.697,56,0.718,58,3.05,60,1.228,61,0.5,62,1.228,63,2.11,64,3.045,66,1.411,67,2.402,68,1.222,69,1.429,70,1.239,72,2.502,73,1.372,74,2.11,75,4.321,77,2.11,78,3.572,79,3.911,80,3.911,81,1.372,82,3.045,83,2.11,85,2.11,86,1.372,87,3.027,89,1.429,90,2.11,91,1.429,93,0.668,97,0.578,170,0.834,190,0.693,220,2.457,223,2.869,234,2.422,235,2.252,237,2.457,238,1.47,239,3.813,240,2.402,241,2.252,242,2.252,243,2.252,244,2.252,245,2.252,246,1.372,248,2.252,317,2.346,323,3.314,344,2.062,361,3.347,554,2.346,599,3.25,620,3.911,625,2.422,627,3.045,628,4.842,629,3.803,630,4.842,631,3.355,632,3.25,633,3.355]],["title/injectables/ModuleManagementService.html",[45,0.921,354,2.378]],["body/injectables/ModuleManagementService.html",[0,0.178,3,0.085,4,0.074,5,0.074,9,0.237,11,1.058,12,0.564,13,0.014,19,0.623,21,0.198,25,0.643,29,0.251,33,0.085,41,1.149,43,0.007,44,0.007,45,0.999,46,2.194,47,1.142,49,0.999,50,2.096,51,1.585,52,2.565,55,2.373,56,0.931,60,1.111,61,0.453,62,1.111,66,1.55,68,1.586,69,1.854,70,1.418,72,2.85,73,1.781,86,1.781,91,2.471,93,0.579,96,0.621,97,1.07,101,2.181,104,2.263,120,1.712,121,1.573,122,3.091,123,2.442,128,1.642,129,1.322,130,2.88,134,2.442,137,2.21,148,0.982,170,1.394,172,2.468,190,0.6,200,1.949,218,2.109,246,1.188,249,2.097,251,2.529,252,2.529,344,2.881,346,3.605,351,2.281,354,2.58,361,1.474,599,4.541,600,3.791,605,4.777,607,2.529,620,3.285,625,2.097,634,2.904,635,2.904,636,2.904,637,2.904,638,2.904,639,2.529,640,2.904,641,2.904,642,2.904,643,2.904,644,2.904]],["title/classes/PotentialClass.html",[0,0.246,152,1.86]],["body/classes/PotentialClass.html",[0,0.478,1,2.671,2,0.668,3,0.132,4,0.116,5,0.116,7,1.515,9,0.369,10,1.625,11,2.166,12,0.603,13,0.014,14,1.925,15,2.091,16,1.925,17,1.925,18,1.848,19,0.634,21,0.194,23,3.729,24,2.393,25,1.001,26,1.325,29,0.182,33,0.174,43,0.01,44,0.01,61,0.534,70,1.185,98,1.422,115,2.613,121,1.448,152,3.08,190,0.933,197,3.263,212,3.273,240,1.646,264,0.9,282,2.775,283,3.74,286,2.006,339,2.718,342,3.935,382,3.018,400,3.336,499,3.525,504,2.679,645,3.55,646,4.52,647,4.52,648,3.935]],["title/classes/PotentialClassRegisteredEvent.html",[0,0.246,204,2.524]],["body/classes/PotentialClassRegisteredEvent.html",[0,0.453,2,0.753,3,0.149,4,0.13,5,0.13,7,1.637,8,4.722,9,0.416,10,1.755,12,0.583,13,0.013,19,0.613,21,0.149,22,1.493,29,0.206,33,0.149,43,0.01,44,0.01,56,1.089,60,0.91,61,0.371,62,0.91,96,1.505,97,0.877,115,2.766,121,1.352,125,4.058,128,1.991,204,4.646,237,3.26,238,1.95,295,3.26,296,4.435,301,3.019,418,5.079,554,3.409,649,5.527,650,3.418,651,4.435,652,6.126,653,4.435,654,3.677]],["title/classes/PotentialClassRegisteredEventHandler.html",[0,0.246,655,3.152]],["body/classes/PotentialClassRegisteredEventHandler.html",[0,0.343,2,0.609,3,0.12,4,0.105,5,0.105,9,0.336,12,0.507,13,0.014,19,0.534,21,0.214,22,1.208,25,0.913,26,1.86,29,0.226,33,0.12,41,1.088,43,0.009,44,0.009,46,1.559,49,1.283,50,1.734,56,1.196,58,3.257,60,0.999,61,0.407,62,0.999,66,0.882,67,2.036,96,1.196,97,1.093,98,1.297,104,1.501,115,2.495,148,1.891,152,3.477,156,2.591,190,0.851,198,2.976,204,4.801,206,2.092,216,1.997,226,3.589,228,3.517,232,2.482,237,2.838,238,2.066,246,1.686,257,3.589,293,2.482,315,4.869,316,2.98,317,2.709,367,1.559,388,3.753,426,2.443,560,3.791,565,3.753,649,4.986,655,5.346,656,2.766,657,4.582,658,4.122,659,4.122,660,4.869,661,4.869,662,4.037,663,4.122,664,2.976,665,4.122,666,2.976,667,3.589,668,3.589,669,3.589]],["title/classes/PotentialModule.html",[0,0.246,361,2.037]],["body/classes/PotentialModule.html",[0,0.453,1,2.592,2,0.62,3,0.122,4,0.107,5,0.107,7,1.441,9,0.342,10,1.545,11,2.06,12,0.622,13,0.014,14,1.785,15,2.156,16,1.785,17,1.785,18,1.714,19,0.654,21,0.2,23,3.845,24,2.334,25,0.929,26,1.876,29,0.169,33,0.165,43,0.009,44,0.009,61,0.521,70,1.469,98,1.319,115,1.648,121,1.417,152,1.943,170,1.27,190,0.865,212,3.417,240,1.527,264,0.835,283,4.31,285,2.239,286,1.861,344,2.918,361,3.632,373,3.65,374,3.65,382,3.249,499,3.794,504,2.485,624,3.026,627,4.026,670,3.293,671,4.192,672,4.192,673,4.192,674,3.65]],["title/classes/PotentialModuleRegisteredEvent.html",[0,0.246,358,2.524]],["body/classes/PotentialModuleRegisteredEvent.html",[0,0.457,2,0.702,3,0.139,4,0.122,5,0.122,7,1.834,8,5.003,9,0.388,10,1.678,12,0.557,13,0.014,19,0.586,21,0.139,22,1.392,29,0.248,33,0.139,41,1.621,43,0.01,44,0.01,56,1.016,60,0.849,61,0.346,62,0.849,96,1.456,97,0.818,121,1.433,128,1.926,129,2.067,170,1.284,232,2.727,238,1.865,267,2.575,295,3.117,298,4.282,299,2.899,301,2.815,344,2.899,346,3.972,347,4.135,349,5.348,358,4.527,400,3.446,650,3.187,651,4.135,653,4.135,654,3.428,675,5.348,676,4.825]],["title/classes/PotentialModuleRegisteredEventHandler.html",[0,0.246,677,3.152]],["body/classes/PotentialModuleRegisteredEventHandler.html",[0,0.263,2,0.633,3,0.125,4,0.11,5,0.11,9,0.35,12,0.521,13,0.014,19,0.548,21,0.217,22,1.255,25,0.949,26,1.255,29,0.232,33,0.125,41,1.13,43,0.009,44,0.009,46,1.62,49,1.317,50,1.768,56,1.228,58,3.069,60,1.025,61,0.418,62,1.025,66,1.228,67,2.518,96,1.228,97,0.738,98,1.348,104,1.56,148,1.941,156,2.659,170,0.738,190,0.884,206,2.174,223,3.401,228,3.609,232,3.294,238,1.742,246,1.752,293,2.548,318,3.219,325,3.219,344,2.756,358,4.957,361,3.509,388,3.852,560,3.672,565,2.875,625,3.092,626,3.73,639,3.73,656,2.875,657,4.672,662,4.143,664,3.092,667,3.73,668,3.73,669,3.73,675,5.084,677,4.508,678,4.283,679,4.283,680,4.283,681,5.739,682,4.283]],["title/classes/PotentialStudent.html",[0,0.246,339,1.641]],["body/classes/PotentialStudent.html",[0,0.419,1,2.678,2,0.543,3,0.107,4,0.094,5,0.094,7,1.316,9,0.3,10,1.411,11,1.881,12,0.643,13,0.014,14,1.565,15,2.228,16,1.565,17,1.565,18,1.503,19,0.676,21,0.151,23,3.973,24,2.114,25,0.814,26,1.514,29,0.294,33,0.151,34,3.636,43,0.008,44,0.008,61,0.472,68,1.338,70,1.479,98,1.156,121,1.246,190,0.759,212,3.544,240,1.338,264,1.411,273,3.73,282,2.451,286,1.631,339,2.65,367,1.39,382,3.992,400,3.636,423,5.202,424,5.643,425,5.202,426,3.841,436,3.2,437,2.467,499,4.047,504,3.062,545,2.311,683,2.887,684,4.498,685,3.675,686,3.675,687,6.465,688,5.833,689,3.675,690,3.675,691,3.675,692,3.2]],["title/controllers/PotentialStudentController.html",[112,1.518,693,2.897]],["body/controllers/PotentialStudentController.html",[0,0.278,3,0.068,4,0.059,5,0.059,9,0.189,12,0.467,13,0.014,15,1.764,19,0.535,21,0.15,29,0.226,33,0.068,43,0.006,44,0.006,49,0.839,50,2.007,51,0.999,52,2.204,55,2.292,60,0.92,61,0.375,62,0.92,66,1.458,68,1.651,69,0.986,70,1.326,72,2.765,73,1.854,81,1.496,86,0.947,89,2.192,91,2.387,93,0.461,96,0.495,97,1.026,98,1.764,101,2.391,104,2.041,112,1.714,114,0.876,118,1.299,121,1.549,122,2.743,123,2.052,126,2.686,128,1.883,129,1.563,130,2.598,131,2.64,134,1.299,135,2.873,137,1.856,139,2.873,141,2.168,142,1.672,150,1.554,151,4.404,154,4.575,155,1.554,156,3.494,157,4.404,158,4.404,159,4.404,160,4.404,162,3.717,166,1.819,168,1.819,223,2.168,264,1.187,267,1.947,282,3.035,339,2.437,379,3.023,385,2.455,392,2.686,452,1.299,514,4.575,520,2.168,525,1.554,527,1.554,539,3.999,554,1.772,612,2.016,693,2.64,694,2.016,695,2.316,696,2.873,697,2.873,698,2.016,699,2.316,700,6.816,701,2.316,702,3.185,703,2.316,704,4.483,705,2.316,706,4.467,707,2.316,708,2.016,709,2.316,710,2.316,711,2.316,712,2.316,713,2.316,714,2.316]],["title/modules/PotentialStudentModule.html",[170,0.691,715,2.693]],["body/modules/PotentialStudentModule.html",[0,0.412,3,0.134,4,0.118,5,0.118,13,0.014,21,0.225,24,1.502,25,1.02,26,1.349,29,0.186,33,0.134,43,0.01,44,0.01,58,2.044,61,0.488,93,0.917,114,2.277,121,1.157,170,1.347,172,1.742,173,1.961,174,2.337,175,2.337,176,2.134,177,3.25,178,2.231,183,3.421,185,3.055,186,2.337,187,2.337,189,2.917,190,0.951,191,3.208,192,2.896,193,2.583,215,3.568,216,2.231,217,3.617,218,2.231,219,2.896,224,3.324,225,2.896,264,0.917,282,2.277,339,2.462,392,4.488,545,3.786,546,2.896,553,3.617,693,4.842,708,4.009,715,5.251,716,4.009,717,4.604,718,4.009,719,4.604,720,4.604]],["title/classes/PotentialStudentRegisteredEvent.html",[0,0.246,398,2.693]],["body/classes/PotentialStudentRegisteredEvent.html",[0,0.483,2,0.662,3,0.131,4,0.115,5,0.115,7,1.793,8,4.91,9,0.365,10,1.615,12,0.536,13,0.013,19,0.564,21,0.131,22,1.939,29,0.239,33,0.131,43,0.01,44,0.01,56,1.415,60,0.8,61,0.326,62,0.8,96,1.415,97,0.771,121,1.473,128,1.872,170,1.018,232,3.124,264,1.318,282,2.898,293,3.124,295,3,301,2.654,378,3.15,379,3.545,380,3.899,398,4.723,400,4.104,418,5.282,430,4.644,650,3.006,652,5.762,654,3.233,676,4.644,721,5.198,722,7.316,723,5.911,724,4.478,725,4.478]],["title/classes/PotentialStudentRegisteredEventHandler.html",[0,0.246,726,3.152]],["body/classes/PotentialStudentRegisteredEventHandler.html",[0,0.242,2,0.582,3,0.115,4,0.101,5,0.101,9,0.322,12,0.492,13,0.014,19,0.517,21,0.211,22,1.155,25,0.873,26,1.155,29,0.27,33,0.115,43,0.009,44,0.009,49,1.244,50,1.694,51,1.077,53,2.21,56,1.16,58,2.965,60,0.969,61,0.395,62,0.969,66,0.843,67,1.975,96,1.16,97,0.678,98,1.951,104,1.975,148,1.834,156,3.245,190,0.813,206,2,216,1.909,228,3.899,232,3.403,246,1.611,264,1.235,285,2.251,293,2.965,299,2.64,324,2.478,325,3.478,339,1.611,367,1.49,378,2.889,379,2.627,396,2.335,398,5.07,408,3.431,409,3.431,410,3.431,411,3.431,426,2.335,548,2.099,552,2.335,560,3.593,565,3.639,656,2.644,657,5.056,662,3.915,664,2.845,666,2.845,688,3.095,721,4.87,726,4.26,727,3.431,728,3.431,729,3.94,730,3.94,731,3.095,732,3.94,733,3.94,734,3.431,735,3.095,736,3.94,737,3.94,738,3.94,739,3.94,740,3.94,741,3.431]],["title/injectables/PotentialStudentService.html",[45,0.921,392,2.378]],["body/injectables/PotentialStudentService.html",[0,0.322,3,0.086,4,0.075,5,0.075,9,0.239,11,1.067,12,0.566,13,0.014,19,0.625,21,0.191,25,0.649,29,0.252,33,0.086,41,1.156,43,0.007,44,0.007,45,1.006,46,2.204,47,1.152,49,1.006,50,2.1,51,1.198,52,2.291,55,2.383,56,0.938,60,1.115,61,0.454,62,1.115,66,1.554,68,1.596,69,1.866,70,1.421,72,2.837,73,1.792,86,1.792,89,2.482,91,2.482,93,0.584,96,0.627,97,1.074,101,2.189,104,2.272,121,1.574,122,3.105,123,2.459,128,1.649,130,2.891,134,2.459,137,2.224,148,0.991,190,0.605,218,2.124,246,1.198,264,1.352,267,2.204,282,3.057,339,1.198,379,3.172,385,2.942,392,2.598,450,2.756,452,1.644,489,3.454,525,1.967,539,4.394,546,1.843,569,3.443,571,3.816,575,3.164,698,3.816,706,4.788,742,2.551,743,2.93,744,2.93,745,4.383,746,2.93,747,2.93,748,2.93,749,2.93,750,2.93,751,2.551,752,2.93,753,2.93,754,2.93,755,2.93,756,2.93]],["title/classes/PotentialTest.html",[0,0.246,466,2.138]],["body/classes/PotentialTest.html",[0,0.215,1,2.398,2,0.517,3,0.102,4,0.09,5,0.09,7,1.271,9,0.286,10,1.363,11,1.817,12,0.695,13,0.014,14,1.49,15,2.256,16,1.49,17,2.476,18,1.431,19,0.684,21,0.146,23,4.023,24,2.186,25,0.775,26,1.704,29,0.141,33,0.146,43,0.008,44,0.008,61,0.488,70,1.508,81,2.593,98,1.101,121,1.487,170,1.154,190,0.722,212,3.585,240,1.274,283,3.987,286,1.553,382,3.537,390,3.919,437,4.255,443,3.054,446,3.926,466,3.571,499,4.13,504,2.073,627,3.657,757,2.748,758,5.836,759,5.265,760,5.836,761,6.244,762,3.498,763,3.498,764,3.919,765,3.498,766,4.344,767,4.344,768,3.498,769,3.498,770,3.498,771,2.748,772,2.526,773,3.046]],["title/classes/PotentialTestRegisteredEvent.html",[0,0.246,461,2.693]],["body/classes/PotentialTestRegisteredEvent.html",[0,0.422,2,0.717,3,0.142,4,0.124,5,0.124,7,1.587,8,4.617,9,0.396,10,1.702,12,0.565,13,0.014,19,0.594,21,0.142,22,1.423,29,0.251,33,0.142,43,0.01,44,0.01,56,1.038,60,0.867,61,0.353,62,0.867,89,2.93,96,1.472,97,0.836,121,1.443,128,1.947,232,2.765,238,1.892,267,2.602,295,3.162,299,2.93,301,2.877,418,4.967,443,2.93,446,3.809,447,4.211,448,4.227,450,3.918,461,4.871,515,5.424,650,3.258,654,3.505,676,4.894,774,5.404,775,4.854,776,4.854]],["title/classes/PotentialTestRegisteredEventHandler.html",[0,0.246,777,2.897]],["body/classes/PotentialTestRegisteredEventHandler.html",[0,0.353,2,0.506,3,0.1,4,0.088,5,0.088,9,0.28,12,0.446,13,0.014,19,0.469,21,0.202,22,1.684,24,1.603,25,0.759,26,1.004,29,0.232,33,0.1,41,0.904,43,0.008,44,0.008,49,1.128,50,1.57,56,1.343,58,3.072,60,0.878,61,0.358,62,0.878,66,1.051,67,2.287,96,1.051,97,0.99,98,1.808,104,1.79,148,1.662,156,2.277,170,0.846,190,0.707,206,1.738,216,2.784,223,3.721,228,3.09,232,3.237,238,1.492,246,1.401,285,2.34,293,2.787,324,2.154,325,3.73,367,1.296,378,2.619,388,3.298,394,3.346,399,4.279,400,2.757,401,4.279,443,2.447,446,2.494,447,1.922,456,3.548,461,5.172,466,1.825,539,4.462,548,1.825,552,2.03,560,3.65,565,4.462,566,4.279,656,2.299,657,4.8,660,5.467,662,3.548,664,2.473,666,4.149,727,2.982,728,2.982,731,2.691,734,2.982,735,2.691,741,2.982,759,2.691,764,2.691,774,4.515,777,4.533,778,5.747,779,5.747,780,4.914,781,3.425,782,4.914,783,3.425,784,3.425,785,3.425,786,3.425,787,3.425,788,3.425,789,3.425,790,2.982,791,3.425,792,3.425,793,3.425]],["title/injectables/RabbitmqService.html",[45,0.921,560,1.944]],["body/injectables/RabbitmqService.html",[0,0.335,3,0.116,4,0.102,5,0.102,9,0.325,12,0.495,13,0.014,19,0.521,21,0.182,29,0.284,33,0.116,43,0.009,44,0.009,45,1.253,47,1.565,49,1.253,56,1.333,60,0.976,61,0.488,62,0.976,66,1.435,67,2.708,70,1.509,93,0.793,96,0.851,97,1.073,101,1.396,137,3.163,148,1.346,156,3.751,216,3.517,218,3.02,237,2.02,238,1.892,318,3.763,367,1.505,396,2.359,494,2.873,496,3.236,560,3.25,564,3.465,666,3.942,794,3.465,795,6.233,796,3.98,797,7.572,798,3.98,799,5.703,800,7.028,801,5.46,802,3.98,803,5.46,804,5.841,805,7.26,806,5.46,807,2.671,808,3.98,809,3.465,810,3.465,811,2.873,812,3.98,813,3.98]],["title/modules/RmqModule.html",[170,0.691,183,1.86]],["body/modules/RmqModule.html",[0,0.206,3,0.098,4,0.086,5,0.086,12,0.304,13,0.014,19,0.32,21,0.192,29,0.277,33,0.098,34,1.879,43,0.008,44,0.008,49,0.769,60,0.599,61,0.48,62,0.599,66,1.41,70,0.667,81,1.978,93,0.667,97,0.833,101,1.175,129,1.468,137,1.7,170,1.368,172,1.267,173,2.417,174,1.7,175,1.7,176,1.552,177,2.75,178,3.011,183,3.422,185,2.454,186,1.7,187,1.7,189,1.623,195,1.879,208,4.864,215,3.363,216,3.511,238,1.017,299,2.417,316,1.785,367,1.267,378,3.024,394,3.024,396,3.363,475,5.801,476,4.097,479,2.631,481,2.248,482,2.631,484,3.799,485,2.631,486,2.631,487,3.799,488,3.246,489,1.985,490,2.631,494,4.097,495,2.631,496,1.985,560,3.717,622,3.799,799,4.882,804,3.799,807,2.248,811,3.491,814,2.916,815,2.916,816,2.916,817,2.631,818,4.21,819,3.349,820,4.958,821,3.349,822,5.411,823,5.411,824,5.411,825,4.941,826,4.21,827,2.916,828,2.916,829,5.738,830,2.916,831,2.916,832,2.916,833,2.916,834,2.916,835,2.916,836,2.916,837,2.916,838,2.916]],["title/interfaces/RmqModuleOptions.html",[378,2.138,820,2.897]],["body/interfaces/RmqModuleOptions.html",[0,0.226,3,0.108,4,0.094,5,0.094,9,0.301,10,1.415,12,0.335,13,0.014,21,0.19,29,0.286,33,0.108,34,2.069,43,0.008,44,0.008,61,0.53,66,1.28,70,1.193,81,2.118,93,0.735,97,0.892,101,1.294,129,1.573,137,1.872,170,1.355,173,1.571,177,1.787,178,2.509,183,2.774,189,1.787,195,2.069,208,4.758,215,3.07,216,3.601,238,1.12,299,2.549,367,1.395,378,3.19,394,2.76,396,3.548,475,5.934,476,4.322,479,2.898,481,2.476,482,2.898,484,4.069,485,2.898,486,2.898,487,4.069,488,3.476,489,2.186,490,2.898,494,4.322,495,2.898,496,2.186,560,2.9,622,2.898,799,5.099,804,4.069,807,2.476,811,3.739,817,2.898,818,3.212,820,4.936,822,4.51,823,4.51,824,5.212,825,5.212,826,4.51,827,3.212,828,3.212,829,5.954,830,3.212,831,3.212,832,3.212,833,3.212,834,3.212,835,3.212,836,3.212,837,3.212,838,3.212,839,3.689]],["title/controllers/StudentManagementController.html",[112,1.518,840,2.897]],["body/controllers/StudentManagementController.html",[0,0.333,3,0.115,4,0.101,5,0.101,9,0.322,12,0.358,13,0.014,15,1.242,19,0.377,21,0.195,22,1.157,29,0.27,33,0.115,41,1.042,43,0.009,44,0.009,49,1.246,50,1.826,60,0.705,61,0.287,62,0.705,66,1.161,67,2.26,68,1.977,93,0.787,96,1.161,97,0.68,98,1.708,101,1.905,112,2.054,114,1.493,117,2.85,118,2.215,119,4.486,120,1.552,121,1.285,126,4.154,128,2.17,129,1.649,130,1.829,141,2.34,148,1.335,202,2.65,233,3.007,264,1.082,282,3.01,295,2.004,305,2.483,317,1.913,318,3.046,341,3.101,367,2.347,375,2.65,376,2.85,379,3.395,384,3.438,385,2.65,388,3.644,396,2.34,402,3.438,426,2.34,450,3.415,514,2.65,527,2.65,554,3.007,629,4.265,696,4.265,697,4.265,840,4.481,841,3.644,842,6.206,843,3.948,844,3.948,845,5.43,846,5.43,847,5.404,848,5.404,849,3.948,850,3.948,851,3.948,852,3.948,853,3.438,854,3.438,855,3.948,856,3.438]],["title/modules/StudentManagementModule.html",[170,0.691,857,2.897]],["body/modules/StudentManagementModule.html",[0,0.238,2,0.573,3,0.113,4,0.099,5,0.099,13,0.014,21,0.233,22,1.137,24,1.749,25,0.859,29,0.217,33,0.113,43,0.009,44,0.009,61,0.282,93,0.773,114,2.509,120,1.525,144,2.298,170,1.271,172,2.029,173,2.618,174,1.968,175,1.968,176,1.797,177,2.979,178,1.879,182,4.04,183,3.227,185,2.722,186,1.968,187,1.968,188,3.046,189,3.214,190,0.801,191,2.858,192,2.439,193,2.175,194,2.8,195,2.175,196,3.872,199,3.046,209,3.377,210,2.8,211,2.8,212,1.797,213,2.8,264,0.773,282,2.325,285,1.177,316,3.276,339,1.586,391,4.529,533,4.834,541,3.179,542,4.213,545,3.373,546,2.439,547,3.009,548,2.066,552,2.298,553,3.046,554,1.879,715,4.834,840,4.439,841,2.603,857,5.849,858,3.377,859,3.377,860,3.377,861,4.529,862,4.67,863,3.878,864,3.878,865,3.878,866,3.878,867,3.878,868,3.878]],["title/injectables/StudentManagementRepository.html",[45,0.921,406,2.693]],["body/injectables/StudentManagementRepository.html",[0,0.44,3,0.094,4,0.082,5,0.082,7,1.552,9,0.262,12,0.614,13,0.014,19,0.645,21,0.189,24,1.528,25,0.711,26,1.623,29,0.295,33,0.094,37,4.654,41,0.846,43,0.008,44,0.01,45,1.075,46,2.906,47,1.261,49,1.397,50,2.028,51,1.664,52,2.394,53,3.795,54,2.947,55,2.649,56,1.385,58,3.41,60,1.209,61,0.493,62,1.209,63,2.017,64,2.947,66,1.385,67,2.359,68,1.168,69,1.366,70,1.213,72,2.463,73,1.312,74,2.017,75,4.254,77,2.017,78,3.482,79,3.829,80,3.829,81,1.312,82,2.947,83,2.017,85,2.017,86,1.312,87,2.95,89,1.366,90,2.017,91,1.366,93,0.639,97,0.552,120,1.261,121,0.616,190,0.662,234,2.316,235,2.153,237,1.628,238,0.974,239,4.087,240,2.359,241,2.153,242,2.153,243,2.153,244,2.153,245,2.153,246,2.264,248,2.153,264,0.934,323,1.709,339,2.857,367,1.772,406,4.087,496,2.777,539,2.153,541,2.777,546,2.017,632,3.145,810,4.08,841,3.145,869,3.207,870,3.145,871,4.08,872,3.207,873,2.52,874,3.207]],["title/injectables/StudentManagementService.html",[45,0.921,391,2.524]],["body/injectables/StudentManagementService.html",[0,0.446,3,0.16,4,0.14,5,0.14,13,0.014,21,0.16,29,0.271,33,0.16,43,0.011,44,0.011,45,1.542,46,2.071,47,2.153,56,1.171,93,1.091,96,1.171,120,2.153,148,1.852,218,2.653,249,3.954,264,1.091,282,2.071,317,3.256,391,4.572,406,4.879,554,3.256,751,4.768,841,3.676,875,5.851,876,5.851,877,4.851,878,4.302]],["title/controllers/StudyProgramController.html",[112,1.518,879,2.897]],["body/controllers/StudyProgramController.html",[0,0.34,3,0.162,4,0.142,5,0.142,9,0.452,13,0.014,15,1.742,19,0.528,21,0.198,33,0.162,43,0.011,44,0.011,49,1.553,66,1.185,70,1.348,93,1.103,96,1.185,101,1.943,112,2.095,114,2.095,118,3.107,426,4.01,527,3.717,879,4.885,880,4.541,881,4.885,882,4.35,883,5.315,884,6.625,885,5.538,886,4.594,887,3.998,888,5.538,889,5.538]],["title/modules/StudyProgramModule.html",[170,0.691,890,2.897]],["body/modules/StudyProgramModule.html",[0,0.333,3,0.159,4,0.139,5,0.139,13,0.013,21,0.211,33,0.159,43,0.011,44,0.011,93,1.082,114,2.529,170,1.247,172,2.054,173,2.313,174,2.756,175,2.756,176,2.517,177,3.509,178,2.631,185,3.393,186,2.756,187,2.756,189,2.631,426,3.962,879,5.229,880,3.645,881,3.921,886,4.969,887,3.921,890,5.705,891,4.729,892,4.729,893,4.729,894,4.729]],["title/injectables/StudyProgramService.html",[45,0.921,886,2.524]],["body/injectables/StudyProgramService.html",[0,0.356,3,0.169,4,0.148,5,0.148,9,0.473,13,0.013,19,0.553,21,0.169,33,0.169,43,0.011,44,0.011,45,1.597,47,2.28,49,1.597,66,1.24,70,1.386,93,1.155,101,2.035,735,4.556,880,4.669,881,5.023,884,6.73,886,4.375,895,4.556,896,5.799,897,5.799]],["title/classes/Teacher.html",[0,0.246,285,1.218]],["body/classes/Teacher.html",[0,0.457,1,2.888,2,0.702,3,0.139,4,0.122,5,0.122,7,1.565,9,0.388,10,1.678,11,2.237,12,0.557,13,0.014,14,2.022,15,1.933,16,2.022,17,2.022,18,1.942,19,0.586,21,0.179,23,3.446,24,2.348,25,1.052,26,1.8,29,0.291,33,0.179,34,2.664,43,0.01,44,0.01,61,0.524,68,1.729,70,1.224,98,1.494,190,0.98,212,2.846,240,1.729,264,1.224,285,2.263,286,2.108,367,1.796,382,3.455,400,2.664,499,2.815,504,3.64,547,2.664,684,5.348,687,5.348,688,4.825,898,3.731,899,4.749,900,3.731]],["title/classes/Teacher-1.html",[0,0.205,285,1.015,901,2.912]],["body/classes/Teacher-1.html",[0,0.302,1,2.761,2,0.728,3,0.144,4,0.126,5,0.126,7,1.603,9,0.402,10,1.718,11,2.29,12,0.571,13,0.014,14,2.098,15,1.979,16,2.098,17,2.098,18,2.015,19,0.6,21,0.184,23,3.528,24,2.459,25,1.092,26,2.03,29,0.199,33,0.184,43,0.01,44,0.01,61,0.549,70,1.253,98,1.55,190,1.017,212,2.915,240,1.794,285,2.38,286,2.187,382,2.501,443,2.678,499,2.92,504,2.92,547,2.764,627,4.357,771,3.871,900,3.871,902,3.871,903,4.927]],["title/controllers/TeacherController.html",[112,1.518,904,2.897]],["body/controllers/TeacherController.html",[0,0.288,2,0.476,3,0.094,4,0.082,5,0.082,9,0.263,12,0.503,13,0.014,15,1.919,19,0.582,21,0.189,29,0.282,33,0.094,41,1.239,43,0.008,44,0.008,49,1.078,50,1.997,51,1.516,53,1.805,60,0.991,61,0.404,62,0.991,66,1.449,68,1.172,81,1.921,89,2,93,0.641,96,0.688,97,0.809,101,1.946,104,1.172,112,1.777,114,1.217,118,1.805,122,3.25,126,3.615,128,2.175,129,1.426,130,1.491,141,1.907,150,2.16,154,4.093,155,2.16,156,3.442,172,1.217,223,3.288,264,1.292,267,1.777,285,2.286,295,3.437,299,2.762,316,1.715,325,3.112,367,1.777,450,2.954,452,1.805,470,4.398,489,2.784,514,3.153,527,2.16,540,4.986,554,1.559,629,3.69,661,4.09,696,2.528,697,2.528,807,2.16,854,4.09,856,4.09,873,3.69,904,3.391,905,2.802,906,4.697,907,4.697,908,4.697,909,4.697,910,4.697,911,2.802,912,3.218,913,5.547,914,3.218,915,4.398,916,4.697,917,3.218,918,3.218,919,3.218,920,4.697,921,3.218,922,4.697,923,6.099,924,5.547,925,2.802,926,2.528,927,3.218,928,3.218,929,3.218,930,3.218,931,3.218,932,3.218,933,3.218,934,3.218,935,3.218]],["title/modules/TeacherModule.html",[170,0.691,861,2.524]],["body/modules/TeacherModule.html",[0,0.258,2,0.621,3,0.123,4,0.107,5,0.107,13,0.014,21,0.227,24,1.847,25,0.931,26,1.231,29,0.277,33,0.123,43,0.009,44,0.009,61,0.467,93,0.837,114,2.709,120,1.652,170,1.233,172,2.709,173,1.789,174,2.132,175,2.132,176,1.947,177,3.47,178,2.035,183,3.419,185,2.875,186,2.132,187,2.132,189,3.323,190,0.867,191,3.018,192,2.642,193,3.178,215,3.357,216,2.035,217,3.3,219,2.642,221,3.033,224,4.09,225,2.642,264,0.837,285,2.174,316,2.238,382,3.253,407,3.3,498,3.658,540,2.82,541,2.49,547,3.178,548,2.238,552,2.49,811,3.033,861,4.886,904,4.627,915,4.64,925,3.658,936,3.658,937,4.201,938,3.658,939,4.201,940,5.664,941,4.201,942,3.3,943,4.201,944,3.658]],["title/injectables/TeacherRepository.html",[45,0.921,559,2.693]],["body/injectables/TeacherRepository.html",[0,0.43,3,0.095,4,0.083,5,0.083,7,1.56,9,0.265,12,0.616,13,0.014,19,0.648,21,0.19,24,1.997,25,0.719,26,1.907,29,0.296,33,0.095,37,4.663,41,0.856,43,0.008,44,0.01,45,1.084,46,2.884,47,1.275,49,1.084,50,2.034,51,1.673,52,2.407,53,3.81,54,2.972,55,2.661,56,1.31,58,3.348,60,1.214,61,0.494,62,1.214,63,2.04,64,2.972,66,1.392,67,2.37,68,1.182,69,1.382,70,1.22,72,2.473,73,1.327,74,2.04,75,4.271,77,2.04,78,3.505,79,3.85,80,3.85,81,1.327,82,2.972,83,2.04,85,2.04,86,1.327,87,2.97,89,1.382,90,2.04,91,1.382,93,0.646,97,0.559,120,1.275,128,0.918,190,0.67,235,2.178,237,1.647,238,0.985,239,3.741,240,2.37,241,2.178,242,2.178,243,2.178,244,2.178,245,2.178,246,2.279,248,2.178,264,0.941,285,2.062,317,2.289,323,1.729,367,1.787,496,2.801,540,3.171,541,2.801,548,1.729,559,4.109,632,3.171,870,3.171,871,4.114,945,2.825,946,4.114,947,3.244,948,3.244]],["title/injectables/TeacherService.html",[45,0.921,915,2.524]],["body/injectables/TeacherService.html",[0,0.359,3,0.103,4,0.091,5,0.091,9,0.289,12,0.611,13,0.014,19,0.668,21,0.204,25,0.785,29,0.257,33,0.103,43,0.008,44,0.008,45,1.155,46,2.411,47,1.393,49,1.155,50,2.165,51,1.375,52,1.979,55,2.059,56,1.252,60,1.203,61,0.49,62,1.203,66,1.441,69,2.143,70,1.491,72,2.322,86,2.059,93,0.706,96,0.758,97,0.61,101,2.363,104,2.453,119,3.378,120,1.393,122,3.397,123,2.824,130,3.121,134,2.824,148,1.198,190,0.731,218,1.716,237,1.798,238,1.076,246,2.395,264,1.434,285,2.045,317,2.439,323,2.682,367,1.904,452,1.987,470,4.235,496,2.983,525,2.378,540,2.378,548,1.888,554,2.439,559,4.937,731,2.783,870,3.378,875,4.383,876,4.383,911,4.383,915,4.01,926,3.954,949,3.085,950,3.543,951,3.543,952,3.543,953,3.543,954,3.543,955,3.543,956,5.311,957,3.543,958,3.543,959,3.543,960,3.543,961,3.543,962,3.543]],["title/controllers/TestProgramController.html",[112,1.518,963,2.897]],["body/controllers/TestProgramController.html",[0,0.353,3,0.1,4,0.088,5,0.088,9,0.28,12,0.446,13,0.014,15,1.81,19,0.549,21,0.194,22,1.006,29,0.232,33,0.1,41,1.518,43,0.008,44,0.008,49,1.129,50,2.029,52,1.349,56,0.734,60,0.879,61,0.358,62,0.879,66,1.481,67,2.521,68,1.792,70,1.146,72,2.597,73,2.57,81,2.012,93,0.684,96,1.23,97,0.991,98,1.08,101,1.726,112,2.176,114,1.298,118,1.925,120,1.934,121,1.54,126,3.409,128,1.882,129,1.908,130,2.28,131,3.552,141,2.034,148,1.945,170,0.847,202,2.303,233,1.662,318,3.884,442,2.303,443,2.676,446,4.026,447,3.884,452,1.925,453,2.988,460,2.988,514,4.647,702,4.284,704,4.284,847,5.009,848,5.009,853,2.988,882,2.695,883,4.936,887,2.477,963,3.552,964,4.218,965,5.439,966,4.284,967,5.471,968,3.431,969,3.431,970,2.988,971,3.431,972,3.431,973,3.618,974,3.431,975,3.431,976,3.431,977,3.431,978,3.431,979,3.431]],["title/modules/TestProgramModule.html",[170,0.691,980,2.897]],["body/modules/TestProgramModule.html",[0,0.237,2,0.571,3,0.113,4,0.099,5,0.099,13,0.014,21,0.236,22,1.132,24,1.744,25,0.856,33,0.113,43,0.009,44,0.009,61,0.447,93,0.77,114,2.321,170,1.057,172,2.321,173,1.645,174,1.96,175,1.96,176,1.79,177,2.973,178,1.871,182,4.036,183,3.222,185,2.715,186,1.96,187,1.96,189,2.591,190,0.797,191,2.85,192,2.429,193,3.001,194,2.789,195,2.167,196,3.861,202,2.592,210,2.789,211,2.789,212,1.79,213,2.789,219,2.429,225,2.429,264,0.77,285,1.173,316,2.058,394,2.058,443,2.278,446,3.114,454,3.861,457,4.263,462,3.363,463,3.034,466,2.058,481,2.592,542,3.034,547,3.001,548,2.058,550,3.363,552,2.289,772,3.861,777,3.861,861,2.429,887,2.789,893,3.363,894,3.363,944,5.342,963,4.429,964,2.592,973,4.524,980,5.793,981,3.363,982,3.863,983,3.363,984,3.863,985,3.863,986,3.034,987,3.863,988,3.863,989,3.863,990,3.863,991,3.863,992,5.349,993,3.863]],["title/injectables/TestProgramRepository.html",[45,0.921,457,2.378]],["body/injectables/TestProgramRepository.html",[0,0.459,3,0.091,4,0.08,5,0.08,7,1.534,9,0.256,12,0.609,13,0.014,19,0.64,21,0.187,25,0.694,26,1.6,29,0.28,33,0.091,37,4.637,41,0.826,43,0.007,44,0.01,45,1.381,46,2.831,47,1.231,49,1.381,50,2.017,51,1.645,52,2.366,53,3.763,54,2.895,55,2.623,56,1.288,58,3.158,60,1.198,61,0.488,62,1.198,63,1.969,64,2.895,66,1.372,67,2.336,68,1.14,69,1.333,70,1.199,72,2.442,73,1.28,74,1.969,75,4.218,77,1.969,78,3.434,79,3.786,80,3.786,81,1.28,82,2.895,83,1.969,85,1.969,86,1.28,87,2.909,89,1.333,90,1.969,91,1.333,93,0.624,97,0.539,128,1.303,129,0.951,190,1.127,220,2.336,235,2.101,239,4.04,240,2.336,241,2.101,242,2.101,243,2.101,244,2.101,245,2.101,246,1.883,248,2.101,317,2.645,367,1.741,394,2.453,407,3.616,443,1.96,457,3.975,466,3.79,541,2.728,554,2.23,627,4.36,632,3.664,790,2.726,870,2.101,873,2.459,946,2.726,964,3.09,986,2.459,994,2.726,995,3.616,996,3.131,997,4.604,998,3.131,999,4.604,1000,3.131,1001,3.131,1002,3.131]],["title/injectables/TestProgramService.html",[45,0.921,973,2.524]],["body/injectables/TestProgramService.html",[0,0.448,3,0.108,4,0.095,5,0.095,9,0.303,12,0.472,13,0.014,19,0.573,21,0.19,25,0.822,29,0.242,33,0.108,43,0.008,44,0.008,45,1.493,47,1.458,49,1.493,50,1.941,52,2.044,56,1.392,60,0.929,61,0.379,62,0.929,66,1.392,67,2.37,70,1.196,72,2.587,73,2.127,81,2.127,93,0.739,96,0.793,97,0.895,101,1.824,121,0.999,128,1.471,130,2.41,148,1.255,220,2.639,231,4.528,238,1.579,246,2.127,305,3.27,317,2.519,318,3.651,319,3.754,323,2.771,367,1.967,394,2.771,443,2.771,446,3.839,457,4.483,463,2.914,466,1.977,489,3.082,541,3.082,554,2.519,569,4.085,632,3.49,870,2.49,877,4.698,878,5.112,883,5.847,895,2.914,964,4.368,965,4.085,966,4.528,967,5.666,970,4.528,973,4.467,986,2.914,1003,3.71,1004,3.71,1005,3.71,1006,5.2,1007,3.71,1008,3.71,1009,3.71,1010,3.71]],["title/classes/UpdateMeetingDto.html",[0,0.246,517,2.693]],["body/classes/UpdateMeetingDto.html",[0,0.348,2,0.837,3,0.165,4,0.145,5,0.145,7,1.88,13,0.013,21,0.2,28,3.358,29,0.229,33,0.165,43,0.011,44,0.011,51,1.548,87,3.655,263,4.64,264,1.129,266,4.451,267,2.595,268,3.848,517,4.604,520,4.066,524,4.451,575,4.953,942,5.389,1011,4.933,1012,3.803,1013,3.563,1014,5.666]],["title/classes/UpdatePotentialClassDto.html",[0,0.246,138,2.693]],["body/classes/UpdatePotentialClassDto.html",[0,0.454,2,0.842,3,0.166,4,0.146,5,0.146,7,1.885,10,1.881,13,0.014,21,0.201,28,3.377,29,0.23,33,0.166,43,0.011,44,0.011,87,3.668,115,2.24,121,1.323,125,4.094,138,4.62,267,2.604,520,4.08,1012,3.825,1013,3.584,1015,4.962,1016,5.698]],["title/classes/UpdatePotentialModuleDto.html",[0,0.246,605,2.693]],["body/classes/UpdatePotentialModuleDto.html",[0,0.348,2,0.837,3,0.165,4,0.145,5,0.145,7,1.88,13,0.013,21,0.2,28,3.358,29,0.229,33,0.165,43,0.011,44,0.011,87,3.655,121,1.318,170,1.181,267,2.595,344,2.413,346,4.086,520,4.066,575,4.953,605,4.604,942,5.389,1012,3.803,1013,3.563,1017,4.933,1018,5.666]],["title/classes/UpdatePotentialStudentDto.html",[0,0.246,706,2.693]],["body/classes/UpdatePotentialStudentDto.html",[0,0.451,2,0.828,3,0.164,4,0.143,5,0.143,7,1.871,13,0.013,21,0.199,28,4.351,29,0.226,33,0.164,43,0.011,44,0.011,51,1.53,121,1.309,264,1.116,267,2.577,282,2.577,379,2.714,385,3.759,422,4.4,520,4.038,706,4.572,1012,4.928,1013,4.617,1019,4.877,1020,6.813,1021,5.601]],["title/classes/UpdateTeacherDto.html",[0,0.246,956,2.897]],["body/classes/UpdateTeacherDto.html",[0,0.451,2,0.828,3,0.164,4,0.143,5,0.143,7,1.871,13,0.013,21,0.199,28,4.351,29,0.226,33,0.164,43,0.011,44,0.011,51,1.53,128,1.928,264,1.116,285,2.068,298,4.284,299,2.901,470,3.522,472,4.4,520,4.038,926,4.4,956,4.918,1012,4.928,1013,4.617,1022,4.877,1023,5.601]],["title/coverage.html",[1024,4.313]],["body/coverage.html",[0,0.492,1,0.829,5,0.056,6,1.909,12,0.199,13,0.014,36,1.909,41,0.578,43,0.006,44,0.006,45,1.665,46,0.829,48,1.909,112,2.399,113,1.583,115,2.82,116,2.934,117,3.156,125,1.168,138,1.471,143,1.299,152,1.016,176,2.528,184,1.299,191,2.66,197,1.583,201,1.471,204,1.379,234,3.156,249,3.156,263,1.379,264,1.571,265,1.909,266,2.75,268,1.23,285,1.063,291,3.448,292,1.909,302,1.722,303,1.909,335,1.909,339,0.896,343,1.471,344,3.055,345,1.909,346,1.168,352,1.722,353,1.909,354,1.299,358,1.379,361,1.112,369,1.909,375,1.471,376,2.528,377,1.909,378,1.168,379,1.062,386,1.722,387,1.909,391,1.379,392,1.299,398,1.471,406,1.471,421,1.909,422,2.75,442,1.471,443,3.091,444,2.75,445,1.909,447,1.23,454,1.583,455,1.909,457,1.299,461,1.471,466,1.168,470,1.379,471,1.909,472,2.75,488,4.388,497,2.75,507,1.583,509,1.583,510,1.909,517,1.471,522,1.379,545,1.379,547,1.964,556,1.909,559,1.471,560,1.062,598,1.583,599,2.934,605,1.471,620,1.379,624,1.583,645,2.75,649,2.75,650,3.35,655,1.722,656,3.35,670,2.75,675,2.75,677,1.722,683,2.75,693,1.583,694,1.909,706,1.471,721,2.75,726,1.722,742,1.909,757,2.75,772,1.583,774,2.75,777,1.583,794,1.909,817,1.722,820,1.583,840,1.583,841,2.934,879,1.583,880,2.934,881,2.528,882,2.75,886,1.379,895,2.75,898,2.75,902,2.75,904,1.583,905,1.909,915,1.379,945,1.909,949,1.909,956,1.583,963,1.583,964,2.934,973,1.379,994,1.909,1011,1.909,1015,1.909,1017,1.909,1019,1.909,1022,1.909,1024,1.722,1025,1.909,1026,2.192,1027,8.031,1028,3.501,1029,4.992,1030,4.992,1031,6.97,1032,6.97,1033,3.048,1034,6.847,1035,7.519,1036,2.192,1037,2.192,1038,5.065,1039,4.346,1040,2.192,1041,2.192,1042,6.342,1043,1.909,1044,4.371,1045,4.371,1046,6.847,1047,6.106,1048,3.501,1049,3.501,1050,4.992,1051,2.192,1052,2.192,1053,4.371,1054,4.371,1055,2.192,1056,2.192,1057,2.192,1058,2.192,1059,2.192,1060,2.192,1061,2.192,1062,3.806,1063,4.992,1064,1.909,1065,1.909,1066,1.909,1067,3.501,1068,3.501,1069,3.501,1070,2.192,1071,2.192]],["title/classes/createPotentialTestDto.html",[0,0.246,447,2.251]],["body/classes/createPotentialTestDto.html",[0,0.393,1,2.419,2,0.527,3,0.104,4,0.091,5,0.091,7,1.289,9,0.291,10,1.382,11,1.843,12,0.654,13,0.014,14,1.519,15,2.269,16,1.519,17,1.519,18,1.459,19,0.688,21,0.148,29,0.144,33,0.104,43,0.008,44,0.008,61,0.492,70,1.468,81,2.616,121,1.515,129,1.536,170,1.163,190,0.737,212,3.25,240,1.299,267,1.914,283,4.023,286,1.584,288,4.536,289,4.247,290,2.115,336,3.396,390,3.975,437,4.293,443,3.071,446,4.001,447,2.838,758,5.88,759,5.305,760,5.88,761,6.28,764,3.975,766,4.405,767,4.405,1065,6.28,1066,3.107,1072,5.06,1073,5.06,1074,3.568,1075,5.06,1076,3.568,1077,3.568,1078,3.568,1079,3.568,1080,3.568,1081,5.879,1082,5.879,1083,6.396]],["title/dependencies.html",[173,2.057,995,2.627]],["body/dependencies.html",[0,0.343,13,0.014,22,1.637,25,1.237,26,1.637,28,3.31,43,0.011,44,0.011,93,1.113,173,2.378,195,3.133,221,4.032,290,3.31,807,3.749,809,4.863,1013,3.512,1084,7.631,1085,5.585,1086,5.585,1087,5.585,1088,5.585,1089,5.585,1090,5.585,1091,5.585,1092,5.585,1093,5.585,1094,5.585,1095,5.585,1096,5.585,1097,5.585,1098,5.585,1099,5.585,1100,5.585,1101,5.585,1102,5.585,1103,5.585]],["title/miscellaneous/functions.html",[1104,2.414,1105,4.206]],["body/miscellaneous/functions.html",[9,0.395,13,0.012,29,0.293,43,0.01,44,0.01,60,1.296,61,0.528,62,1.296,115,1.904,176,3.848,238,2.202,264,0.965,279,4.886,344,2.062,443,2.062,488,4.175,621,4.886,862,5.983,877,5.708,880,3.25,1025,5.983,1038,5.983,1039,6.885,1062,5.416,1104,3.496,1105,4.216,1106,7.987,1107,7.251,1108,6.871,1109,6.314,1110,4.842,1111,4.842,1112,6.22]],["title/index.html",[9,0.273,1113,3.344,1114,3.344]],["body/index.html",[4,0.128,13,0.013,29,0.202,32,3.94,43,0.01,44,0.01,279,3.94,323,2.672,446,3.228,621,5.487,878,3.94,965,4.997,1024,3.94,1109,4.367,1115,5.015,1116,5.015,1117,6.361,1118,5.015,1119,5.015,1120,5.015,1121,5.015,1122,5.015,1123,5.015,1124,5.015,1125,5.015,1126,7.869,1127,5.015,1128,5.015,1129,7.746,1130,5.015,1131,6.361,1132,5.015,1133,5.015,1134,5.015,1135,5.015,1136,5.015,1137,5.015,1138,5.015,1139,6.361,1140,6.361,1141,5.015,1142,5.015,1143,5.015,1144,5.015,1145,5.015,1146,5.015,1147,5.015,1148,5.015,1149,5.015,1150,5.015,1151,5.015,1152,5.015,1153,5.015,1154,5.015,1155,5.015,1156,4.367,1157,5.015,1158,5.015,1159,5.015,1160,5.015,1161,5.015,1162,5.015,1163,4.367]],["title/modules.html",[172,2.077]],["body/modules.html",[13,0.011,32,6.437,43,0.011,44,0.011,171,4.055,172,2.125,182,3.151,183,2.603,533,3.77,616,4.055,715,3.77,857,4.055,861,3.533,890,4.055,980,4.055,1164,8.194,1165,8.194,1166,8.241,1167,5.617,1168,5.617]],["title/overview.html",[1169,4.781]],["body/overview.html",[2,0.585,13,0.014,43,0.009,44,0.009,47,1.555,114,1.496,143,3.682,170,0.681,171,5.605,172,1.496,173,1.685,174,2.008,175,2.008,176,1.833,177,1.917,178,1.917,179,3.444,180,3.444,181,3.444,182,4.065,183,3.663,184,3.682,185,2.76,186,2.008,187,2.008,354,3.682,378,2.108,391,3.907,392,3.682,457,3.682,522,3.907,533,4.982,534,3.444,536,3.444,560,3.596,616,5.605,617,3.444,619,3.444,620,3.907,715,4.982,716,3.444,718,3.444,814,3.444,815,3.444,816,3.444,857,5.781,858,3.444,859,3.444,860,3.444,861,4.668,886,3.907,890,4.83,891,3.444,892,3.444,901,3.444,915,3.907,936,3.444,938,3.444,973,3.907,980,5.605,981,3.444,983,3.444,1169,3.444,1170,3.956,1171,3.956,1172,3.956,1173,3.956]],["title/properties.html",[10,1.32,995,2.627]],["body/properties.html",[10,1.727,13,0.013,29,0.255,43,0.012,44,0.012,1156,5.504,1163,5.504,1174,6.321,1175,6.321,1176,6.321]],["title/miscellaneous/variables.html",[1104,2.414,1177,4.206]],["body/miscellaneous/variables.html",[0,0.258,9,0.344,12,0.623,13,0.013,18,3.241,24,2.239,26,2.012,43,0.009,44,0.009,61,0.467,70,1.368,115,2.23,152,1.951,191,4.088,197,4.095,218,3.326,264,1.368,277,5.978,285,1.278,344,2.416,361,2.137,400,3.851,443,2.732,466,2.243,492,6.376,497,3.307,507,4.095,508,3.666,545,3.567,547,3.851,624,4.095,627,4.035,645,3.307,648,3.666,670,3.307,674,3.666,683,3.307,692,3.666,757,3.307,771,4.456,772,4.095,773,3.666,877,5.539,898,3.307,900,4.456,902,3.307,1033,4.939,1043,3.666,1064,3.666,1104,3.039,1177,3.666,1178,6.416,1179,4.21,1180,4.21,1181,4.21,1182,4.21,1183,4.21,1184,4.21,1185,5.673,1186,6.865,1187,6.865,1188,6.865]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1175,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":901,"title":{"classes/Teacher-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1170,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1172,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":162,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["201",{"_index":155,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["28",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1173,"title":{},"body":{"overview.html":{}}}],["4.1.13",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":159,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["42",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["7.0.12",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1171,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["abstract",{"_index":628,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["abstract.schema",{"_index":94,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractdocument:19",{"_index":286,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractrepository",{"_index":46,"title":{"injectables/AbstractRepository.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["abstractrepository:14",{"_index":241,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:25",{"_index":244,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:40",{"_index":243,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:50",{"_index":245,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:59",{"_index":242,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["access",{"_index":407,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/TeacherModule.html":{},"injectables/TestProgramRepository.html":{}}}],["accessing",{"_index":485,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["added",{"_index":785,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["address",{"_index":431,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["allows",{"_index":942,"title":{},"body":{"modules/TeacherModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["amazing",{"_index":1146,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":758,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["api",{"_index":1111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1109,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/common",{"_index":190,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["application",{"_index":877,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application_service",{"_index":191,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmodel",{"_index":239,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["applications",{"_index":878,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["applied",{"_index":688,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/Teacher.html":{}}}],["apply",{"_index":338,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["applyforstudy",{"_index":842,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(@body",{"_index":850,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(data",{"_index":843,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applying",{"_index":341,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/StudentManagementController.html":{}}}],["apps/.../main.ts",{"_index":1106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../meeting.schema.ts",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialclass.schema.ts",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialmodule.schema.ts",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialstudent.schema.ts",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialtest.schema.ts",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../service.ts",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../teacher.schema.ts",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/class",{"_index":115,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/module",{"_index":344,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/student",{"_index":264,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/study",{"_index":880,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/test",{"_index":443,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":81,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["associated",{"_index":283,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["async",{"_index":50,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["asynchronously",{"_index":482,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["author",{"_index":1156,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":1168,"title":{},"body":{"modules.html":{}}}],["await",{"_index":104,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["backers",{"_index":1147,"title":{},"body":{"index.html":{}}}],["base",{"_index":30,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["basic",{"_index":1002,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["being",{"_index":652,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["between",{"_index":538,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["birthday",{"_index":423,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["body",{"_index":141,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["bootstrap",{"_index":176,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1166,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1164,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1118,"title":{},"body":{"index.html":{}}}],["bus",{"_index":852,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["business",{"_index":229,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["call",{"_index":873,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramRepository.html":{}}}],["care",{"_index":1001,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["case",{"_index":495,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["catch",{"_index":157,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["change",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["classmanagement",{"_index":328,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["classmanagementcontroller",{"_index":113,"title":{"controllers/ClassManagementController.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"coverage.html":{}}}],["classmanagementmodule",{"_index":171,"title":{"modules/ClassManagementModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["classmanagementrepository",{"_index":184,"title":{"injectables/ClassManagementRepository.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["classmanagementservice",{"_index":143,"title":{"injectables/ClassManagementService.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":799,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientproxy",{"_index":797,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["clients",{"_index":831,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule",{"_index":825,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":833,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_classmanagementmodule",{"_index":179,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_imports",{"_index":181,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_providers",{"_index":180,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_meetingmodule",{"_index":534,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_meetingmodule_imports",{"_index":535,"title":{},"body":{"modules/MeetingModule.html":{}}}],["cluster_meetingmodule_providers",{"_index":536,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule",{"_index":617,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule_imports",{"_index":618,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["cluster_modulemanagementmodule_providers",{"_index":619,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_potentialstudentmodule",{"_index":716,"title":{},"body":{"modules/PotentialStudentModule.html":{},"overview.html":{}}}],["cluster_potentialstudentmodule_imports",{"_index":717,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["cluster_potentialstudentmodule_providers",{"_index":718,"title":{},"body":{"modules/PotentialStudentModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":814,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":815,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":816,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule",{"_index":858,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_imports",{"_index":859,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_providers",{"_index":860,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule",{"_index":891,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule_providers",{"_index":892,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":936,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":937,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":938,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule",{"_index":981,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule_imports",{"_index":982,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["cluster_testprogrammodule_providers",{"_index":983,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["collection",{"_index":498,"title":{},"body":{"classes/Meeting.html":{},"modules/TeacherModule.html":{}}}],["command",{"_index":233,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["command/event",{"_index":222,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["commandbus",{"_index":847,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandhandler",{"_index":321,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["commandhandler(createpotentialclasscommand",{"_index":322,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["commandhandler(createpotentialmodulecommand",{"_index":360,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["commandhandler(createpotentialstudentcommand",{"_index":405,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["commandhandler(createpotentialtestcommand",{"_index":464,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["commands/create",{"_index":202,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["committing",{"_index":332,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["common",{"_index":630,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["communication",{"_index":943,"title":{},"body":{"modules/TeacherModule.html":{}}}],["complete",{"_index":681,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["completion",{"_index":401,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["configmodule",{"_index":194,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configmodule.forroot",{"_index":210,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configservice",{"_index":475,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('mongodb_uri",{"_index":493,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":837,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":838,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":208,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configure",{"_index":481,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{}}}],["configures",{"_index":862,"title":{},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{}}}],["configureswagger",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configureswagger(app",{"_index":1107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":476,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["connecting",{"_index":477,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":221,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/TeacherModule.html":{},"dependencies.html":{}}}],["console.log(\"triggered",{"_index":324,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["console.log('message",{"_index":856,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{}}}],["constant",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants/service",{"_index":623,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["constants/services",{"_index":192,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["constructor(@injectmodel(potentialclass.name",{"_index":247,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["constructor(@injectmodel(potentialmodule.name",{"_index":633,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["constructor(@injectmodel(potentialstudent.name",{"_index":872,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["constructor(@injectmodel(potentialtest.name",{"_index":998,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["constructor(@injectmodel(teacher.name",{"_index":948,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["constructor(applicationmodel",{"_index":235,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(classmanagementrepository",{"_index":250,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["constructor(clientproxy",{"_index":796,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["constructor(createpotentialclassdto",{"_index":296,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["constructor(createpotentialmoduledto",{"_index":347,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["constructor(createpotentialstudentdto",{"_index":380,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["constructor(createpotentialtestdto",{"_index":448,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(meetingrepository",{"_index":557,"title":{},"body":{"injectables/MeetingService.html":{}}}],["constructor(model",{"_index":57,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(modulemanagementrepository",{"_index":634,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["constructor(potentialclass",{"_index":658,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["constructor(potentialmodule",{"_index":678,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["constructor(potentialstudentrepository",{"_index":743,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["constructor(private",{"_index":527,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{}}}],["constructor(protected",{"_index":95,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(public",{"_index":301,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(publisher",{"_index":306,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["constructor(teacher",{"_index":727,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["constructor(teacherrepository",{"_index":950,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(testprogramrepository",{"_index":1003,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["constructs",{"_index":237,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["contact",{"_index":738,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["containing",{"_index":89,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["context",{"_index":331,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{}}}],["controller",{"_index":112,"title":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["controller('class",{"_index":147,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["controller('meetings",{"_index":526,"title":{},"body":{"controllers/MeetingController.html":{}}}],["controller('module",{"_index":608,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["controller('potentialstudents",{"_index":709,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["controller('student",{"_index":849,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["controller('study",{"_index":888,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["controller('teachers",{"_index":929,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('test",{"_index":974,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["controllers",{"_index":114,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["convert",{"_index":733,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["corresponding",{"_index":390,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["coverage",{"_index":1024,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":31,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ModuleManagementModule.html":{}}}],["cqrsmodule",{"_index":196,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["create",{"_index":51,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["create(@body",{"_index":150,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["create(createmeetingdto",{"_index":512,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["create(createpotentialclassdto",{"_index":124,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["create(createpotentialmoduledto",{"_index":600,"title":{},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["create(createpotentialstudentdto",{"_index":698,"title":{},"body":{"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{}}}],["create(createteacherdto",{"_index":911,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(document",{"_index":63,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["created",{"_index":68,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{}}}],["createddocument",{"_index":99,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createddocument.save",{"_index":102,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createmeetingdto",{"_index":263,"title":{"classes/CreateMeetingDto.html":{}},"body":{"classes/CreateMeetingDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["createmeetingdto.endtime",{"_index":584,"title":{},"body":{"injectables/MeetingService.html":{}}}],["createmeetingdto.starttime",{"_index":530,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["createmeetingdto.studentid",{"_index":578,"title":{},"body":{"injectables/MeetingService.html":{}}}],["createmeetingdto.teacherid",{"_index":529,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["createpotentialclasscommand",{"_index":201,"title":{"classes/CreatePotentialClassCommand.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclasscommandhandler",{"_index":302,"title":{"classes/CreatePotentialClassCommandHandler.html":{}},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclassdto",{"_index":125,"title":{"classes/CreatePotentialClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["createpotentialmodulecommand",{"_index":343,"title":{"classes/CreatePotentialModuleCommand.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["createpotentialmodulecommandhandler",{"_index":352,"title":{"classes/CreatePotentialModuleCommandHandler.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["createpotentialmoduledto",{"_index":346,"title":{"classes/CreatePotentialModuleDto.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["createpotentialstudentcommand",{"_index":375,"title":{"classes/CreatePotentialStudentCommand.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["createpotentialstudentcommand(data",{"_index":851,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["createpotentialstudentcommandhandler",{"_index":386,"title":{"classes/CreatePotentialStudentCommandHandler.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["createpotentialstudentdto",{"_index":379,"title":{"classes/CreatePotentialStudentDto.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["createpotentialstudentdto.email",{"_index":739,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.name",{"_index":736,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.phonenumber",{"_index":740,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.study",{"_index":737,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialtestcommand",{"_index":442,"title":{"classes/CreatePotentialTestCommand.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["createpotentialtestcommand(data",{"_index":978,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestcommandhandler",{"_index":454,"title":{"classes/CreatePotentialTestCommandHandler.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["createpotentialtestdto",{"_index":447,"title":{"classes/createPotentialTestDto.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["createpotentialtestdto(@body",{"_index":977,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto(data",{"_index":968,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto.duration",{"_index":789,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.ec",{"_index":792,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.module",{"_index":786,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.name",{"_index":788,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["creates",{"_index":450,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["createteacherdto",{"_index":470,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["creating",{"_index":129,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["credits",{"_index":767,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["crud",{"_index":946,"title":{},"body":{"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["data",{"_index":128,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{}}}],["database",{"_index":220,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["databasemodule",{"_index":182,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":273,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/Meeting.html":{},"classes/PotentialStudent.html":{}}}],["declarations",{"_index":175,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["decorator",{"_index":870,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTest.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"classes/createPotentialTestDto.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["defines",{"_index":906,"title":{},"body":{"controllers/TeacherController.html":{}}}],["defining",{"_index":828,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["definition",{"_index":771,"title":{},"body":{"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":52,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["delete(':id",{"_index":131,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["delete(@param('id",{"_index":168,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["delete(id",{"_index":69,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["deleteapplicationbyid",{"_index":966,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleteapplicationbyid(@param('id",{"_index":975,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["deleteapplicationbyid(id",{"_index":970,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleted",{"_index":73,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["deletes",{"_index":569,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"injectables/TestProgramService.html":{}}}],["deleting",{"_index":702,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":567,"title":{},"body":{"injectables/MeetingService.html":{}}}],["development",{"_index":1128,"title":{},"body":{"index.html":{}}}],["document",{"_index":37,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["document).exec",{"_index":110,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["documentation",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":78,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["dto",{"_index":267,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"injectables/MeetingService.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["dto/create",{"_index":452,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["dto/createpotentialclassdto",{"_index":145,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{}}}],["dto/createpotentialmoduledto",{"_index":351,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["dto/update",{"_index":525,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["dto/updatepotentialclassdto",{"_index":146,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["dto/updatepotentialmoduledto",{"_index":607,"title":{},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{}}}],["duration",{"_index":759,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["dynamically",{"_index":822,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["dynamicmodule",{"_index":824,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e2e",{"_index":1136,"title":{},"body":{"index.html":{}}}],["each",{"_index":1083,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["ec",{"_index":760,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["ecs",{"_index":793,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["educational",{"_index":766,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["efficient",{"_index":1119,"title":{},"body":{"index.html":{}}}],["email",{"_index":424,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["emits",{"_index":803,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["emitted",{"_index":723,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["empty",{"_index":441,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{}}}],["end",{"_index":276,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["endpoint",{"_index":514,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["endpoints",{"_index":907,"title":{},"body":{"controllers/TeacherController.html":{}}}],["endtime",{"_index":269,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{}}}],["entities",{"_index":1020,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{}}}],["entity",{"_index":627,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"injectables/TestProgramRepository.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":209,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["envfilepath",{"_index":213,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["err",{"_index":158,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["err.message",{"_index":160,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["error",{"_index":700,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["event",{"_index":232,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["event.commit",{"_index":334,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["event.publish(event",{"_index":420,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["event/potentialclass",{"_index":205,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["eventbus",{"_index":848,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["eventpublisher",{"_index":307,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events",{"_index":311,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events/potentialmodule",{"_index":359,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["events/potentialstudent",{"_index":403,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["events/potentialtest",{"_index":462,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{}}}],["eventshandler",{"_index":664,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["eventshandler(potentialclassregisteredevent",{"_index":665,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["eventshandler(potentialmoduleregisteredevent",{"_index":682,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["eventshandler(potentialstudentregisteredevent",{"_index":730,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventshandler(potentialtestregisteredevent",{"_index":783,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["everyone",{"_index":784,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["execute",{"_index":305,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/TestProgramService.html":{}}}],["execute(command",{"_index":312,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executes",{"_index":314,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executing",{"_index":997,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["execution",{"_index":320,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["express",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["external",{"_index":984,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["extract",{"_index":411,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["factory",{"_index":487,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["feature",{"_index":224,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{}}}],["field",{"_index":439,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["fields",{"_index":90,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["filter",{"_index":79,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["filterquery",{"_index":75,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find",{"_index":53,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find(filterquery",{"_index":74,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findall",{"_index":122,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["findbyid",{"_index":123,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["findbyid(@param(\"id",{"_index":164,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["findbyid(@param('id",{"_index":612,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["findbyid(id",{"_index":134,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/TeacherService.html":{}}}],["finding",{"_index":908,"title":{},"body":{"controllers/TeacherController.html":{}}}],["findone",{"_index":54,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findone(filterquery",{"_index":83,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["forrootasync",{"_index":480,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["found",{"_index":82,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["framework",{"_index":1117,"title":{},"body":{"index.html":{}}}],["function",{"_index":488,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":866,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["functions",{"_index":1105,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":823,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["get(\":id",{"_index":163,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["get(':id",{"_index":135,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["getapplications",{"_index":967,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["gethello",{"_index":884,"title":{},"body":{"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{}}}],["getmeetingresults(@payload",{"_index":855,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["getmeetings",{"_index":909,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getmeetings(@payload",{"_index":935,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getmeetings(data",{"_index":917,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications",{"_index":910,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications(@payload",{"_index":934,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getnotifications(data",{"_index":919,"title":{},"body":{"controllers/TeacherController.html":{}}}],["getting",{"_index":1113,"title":{"index.html":{}},"body":{}}],["give",{"_index":791,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["given",{"_index":217,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{}}}],["graph",{"_index":1167,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1143,"title":{},"body":{"index.html":{}}}],["handle",{"_index":228,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handle(event",{"_index":662,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handled",{"_index":399,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handler",{"_index":325,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["handlers",{"_index":419,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["handles",{"_index":388,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{}}}],["handling",{"_index":223,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["hello",{"_index":735,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudyProgramService.html":{}}}],["here",{"_index":1153,"title":{},"body":{"index.html":{}}}],["http",{"_index":696,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["https://nestjs.com",{"_index":1160,"title":{},"body":{"index.html":{}}}],["icommand",{"_index":294,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{}}}],["icommandhandler",{"_index":304,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["identifier",{"_index":36,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["ievent",{"_index":722,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["ieventhandler",{"_index":657,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["implements",{"_index":293,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["importing",{"_index":622,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["imports",{"_index":189,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["included",{"_index":992,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":409,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["indicating",{"_index":515,"title":{},"body":{"controllers/MeetingController.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["information",{"_index":779,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["inherited",{"_index":240,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["inherits",{"_index":684,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["initializes",{"_index":349,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["inject",{"_index":494,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject('rabbitmq_client",{"_index":812,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"overview.html":{}}}],["injected",{"_index":632,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel",{"_index":246,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel(meeting.name",{"_index":576,"title":{},"body":{"injectables/MeetingService.html":{}}}],["injectmodel(potentialclass.name",{"_index":257,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["injectmodel(potentialmodule.name",{"_index":639,"title":{},"body":{"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["injectmodel(potentialstudent.name",{"_index":751,"title":{},"body":{"injectables/PotentialStudentService.html":{},"injectables/StudentManagementService.html":{}}}],["injectmodel(potentialtest.name",{"_index":1008,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["injectmodel(teacher.name",{"_index":731,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TeacherService.html":{}}}],["injects",{"_index":496,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["installation",{"_index":1125,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1127,"title":{},"body":{"index.html":{}}}],["instance",{"_index":238,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["interact",{"_index":231,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/TestProgramService.html":{}}}],["interacting",{"_index":810,"title":{},"body":{"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{}}}],["interacts",{"_index":875,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["interface",{"_index":378,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":839,"title":{},"body":{"interfaces/RmqModuleOptions.html":{}}}],["isarray",{"_index":1081,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isarray()@isstring({each",{"_index":1072,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isdate",{"_index":274,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialStudentDto.html":{}}}],["isemail",{"_index":428,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["isglobal",{"_index":211,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["ismongoid",{"_index":287,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["ismongoid()@isstring()@isnotempty",{"_index":280,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isnumber",{"_index":1082,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isnumber()@isnotempty",{"_index":1075,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isphonenumber",{"_index":434,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["isstring",{"_index":289,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isstring()@isnotempty",{"_index":336,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{}}}],["it's",{"_index":787,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["join",{"_index":1149,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":1157,"title":{},"body":{"index.html":{}}}],["last",{"_index":593,"title":{},"body":{"injectables/MeetingService.html":{}}}],["lastvaluefrom",{"_index":808,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["lastvaluefrom(this.clientproxy.emit(queue",{"_index":813,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["legend",{"_index":174,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":48,"title":{},"body":{"injectables/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":65,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:25",{"_index":84,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:40",{"_index":76,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:50",{"_index":88,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:59",{"_index":71,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:6",{"_index":59,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:19",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":474,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts",{"_index":817,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts:31",{"_index":821,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts",{"_index":794,"title":{},"body":{"injectables/RabbitmqService.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:11",{"_index":798,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:31",{"_index":802,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["license",{"_index":1163,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1140,"title":{},"body":{"index.html":{}}}],["list",{"_index":571,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{}}}],["load",{"_index":207,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["log",{"_index":408,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["logic",{"_index":230,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["logs",{"_index":922,"title":{},"body":{"controllers/TeacherController.html":{}}}],["made",{"_index":668,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["management",{"_index":119,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"injectables/TeacherService.html":{}}}],["management.controller",{"_index":199,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.controller.ts",{"_index":117,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:111",{"_index":602,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:114",{"_index":132,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:23",{"_index":844,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["management.controller.ts:27",{"_index":601,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:30",{"_index":127,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:49",{"_index":603,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:52",{"_index":133,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:66",{"_index":604,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:69",{"_index":136,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:84",{"_index":606,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:87",{"_index":140,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.module.ts",{"_index":188,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.repository",{"_index":200,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{}}}],["management.repository.ts",{"_index":234,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["management.repository.ts:11",{"_index":236,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["management.repository.ts:12",{"_index":631,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["management.repository.ts:14",{"_index":869,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["management.service",{"_index":144,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.service.ts",{"_index":249,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management.service.ts:13",{"_index":251,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:25",{"_index":252,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:34",{"_index":254,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:36",{"_index":636,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:44",{"_index":255,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:46",{"_index":637,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:55",{"_index":256,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management.service.ts:57",{"_index":638,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:70",{"_index":635,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["management.service.ts:71",{"_index":253,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["management/.env",{"_index":214,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{}}}],["management/src/class",{"_index":116,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{}}}],["management/src/commands/create",{"_index":291,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["management/src/constants/service.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/constants/services.ts",{"_index":1033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/dto/createpotentialclassdto.ts",{"_index":335,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"coverage.html":{}}}],["management/src/dto/createpotentialclassdto.ts:15",{"_index":337,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["management/src/dto/createpotentialclassdto.ts:20",{"_index":340,"title":{},"body":{"classes/CreatePotentialClassDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts",{"_index":369,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"coverage.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:16",{"_index":371,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:21",{"_index":372,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/createpotentialmoduledto.ts:26",{"_index":370,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{}}}],["management/src/dto/updatepotentialclassdto.ts",{"_index":1015,"title":{},"body":{"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["management/src/dto/updatepotentialmoduledto.ts",{"_index":1017,"title":{},"body":{"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["management/src/event/potentialclass",{"_index":649,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialmodule",{"_index":675,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialstudent",{"_index":721,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/main.ts",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["management/src/meeting/dto/create",{"_index":265,"title":{},"body":{"classes/CreateMeetingDto.html":{},"coverage.html":{}}}],["management/src/meeting/dto/update",{"_index":1011,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.controller.ts",{"_index":510,"title":{},"body":{"controllers/MeetingController.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.controller.ts:17",{"_index":513,"title":{},"body":{"controllers/MeetingController.html":{}}}],["management/src/meeting/meeting.controller.ts:30",{"_index":519,"title":{},"body":{"controllers/MeetingController.html":{}}}],["management/src/meeting/meeting.module.ts",{"_index":537,"title":{},"body":{"modules/MeetingModule.html":{}}}],["management/src/meeting/meeting.service.ts",{"_index":556,"title":{},"body":{"injectables/MeetingService.html":{},"coverage.html":{}}}],["management/src/meeting/meeting.service.ts:11",{"_index":561,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:26",{"_index":563,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:50",{"_index":570,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:59",{"_index":572,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:70",{"_index":574,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/meeting/meeting.service.ts:84",{"_index":568,"title":{},"body":{"injectables/MeetingService.html":{}}}],["management/src/module",{"_index":599,"title":{},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{}}}],["management/src/potentialstudent/dto/create",{"_index":421,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"coverage.html":{}}}],["management/src/potentialstudent/dto/update",{"_index":1019,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts",{"_index":694,"title":{},"body":{"controllers/PotentialStudentController.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:19",{"_index":699,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:38",{"_index":703,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:54",{"_index":705,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:71",{"_index":707,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.controller.ts:94",{"_index":701,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["management/src/potentialstudent/potentialstudent.module.ts",{"_index":719,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts",{"_index":742,"title":{},"body":{"injectables/PotentialStudentService.html":{},"coverage.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:12",{"_index":744,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:23",{"_index":746,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:31",{"_index":748,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:40",{"_index":749,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:50",{"_index":750,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/potentialstudent/potentialstudent.service.ts:59",{"_index":747,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["management/src/schemas/meeting.schema.ts",{"_index":497,"title":{},"body":{"classes/Meeting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/meeting.schema.ts:12",{"_index":502,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:15",{"_index":503,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:18",{"_index":501,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/meeting.schema.ts:21",{"_index":500,"title":{},"body":{"classes/Meeting.html":{}}}],["management/src/schemas/potentialclass.schema",{"_index":373,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialclass.schema.ts",{"_index":645,"title":{},"body":{"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialclass.schema.ts:14",{"_index":646,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialclass.schema.ts:20",{"_index":647,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialmodule.schema.ts",{"_index":670,"title":{},"body":{"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:15",{"_index":672,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:21",{"_index":673,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:27",{"_index":671,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialstudent.schema",{"_index":342,"title":{},"body":{"classes/CreatePotentialClassDto.html":{},"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialstudent.schema.ts",{"_index":683,"title":{},"body":{"classes/PotentialStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:16",{"_index":689,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:23",{"_index":691,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:30",{"_index":690,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:37",{"_index":686,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:40",{"_index":685,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/teacher.schema",{"_index":374,"title":{},"body":{"classes/CreatePotentialModuleDto.html":{},"classes/PotentialModule.html":{}}}],["management/src/schemas/teacher.schema.ts",{"_index":898,"title":{},"body":{"classes/Teacher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/teacher.schema.ts:16",{"_index":899,"title":{},"body":{"classes/Teacher.html":{}}}],["management/src/student",{"_index":841,"title":{},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management/src/teacher/dto/create",{"_index":471,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/dto/update",{"_index":1022,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts",{"_index":905,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts:22",{"_index":912,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:36",{"_index":914,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:47",{"_index":921,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:52",{"_index":918,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.module",{"_index":989,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["management/src/teacher/teacher.module.ts",{"_index":939,"title":{},"body":{"modules/TeacherModule.html":{}}}],["management/src/teacher/teacher.repository.ts",{"_index":945,"title":{},"body":{"injectables/TeacherRepository.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.repository.ts:14",{"_index":947,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["management/src/teacher/teacher.service.ts",{"_index":949,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.service.ts:15",{"_index":951,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:28",{"_index":952,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:32",{"_index":954,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:36",{"_index":955,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:40",{"_index":953,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:44",{"_index":957,"title":{},"body":{"injectables/TeacherService.html":{}}}],["manager",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":120,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["match",{"_index":589,"title":{},"body":{"injectables/MeetingService.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["meeting",{"_index":268,"title":{"classes/Meeting.html":{}},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["meeting.controller",{"_index":543,"title":{},"body":{"modules/MeetingModule.html":{}}}],["meeting.dto",{"_index":524,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{}}}],["meeting.dto.ts",{"_index":266,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["meeting.dto.ts:15",{"_index":281,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:23",{"_index":284,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:29",{"_index":278,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.dto.ts:35",{"_index":275,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["meeting.endtime",{"_index":583,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.name",{"_index":551,"title":{},"body":{"modules/MeetingModule.html":{}}}],["meeting.service",{"_index":523,"title":{},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{}}}],["meeting.starttime",{"_index":582,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.student",{"_index":580,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.teacher",{"_index":581,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting/meeting.module",{"_index":864,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["meetingcontroller",{"_index":509,"title":{"controllers/MeetingController.html":{}},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"coverage.html":{}}}],["meetingmodule",{"_index":533,"title":{"modules/MeetingModule.html":{}},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["meetingrepository",{"_index":562,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meetings",{"_index":511,"title":{},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["meetingschema",{"_index":507,"title":{},"body":{"classes/Meeting.html":{},"modules/MeetingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meetingservice",{"_index":522,"title":{"injectables/MeetingService.html":{}},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"coverage.html":{},"overview.html":{}}}],["merge",{"_index":414,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["merging",{"_index":330,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["message",{"_index":156,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TeacherController.html":{}}}],["messagepattern",{"_index":927,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messagepattern('meeting_notifications",{"_index":854,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["messagepattern('teacher_notifications",{"_index":920,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messages",{"_index":780,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["metadata",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":396,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{}}}],["methods",{"_index":49,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["microservice",{"_index":811,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["minutes",{"_index":764,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["miscellaneous",{"_index":1104,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1139,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1131,"title":{},"body":{"index.html":{}}}],["model",{"_index":58,"title":{},"body":{"injectables/AbstractRepository.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["module",{"_index":170,"title":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["modulemanagement",{"_index":364,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["modulemanagementcontroller",{"_index":598,"title":{"controllers/ModuleManagementController.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["modulemanagementmodule",{"_index":616,"title":{"modules/ModuleManagementModule.html":{}},"body":{"modules/ModuleManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["modulemanagementrepository",{"_index":620,"title":{"injectables/ModuleManagementRepository.html":{}},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modulemanagementservice",{"_index":354,"title":{"injectables/ModuleManagementService.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":478,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodb_uri",{"_index":491,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":42,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["mongoosemodule",{"_index":193,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature",{"_index":225,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":868,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":483,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":1152,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":77,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["myśliwiec",{"_index":1158,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":667,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["necessary",{"_index":316,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/MeetingModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["needed",{"_index":592,"title":{},"body":{"injectables/MeetingService.html":{}}}],["negative",{"_index":590,"title":{},"body":{"injectables/MeetingService.html":{}}}],["nest",{"_index":621,"title":{},"body":{"modules/ModuleManagementModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nest.js",{"_index":1112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestframework",{"_index":1162,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":93,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":195,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1013,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":807,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["node.js",{"_index":1116,"title":{},"body":{"index.html":{}}}],["non",{"_index":440,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{}}}],["notfoundexception",{"_index":92,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":107,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notification",{"_index":565,"title":{},"body":{"injectables/MeetingService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["notifications",{"_index":661,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["npm",{"_index":1126,"title":{},"body":{"index.html":{}}}],["number",{"_index":437,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"controllers/MeetingController.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["object",{"_index":299,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{}}}],["objectid",{"_index":39,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["objects",{"_index":916,"title":{},"body":{"controllers/TeacherController.html":{}}}],["open",{"_index":1141,"title":{},"body":{"index.html":{}}}],["operation",{"_index":1006,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["operations",{"_index":317,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":829,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["out",{"_index":187,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["over",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1169,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":995,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/TestProgramRepository.html":{}}}],["packages",{"_index":985,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["param('id",{"_index":166,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":999,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["partial",{"_index":87,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["partialtype",{"_index":1012,"title":{},"body":{"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["partialtype(createmeetingdto",{"_index":1014,"title":{},"body":{"classes/UpdateMeetingDto.html":{}}}],["partialtype(createpotentialclassdto",{"_index":1016,"title":{},"body":{"classes/UpdatePotentialClassDto.html":{}}}],["partialtype(createpotentialmoduledto",{"_index":1018,"title":{},"body":{"classes/UpdatePotentialModuleDto.html":{}}}],["partialtype(createpotentialstudentdto",{"_index":1021,"title":{},"body":{"classes/UpdatePotentialStudentDto.html":{}}}],["partialtype(createteacherdto",{"_index":1023,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["pass",{"_index":874,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["passed",{"_index":871,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{}}}],["passing",{"_index":790,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["patch",{"_index":521,"title":{},"body":{"controllers/MeetingController.html":{}}}],["patch(':id",{"_index":518,"title":{},"body":{"controllers/MeetingController.html":{}}}],["pattern",{"_index":933,"title":{},"body":{"controllers/TeacherController.html":{}}}],["patterns",{"_index":928,"title":{},"body":{"controllers/TeacherController.html":{}}}],["payload",{"_index":924,"title":{},"body":{"controllers/TeacherController.html":{}}}],["perform",{"_index":876,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["performs",{"_index":315,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["phone",{"_index":436,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["phonenumber",{"_index":425,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialStudent.html":{}}}],["placeholder",{"_index":591,"title":{},"body":{"injectables/MeetingService.html":{}}}],["please",{"_index":1150,"title":{},"body":{"index.html":{}}}],["post",{"_index":126,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["potential",{"_index":121,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialclass",{"_index":152,"title":{"classes/PotentialClass.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialclass.command",{"_index":203,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts",{"_index":303,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["potentialclass.command.handler.ts:11",{"_index":308,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts:27",{"_index":313,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.ts",{"_index":292,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"coverage.html":{}}}],["potentialclass.command.ts:12",{"_index":300,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.command.ts:7",{"_index":297,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.name",{"_index":226,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["potentialclassregisteredevent",{"_index":204,"title":{"classes/PotentialClassRegisteredEvent.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassregisteredevent(potentialclass",{"_index":329,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclassregisteredeventhandler",{"_index":655,"title":{"classes/PotentialClassRegisteredEventHandler.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassschema",{"_index":197,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialclassservice",{"_index":149,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["potentialmodule",{"_index":361,"title":{"classes/PotentialModule.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule.command",{"_index":357,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["potentialmodule.command.handler.ts",{"_index":353,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["potentialmodule.command.handler.ts:10",{"_index":355,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.handler.ts:22",{"_index":356,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.ts",{"_index":345,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"coverage.html":{}}}],["potentialmodule.command.ts:12",{"_index":350,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.command.ts:7",{"_index":348,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.name",{"_index":626,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["potentialmoduleregisteredevent",{"_index":358,"title":{"classes/PotentialModuleRegisteredEvent.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleregisteredevent(potentialmodule",{"_index":365,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmoduleregisteredeventhandler",{"_index":677,"title":{"classes/PotentialModuleRegisteredEventHandler.html":{}},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleschema",{"_index":624,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmoduleservice",{"_index":609,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["potentialstudent",{"_index":339,"title":{"classes/PotentialStudent.html":{}},"body":{"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["potentialstudent.command",{"_index":402,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.command.handler.ts",{"_index":387,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["potentialstudent.command.handler.ts:12",{"_index":393,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.handler.ts:28",{"_index":395,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.ts",{"_index":377,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"coverage.html":{}}}],["potentialstudent.command.ts:15",{"_index":383,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.command.ts:9",{"_index":381,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.controller",{"_index":720,"title":{},"body":{"modules/PotentialStudentModule.html":{}}}],["potentialstudent.dto",{"_index":385,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"classes/UpdatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts",{"_index":422,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["potentialstudent.dto.ts:15",{"_index":429,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:23",{"_index":438,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:30",{"_index":435,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:33",{"_index":427,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:8",{"_index":433,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["potentialstudent.name",{"_index":553,"title":{},"body":{"modules/MeetingModule.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{}}}],["potentialstudent.schema",{"_index":505,"title":{},"body":{"classes/Meeting.html":{}}}],["potentialstudent.service",{"_index":708,"title":{},"body":{"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{}}}],["potentialstudent/create",{"_index":376,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["potentialstudent/dto/create",{"_index":384,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent/potentialstudent.module",{"_index":865,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent/potentialstudent.service",{"_index":404,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentcontroller",{"_index":693,"title":{"controllers/PotentialStudentController.html":{}},"body":{"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"coverage.html":{}}}],["potentialstudentmodule",{"_index":715,"title":{"modules/PotentialStudentModule.html":{}},"body":{"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["potentialstudentregisteredevent",{"_index":398,"title":{"classes/PotentialStudentRegisteredEvent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent(potentialstudent",{"_index":413,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentregisteredeventhandler",{"_index":726,"title":{"classes/PotentialStudentRegisteredEventHandler.html":{}},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentrepository",{"_index":745,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["potentialstudents",{"_index":695,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["potentialstudentschema",{"_index":545,"title":{},"body":{"modules/MeetingModule.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialstudentservice",{"_index":392,"title":{"injectables/PotentialStudentService.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"coverage.html":{},"overview.html":{}}}],["potentialtest",{"_index":466,"title":{"classes/PotentialTest.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest.command",{"_index":460,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.command.handler",{"_index":988,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtest.command.handler.ts",{"_index":455,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["potentialtest.command.handler.ts:10",{"_index":458,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.handler.ts:27",{"_index":459,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.ts",{"_index":445,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"coverage.html":{}}}],["potentialtest.command.ts:12",{"_index":451,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.command.ts:7",{"_index":449,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.dto",{"_index":453,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.dto.ts",{"_index":1066,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:13",{"_index":1078,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:20",{"_index":1079,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:27",{"_index":1076,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:34",{"_index":1077,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:42",{"_index":1080,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:50",{"_index":1074,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.name",{"_index":991,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtestregisteredevent",{"_index":461,"title":{"classes/PotentialTestRegisteredEvent.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialtestregisteredevent(potentialtest",{"_index":468,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtestregisteredeventhandler",{"_index":777,"title":{"classes/PotentialTestRegisteredEventHandler.html":{}},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["potentialtestschema",{"_index":772,"title":{},"body":{"classes/PotentialTest.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":118,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["private",{"_index":148,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["process",{"_index":782,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["processes",{"_index":732,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["production",{"_index":1133,"title":{},"body":{"index.html":{}}}],["program",{"_index":883,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["program.controller",{"_index":894,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.controller.ts",{"_index":882,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["program.controller.ts:24",{"_index":971,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:34",{"_index":969,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:44",{"_index":972,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:9",{"_index":885,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["program.module.ts",{"_index":893,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.repository",{"_index":463,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{}}}],["program.repository.ts",{"_index":994,"title":{},"body":{"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["program.repository.ts:14",{"_index":996,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["program.service",{"_index":887,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["program.service.ts",{"_index":895,"title":{},"body":{"injectables/StudyProgramService.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["program.service.ts:12",{"_index":1004,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:27",{"_index":1007,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:36",{"_index":1005,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:5",{"_index":896,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["program/.env",{"_index":990,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["program/src/commands/create",{"_index":444,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["program/src/constants/services.ts",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/dto/create",{"_index":1065,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["program/src/events/potentialtest",{"_index":774,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["program/src/main.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["program/src/schemas/potentialtest.schema.ts",{"_index":757,"title":{},"body":{"classes/PotentialTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/potentialtest.schema.ts:13",{"_index":768,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:19",{"_index":769,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:25",{"_index":763,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:31",{"_index":765,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:37",{"_index":770,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:43",{"_index":762,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/teacher.schema.ts",{"_index":902,"title":{},"body":{"classes/Teacher-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/teacher.schema.ts:13",{"_index":903,"title":{},"body":{"classes/Teacher-1.html":{}}}],["program/src/study",{"_index":881,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{}}}],["program/src/test",{"_index":964,"title":{},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["programs",{"_index":465,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["progressive",{"_index":1115,"title":{},"body":{"index.html":{}}}],["project",{"_index":1142,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({required",{"_index":499,"title":{},"body":{"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({type",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/createPotentialTestDto.html":{},"properties.html":{}}}],["property",{"_index":34,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{}}}],["provide",{"_index":227,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{}}}],["provided",{"_index":629,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["providers",{"_index":177,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["provides",{"_index":541,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["proxy",{"_index":800,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["public",{"_index":295,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["publish",{"_index":366,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publisher",{"_index":309,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publishes",{"_index":389,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["publishing",{"_index":310,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["put",{"_index":142,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["put(':id",{"_index":139,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["query",{"_index":80,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["questions",{"_index":761,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["queue",{"_index":804,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq",{"_index":216,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/MeetingService.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["rabbitmq.service",{"_index":827,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq_client",{"_index":834,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmqservice",{"_index":560,"title":{"injectables/RabbitmqService.html":{}},"body":{"injectables/MeetingService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1151,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":96,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["received",{"_index":923,"title":{},"body":{"controllers/TeacherController.html":{}}}],["receives",{"_index":845,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["reflect",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":215,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["register(undefined",{"_index":819,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":832,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registered",{"_index":418,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event",{"_index":206,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler",{"_index":987,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["registered.event.handler.ts",{"_index":656,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["registered.event.handler.ts:12",{"_index":679,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:13",{"_index":659,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:14",{"_index":728,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:23",{"_index":680,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:24",{"_index":729,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:28",{"_index":663,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:30",{"_index":781,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.ts",{"_index":650,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"coverage.html":{}}}],["registered.event.ts:11",{"_index":776,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:12",{"_index":653,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:14",{"_index":725,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registered.event.ts:6",{"_index":775,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:7",{"_index":651,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:9",{"_index":724,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registers",{"_index":830,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registration",{"_index":676,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["related",{"_index":554,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["repositories",{"_index":993,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["repository",{"_index":323,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["represented",{"_index":38,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["representing",{"_index":400,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":430,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["request",{"_index":846,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["requests",{"_index":697,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["required",{"_index":382,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{}}}],["reset",{"_index":186,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["resolved",{"_index":594,"title":{},"body":{"injectables/MeetingService.html":{}}}],["resolves",{"_index":318,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["response",{"_index":913,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsible",{"_index":456,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["result",{"_index":319,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/TestProgramService.html":{}}}],["results",{"_index":43,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":778,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["retrieved",{"_index":573,"title":{},"body":{"injectables/MeetingService.html":{}}}],["retrieves",{"_index":489,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramService.html":{}}}],["retrieving",{"_index":704,"title":{},"body":{"controllers/PotentialStudentController.html":{},"controllers/TestProgramController.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["rmqmodule",{"_index":183,"title":{"modules/RmqModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":219,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["rmqmodule.register({name",{"_index":867,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["rmqmoduleoptions",{"_index":820,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["run",{"_index":1129,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":809,"title":{},"body":{"injectables/RabbitmqService.html":{},"dependencies.html":{}}}],["saved",{"_index":363,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["saves",{"_index":397,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["saving",{"_index":326,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["scalable",{"_index":1120,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":516,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"classes/Meeting.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":504,"title":{},"body":{"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["schemafactory.createforclass(meeting",{"_index":508,"title":{},"body":{"classes/Meeting.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialclass",{"_index":648,"title":{},"body":{"classes/PotentialClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialmodule",{"_index":674,"title":{},"body":{"classes/PotentialModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialstudent",{"_index":692,"title":{},"body":{"classes/PotentialStudent.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialtest",{"_index":773,"title":{},"body":{"classes/PotentialTest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teacher",{"_index":900,"title":{},"body":{"classes/Teacher.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":550,"title":{},"body":{"modules/MeetingModule.html":{},"modules/TestProgramModule.html":{}}}],["schemas/meeting.schema",{"_index":544,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["schemas/potentialclass.schema",{"_index":198,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["schemas/potentialmodule.schema",{"_index":625,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["schemas/potentialstudent.schema",{"_index":546,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{}}}],["schemas/potentialtest.schema",{"_index":986,"title":{},"body":{"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["schemas/teacher.schema",{"_index":548,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{}}}],["schematypes",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":40,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["send",{"_index":666,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["sending",{"_index":660,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["sendmessage",{"_index":795,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sendmessage(queue",{"_index":801,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sends",{"_index":564,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/RabbitmqService.html":{}}}],["sent",{"_index":805,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["server",{"_index":1121,"title":{},"body":{"index.html":{}}}],["service",{"_index":218,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/PotentialStudentModule.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":542,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["side",{"_index":1122,"title":{},"body":{"index.html":{}}}],["single",{"_index":85,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["specified",{"_index":137,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"modules/MeetingModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["specifies",{"_index":940,"title":{},"body":{"modules/TeacherModule.html":{}}}],["specify",{"_index":944,"title":{},"body":{"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["sponsors",{"_index":1145,"title":{},"body":{"index.html":{}}}],["start",{"_index":279,"title":{},"body":{"classes/CreateMeetingDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":1132,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1134,"title":{},"body":{"index.html":{}}}],["started",{"_index":1114,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1124,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":270,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/Meeting.html":{}}}],["statements",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":818,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["status",{"_index":154,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/MeetingController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{},"controllers/TeacherController.html":{}}}],["stay",{"_index":1154,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":282,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/Meeting.html":{},"injectables/MeetingService.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"modules/PotentialStudentModule.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"classes/UpdatePotentialStudentDto.html":{}}}],["studentid",{"_index":271,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["studentmanagementcontroller",{"_index":840,"title":{"controllers/StudentManagementController.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["studentmanagementmodule",{"_index":857,"title":{"modules/StudentManagementModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["studentmanagementrepository",{"_index":406,"title":{"injectables/StudentManagementRepository.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["studentmanagementservice",{"_index":391,"title":{"injectables/StudentManagementService.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["studentrepository",{"_index":558,"title":{},"body":{"injectables/MeetingService.html":{}}}],["students",{"_index":539,"title":{},"body":{"modules/MeetingModule.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{}}}],["study",{"_index":426,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{}}}],["studyprogramcontroller",{"_index":879,"title":{"controllers/StudyProgramController.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"coverage.html":{}}}],["studyprogrammodule",{"_index":890,"title":{"modules/StudyProgramModule.html":{}},"body":{"modules/StudyProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["studyprogramservice",{"_index":886,"title":{"injectables/StudyProgramService.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":806,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["super",{"_index":654,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["super(applicationmodel",{"_index":248,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["support",{"_index":32,"title":{},"body":{"classes/AbstractDocument.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1165,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":1000,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["tdocument",{"_index":64,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["teacher",{"_index":285,"title":{"classes/Teacher.html":{},"classes/Teacher-1.html":{}},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacher.controller",{"_index":941,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":926,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":472,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:17",{"_index":473,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.name",{"_index":552,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["teacher.schema",{"_index":506,"title":{},"body":{"classes/Meeting.html":{}}}],["teacher.service",{"_index":925,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":863,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["teacher_notifications",{"_index":932,"title":{},"body":{"controllers/TeacherController.html":{}}}],["teachercontroller",{"_index":904,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teacherid",{"_index":272,"title":{},"body":{"classes/CreateMeetingDto.html":{}}}],["teachermodule",{"_index":861,"title":{"modules/TeacherModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":559,"title":{"injectables/TeacherRepository.html":{}},"body":{"injectables/MeetingService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"coverage.html":{}}}],["teachers",{"_index":540,"title":{},"body":{"modules/MeetingModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["teacherschema",{"_index":547,"title":{},"body":{"modules/MeetingModule.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacherservice",{"_index":915,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":446,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":1138,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1137,"title":{},"body":{"index.html":{}}}],["testprogramcontroller",{"_index":963,"title":{"controllers/TestProgramController.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["testprogrammodule",{"_index":980,"title":{"modules/TestProgramModule.html":{}},"body":{"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["testprogramrepository",{"_index":457,"title":{"injectables/TestProgramRepository.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["testprogramservice",{"_index":973,"title":{"injectables/TestProgramService.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":965,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["thanks",{"_index":1144,"title":{},"body":{"index.html":{}}}],["this.classmanagementrepository.create(createpotentialclassdto",{"_index":258,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.delete(id",{"_index":262,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.find",{"_index":259,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.findone",{"_index":260,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.update",{"_index":261,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementservice.create(createpotentialclassdto",{"_index":327,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.commandbus.execute(command",{"_index":853,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["this.meetingrepository.create(meeting",{"_index":586,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.delete(id",{"_index":597,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.find",{"_index":587,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.findone",{"_index":588,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingrepository.update(id",{"_index":596,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingservice.create(createmeetingdto",{"_index":528,"title":{},"body":{"controllers/MeetingController.html":{}}}],["this.meetingservice.update(id",{"_index":532,"title":{},"body":{"controllers/MeetingController.html":{}}}],["this.model(document",{"_index":100,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.find(filterquery).exec",{"_index":108,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidanddelete(id).exec",{"_index":111,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":109,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findone(filterquery).exec",{"_index":105,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.modulemanagementrepository.create",{"_index":640,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.delete(id",{"_index":644,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.find",{"_index":641,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.findone",{"_index":642,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.update",{"_index":643,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementservice.create(createpotentialmoduledto",{"_index":362,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.potentialclassservice.create",{"_index":153,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.delete(id",{"_index":169,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.findall",{"_index":161,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.findbyid(id",{"_index":165,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialclassservice.update",{"_index":167,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.potentialmoduleservice.create",{"_index":610,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.delete(id",{"_index":615,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.findall",{"_index":611,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.findbyid(id",{"_index":613,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialmoduleservice.update",{"_index":614,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.potentialstudentrepository.create(createpotentialstudentdto",{"_index":752,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.delete(id",{"_index":756,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.find",{"_index":753,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.findone",{"_index":754,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentrepository.update(id",{"_index":755,"title":{},"body":{"injectables/PotentialStudentService.html":{}}}],["this.potentialstudentservice.create(createpotentialstudentdto",{"_index":710,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.delete(id",{"_index":714,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.findall",{"_index":711,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.findbyid(id",{"_index":712,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.potentialstudentservice.update(id",{"_index":713,"title":{},"body":{"controllers/PotentialStudentController.html":{}}}],["this.publisher.mergeobjectcontext(classmanagement",{"_index":333,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(modulemanagement",{"_index":368,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(student",{"_index":416,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(test",{"_index":469,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.rabbitmqservice.sendmessage('meeting_notifications",{"_index":585,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.rabbitmqservice.sendmessage('student_notifications",{"_index":595,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.rabbitmqservice.sendmessage('study",{"_index":669,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["this.rabbitmqservice.sendmessage('teacher_notifications",{"_index":741,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.studentmanagementservice.create(createpotentialstudentdto",{"_index":412,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.studentrepository.findone",{"_index":577,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.studyprogramservice.gethello",{"_index":889,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["this.teacher.findone({}).exec()).toobject",{"_index":734,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.teacherrepository.create(createteacherdto",{"_index":958,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.delete(id",{"_index":961,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.find",{"_index":959,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.findone",{"_index":579,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.teacherrepository.findone({_id",{"_index":960,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.update(id",{"_index":962,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":930,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":931,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.testprogramrepository.create(createpotentialtestdto",{"_index":467,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.testprogramrepository.delete(id",{"_index":1010,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramrepository.find",{"_index":1009,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramservice.deleteapplicationbyid(id",{"_index":976,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["this.testprogramservice.getapplications",{"_index":979,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["throw",{"_index":106,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["throws",{"_index":103,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["time",{"_index":277,"title":{},"body":{"classes/CreateMeetingDto.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1155,"title":{},"body":{"index.html":{}}}],["track",{"_index":415,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["transfer",{"_index":298,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/UpdateTeacherDto.html":{}}}],["transport",{"_index":826,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":835,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["trigger",{"_index":417,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["triggered",{"_index":410,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["true",{"_index":212,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/Meeting.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TestProgramModule.html":{},"classes/createPotentialTestDto.html":{}}}],["true})@isnotempty({each",{"_index":1073,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["try",{"_index":151,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/PotentialStudentController.html":{}}}],["twitter",{"_index":1161,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"controllers/PotentialStudentController.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/PotentialStudentService.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["typescript",{"_index":1123,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/Meeting.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/createPotentialTestDto.html":{}}}],["unique",{"_index":35,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unit",{"_index":1135,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":130,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["unlicensed",{"_index":1176,"title":{},"body":{"properties.html":{}}}],["update",{"_index":55,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["update(@param('id",{"_index":531,"title":{},"body":{"controllers/MeetingController.html":{}}}],["update(id",{"_index":86,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["updated",{"_index":91,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updatemeetingdto",{"_index":517,"title":{"classes/UpdateMeetingDto.html":{}},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"classes/UpdateMeetingDto.html":{},"coverage.html":{}}}],["updatepotentialclassdto",{"_index":138,"title":{"classes/UpdatePotentialClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/UpdatePotentialClassDto.html":{},"coverage.html":{}}}],["updatepotentialmoduledto",{"_index":605,"title":{"classes/UpdatePotentialModuleDto.html":{}},"body":{"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/UpdatePotentialModuleDto.html":{},"coverage.html":{}}}],["updatepotentialstudentdto",{"_index":706,"title":{"classes/UpdatePotentialStudentDto.html":{}},"body":{"controllers/PotentialStudentController.html":{},"injectables/PotentialStudentService.html":{},"classes/UpdatePotentialStudentDto.html":{},"coverage.html":{}}}],["updates",{"_index":575,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/PotentialStudentService.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialModuleDto.html":{}}}],["updateteacherdto",{"_index":956,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["updating",{"_index":520,"title":{},"body":{"controllers/MeetingController.html":{},"controllers/PotentialStudentController.html":{},"classes/UpdateMeetingDto.html":{},"classes/UpdatePotentialClassDto.html":{},"classes/UpdatePotentialModuleDto.html":{},"classes/UpdatePotentialStudentDto.html":{},"classes/UpdateTeacherDto.html":{}}}],["uri",{"_index":490,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["urls",{"_index":836,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["used",{"_index":394,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["usefactory",{"_index":484,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["uses",{"_index":479,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["usevalue",{"_index":555,"title":{},"body":{"modules/MeetingModule.html":{}}}],["using",{"_index":367,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["valid",{"_index":432,"title":{},"body":{"classes/CreatePotentialStudentDto.html":{}}}],["validation",{"_index":687,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/CreateMeetingDto.html":{},"classes/CreatePotentialClassDto.html":{},"classes/CreatePotentialModuleDto.html":{},"classes/CreatePotentialStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["value",{"_index":492,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MeetingService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":486,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["variable",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1177,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1174,"title":{},"body":{"properties.html":{}}}],["via",{"_index":566,"title":{},"body":{"injectables/MeetingService.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["watch",{"_index":1130,"title":{},"body":{"index.html":{}}}],["website",{"_index":1159,"title":{},"body":{"index.html":{}}}],["work",{"_index":549,"title":{},"body":{"modules/MeetingModule.html":{}}}],["world",{"_index":897,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["you'd",{"_index":1148,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/MeetingModule.html":{},"modules/ModuleManagementModule.html":{},"modules/PotentialStudentModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Prop, Schema } from \"@nestjs/mongoose\";\nimport mongoose, { SchemaTypes, Types } from \"mongoose\";\n\n/**\n * @class AbstractDocument\n * @extends AggregateRoot\n * @description Base class for Mongoose schema with CQRS support.\n */\n@Schema()\nexport class AbstractDocument extends AggregateRoot {\n    /**\n     * @property {_id}\n     * @type {Types.ObjectId}\n     * @description Unique identifier for the document, represented by a Mongoose ObjectId.\n     */\n    @Prop({ type: SchemaTypes.ObjectId, default: () => new mongoose.Types.ObjectId()})\n    _id: Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractRepository.html":{"url":"injectables/AbstractRepository.html","title":"injectable - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:14\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:59\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:40\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:25\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:50\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractDocument } from './abstract.schema';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class AbstractRepository {\n  constructor(protected readonly model: Model) {}\n\n  /**\n   * Create a new document.\n   * @param document The document to create.\n   * @returns The created document.\n   */\n  async create(document: TDocument): Promise {\n    const createdDocument = new this.model(document);\n    return createdDocument.save();\n  }\n\n  /**\n   * Find a single document matching the filter query.\n   * @param filterQuery The filter query to find the document.\n   * @returns The found document.\n   * @throws NotFoundException if the document is not found.\n   */\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery).exec();\n\n    if (!document) {\n      throw new NotFoundException('Document not found');\n    }\n\n    return document;\n  }\n\n  /**\n   * Find multiple documents matching the filter query.\n   * @param filterQuery The filter query to find the documents.\n   * @returns An array of found documents.\n   */\n  async find(filterQuery: FilterQuery): Promise {\n    return this.model.find(filterQuery).exec();\n  }\n\n  /**\n   * Update a document by its ID.\n   * @param id The ID of the document to update.\n   * @param document The partial document containing the fields to update.\n   * @returns The updated document.\n   */\n  async update(id: string, document: Partial): Promise {\n    return this.model.findByIdAndUpdate(id, document).exec();\n  }\n\n  /**\n   * Delete a document by its ID.\n   * @param id The ID of the document to delete.\n   * @returns The deleted document.\n   */\n  async delete(id: string): Promise {\n    return this.model.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassManagementController.html":{"url":"controllers/ClassManagementController.html","title":"controller - ClassManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class-management\n            \n\n\n            \n                Description\n            \n            \n                Controller for managing potential classes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialClassDto: CreatePotentialClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:30\n                \n            \n\n\n            \n                \n                    Create a new potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialClassDto\n                                    \n                                                CreatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:114\n                \n            \n\n\n            \n                \n                    Delete a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:52\n                \n            \n\n\n            \n                \n                    Get all potential classes.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential classes.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:69\n                \n            \n\n\n            \n                \n                    Get a potential class by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential class with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialClassDto: UpdatePotentialClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:87\n                \n            \n\n\n            \n                \n                    Update a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                                \n                                    updatePotentialClassDto\n                                    \n                                                UpdatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential class.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ClassManagementService } from './class-management.service'\nimport { CreatePotentialClassDto } from './dto/CreatePotentialClassDto';\nimport { UpdatePotentialClassDto } from './dto/UpdatePotentialClassDto';\n\n/**\n * Controller for managing potential classes.\n */\n@Controller('class-management')\nexport class ClassManagementController {\n  constructor(\n    private readonly potentialClassService: ClassManagementService,\n  ) {}\n\n  /**\n   * Create a new potential class.\n   *\n   * @param createPotentialClassDto - The data for creating a potential class.\n   * @returns The created potential class.\n   */\n  @Post()\n  async create(@Body() createPotentialClassDto: CreatePotentialClassDto) {\n    try {\n      const potentialClass = await this.potentialClassService.create(\n        createPotentialClassDto,\n      );\n\n      return {\n        status: 201,\n        message: 'Created Potential Class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get all potential classes.\n   *\n   * @returns All potential classes.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const classes = await this.potentialClassService.findAll();\n\n      return { status: 200, data: { classes } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get a potential class by its ID.\n   *\n   * @param id - The ID of the potential class.\n   * @returns The potential class with the specified ID.\n   */\n  @Get(\":id\")\n  async findById(@Param(\"id\") id: string) {\n    try {\n      const classes = await this.potentialClassService.findById(id);\n\n      return { status: 200, data: { classes } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Update a potential class.\n   *\n   * @param id - The ID of the potential class.\n   * @param updatePotentialClassDto - The updated data for the potential class.\n   * @returns The updated potential class.\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialClassDto: UpdatePotentialClassDto,\n  ) {\n    try {\n      const potentialClass = await this.potentialClassService.update(\n        id,\n        updatePotentialClassDto,\n      );\n\n      return {\n        status: 200,\n        message: 'Updated Potential class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Delete a potential class.\n   *\n   * @param id - The ID of the potential class to delete.\n   * @returns The deleted potential class.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialClass = await this.potentialClassService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential class',\n        data: { potentialClass },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassManagementModule.html":{"url":"modules/ClassManagementModule.html","title":"module - ClassManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/class-management/src/class-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing potential classes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassManagementRepository\n                        \n                        \n                            ClassManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialClass, PotentialClassSchema } from './schemas/potentialClass.schema';\nimport { ClassManagementController } from './class-management.controller';\nimport { ClassManagementService } from './class-management.service';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\nimport { PotentialClassRegisteredEvent } from './event/potentialClass-registered.event';\n\n/**\n * Module for managing potential classes.\n */\n@Module({\n  imports: [\n    // Load configuration from .env file\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/class-management/.env'\n    }),\n\n    // Register RabbitMQ module with the given service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import the DatabaseModule for database connection\n    DatabaseModule,\n\n    // Import the CqrsModule for Command/Event handling\n    CqrsModule,\n\n    // Register the PotentialClass model as a Mongoose feature\n    MongooseModule.forFeature([{ name: PotentialClass.name, schema: PotentialClassSchema }])\n  ],\n  controllers: [ClassManagementController],\n  providers: [\n    // Provide the ClassManagementService to handle business logic\n    ClassManagementService,\n\n    // Provide the ClassManagementRepository to interact with the database\n    ClassManagementRepository,\n\n    // Provide the PotentialClassRegisteredEvent for event handling\n    PotentialClassRegisteredEvent,\n\n    // Provide the CreatePotentialClassCommand for command handling\n    CreatePotentialClassCommand,\n  ],\n})\nexport class ClassManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementRepository.html":{"url":"injectables/ClassManagementRepository.html","title":"injectable - ClassManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for the PotentialClass schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialClass } from \"./schemas/potentialClass.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n@Injectable()\nexport class ClassManagementRepository extends AbstractRepository {\n    /**\n     * Constructs an instance of ClassManagementRepository.\n     * @param applicationModel The Mongoose model for the PotentialClass schema.\n     */\n    constructor(@InjectModel(PotentialClass.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementService.html":{"url":"injectables/ClassManagementService.html","title":"injectable - ClassManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing potential classes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ClassManagementRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ClassManagementRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialClassDto: CreatePotentialClassDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialClassDto\n                                    \n                                                CreatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:71\n                \n            \n\n\n            \n                \n                    Delete a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential class.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:34\n                \n            \n\n\n            \n                \n                    Get all potential classes.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential classes.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:44\n                \n            \n\n\n            \n                \n                    Get a potential class by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential class with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialClassDto: UpdatePotentialClassDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:55\n                \n            \n\n\n            \n                \n                    Update a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential class.\n\n\n                                    \n                                \n                                \n                                    updatePotentialClassDto\n                                    \n                                                UpdatePotentialClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential class.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential class.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from './schemas/potentialClass.schema';\nimport { AbstractRepository } from '@app/common';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassDto } from './dto/CreatePotentialClassDto';\nimport { UpdatePotentialClassDto } from './dto/UpdatePotentialClassDto';\n\n/**\n * Service for managing potential classes.\n */\n@Injectable()\nexport class ClassManagementService {\n  constructor(\n    @InjectModel(PotentialClass.name)\n    private readonly ClassManagementRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Create a new potential class.\n   *\n   * @param createPotentialClassDto - The data for creating a potential class.\n   * @returns The created potential class.\n   */\n  async create(createPotentialClassDto: CreatePotentialClassDto) {\n    return await this.ClassManagementRepository.create(createPotentialClassDto);\n  }\n\n  /**\n   * Get all potential classes.\n   *\n   * @returns All potential classes.\n   */\n  async findAll() {\n    return await this.ClassManagementRepository.find({});\n  }\n\n  /**\n   * Get a potential class by its ID.\n   *\n   * @param id - The ID of the potential class.\n   * @returns The potential class with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.ClassManagementRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Update a potential class.\n   *\n   * @param id - The ID of the potential class.\n   * @param updatePotentialClassDto - The updated data for the potential class.\n   * @returns The updated potential class.\n   */\n  async update(\n    id: string,\n    updatePotentialClassDto: UpdatePotentialClassDto,\n  ) {\n    return await this.ClassManagementRepository.update(\n      id,\n      updatePotentialClassDto,\n    );\n  }\n\n  /**\n   * Delete a potential class.\n   *\n   * @param id - The ID of the potential class to delete.\n   * @returns The deleted potential class.\n   */\n  async delete(id: string) {\n    return await this.ClassManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingDto.html":{"url":"classes/CreateMeetingDto.html","title":"class - CreateMeetingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/dto/create-meeting.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a meeting.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                    \n                                    \n                                studentId\n                            \n                            \n                                    \n                                    \n                                    \n                                teacherId\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:35\n                        \n                    \n\n            \n                \n                    End time of the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:29\n                        \n                    \n\n            \n                \n                    Start time of the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:15\n                        \n                    \n\n            \n                \n                    ID of the student associated with the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        teacherId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/meeting/dto/create-meeting.dto.ts:23\n                        \n                    \n\n            \n                \n                    ID of the teacher associated with the meeting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsDate, IsMongoId, IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO for creating a meeting.\n * Extends the AbstractDocument class.\n */\nexport class CreateMeetingDto extends AbstractDocument {\n  /**\n   * ID of the student associated with the meeting.\n   */\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  studentId: string;\n\n  /**\n   * ID of the teacher associated with the meeting.\n   */\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  teacherId: string;\n\n  /**\n   * Start time of the meeting.\n   */\n  @IsDate()\n  startTime: Date;\n\n  /**\n   * End time of the meeting.\n   */\n  @IsDate()\n  endTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommand.html":{"url":"classes/CreatePotentialClassCommand.html","title":"class - CreatePotentialClassCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: CreatePotentialClassDto)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        CreatePotentialClassDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) containing the data for creating the potential class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialClassDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) containing the data for creating the potential class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialClassDto } from '../dto/CreatePotentialClassDto';\n\nexport class CreatePotentialClassCommand implements ICommand {\n  /**\n   * Constructs an instance of CreatePotentialClassCommand.\n   * @param createPotentialClassDto The DTO (Data Transfer Object) containing the data for creating the potential class.\n   */\n  constructor(public readonly createPotentialClassDto: CreatePotentialClassDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommandHandler.html":{"url":"classes/CreatePotentialClassCommandHandler.html","title":"class - CreatePotentialClassCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, classManagementService: ClassManagementService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommandHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The event publisher for publishing events.\n\n                                                        \n                                                \n                                                \n                                                        classManagementService\n                                                  \n                                                        \n                                                                        ClassManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialClassCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the CreatePotentialClassCommand and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialClassCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialClassCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialClassCommand } from \"./create-potentialClass.command\";\nimport { ClassManagementRepository } from \"../class-management.repository\";\nimport { PotentialClassRegisteredEvent } from \"../event/potentialClass-registered.event\";\nimport { ClassManagementService } from \"../class-management.service\";\n\n@CommandHandler(CreatePotentialClassCommand)\nexport class CreatePotentialClassCommandHandler implements ICommandHandler {\n    /**\n     * Constructs an instance of CreatePotentialClassCommandHandler.\n     * @param publisher The event publisher for publishing events.\n     * @param classManagementRepository The repository for managing classes.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private classManagementService: ClassManagementService\n    ) {}\n\n    /**\n     * Executes the CreatePotentialClassCommand and performs the necessary operations.\n     * @param command The CreatePotentialClassCommand instance.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialClassCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialClassDto } = command;\n\n        // Saving potential class into the database\n        const potentialClass = await this.classManagementService.create(createPotentialClassDto);\n\n        // Creating a PotentialClassRegisteredEvent\n        const classManagement = new PotentialClassRegisteredEvent(potentialClass);\n\n        // Merging the event with the event context and committing it\n        const event = this.publisher.mergeObjectContext(classManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassDto.html":{"url":"classes/CreatePotentialClassDto.html","title":"class - CreatePotentialClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/CreatePotentialClassDto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/CreatePotentialClassDto.ts:15\n                        \n                    \n\n            \n                \n                    The name of the class to apply for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/CreatePotentialClassDto.ts:20\n                        \n                    \n\n            \n                \n                    The potential student applying for the class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { AbstractDocument } from \"@app/common\";\nimport { PotentialStudent } from \"apps/student-management/src/schemas/potentialStudent.schema\";\n\nexport class CreatePotentialClassDto extends AbstractDocument {\n    /**\n     * The name of the class to apply for.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The potential student applying for the class.\n     */\n    student: PotentialStudent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommand.html":{"url":"classes/CreatePotentialModuleCommand.html","title":"class - CreatePotentialModuleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command for creating a potential module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: CreatePotentialModuleDto)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the CreatePotentialModuleCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        CreatePotentialModuleDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating a potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialModuleDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating a potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialModuleDto } from '../dto/CreatePotentialModuleDto';\n\n/**\n * Command for creating a potential module.\n */\nexport class CreatePotentialModuleCommand implements ICommand {\n  /**\n   * Initializes a new instance of the CreatePotentialModuleCommand class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating a potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: CreatePotentialModuleDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommandHandler.html":{"url":"classes/CreatePotentialModuleCommandHandler.html","title":"class - CreatePotentialModuleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for creating potential modules.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, moduleManagementService: ModuleManagementService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleManagementService\n                                                  \n                                                        \n                                                                        ModuleManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialModuleCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:22\n                \n            \n\n\n            \n                \n                    Executes the create potential module command.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialModuleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The create potential module command.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialModuleCommand } from \"./create-potentialModule.command\";\nimport { PotentialModuleRegisteredEvent } from \"../events/potentialModule-registered.event\"\nimport { ModuleManagementService } from \"../module-management.service\";\n\n/**\n * Command handler for creating potential modules.\n */\n@CommandHandler(CreatePotentialModuleCommand)\nexport class CreatePotentialModuleCommandHandler implements ICommandHandler {\n\n    constructor(\n        private readonly publisher: EventPublisher,\n        private moduleManagementService: ModuleManagementService\n    ) {}\n\n    /**\n     * Executes the create potential module command.\n     * @param command The create potential module command.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialModuleCommand): Promise {\n        console.log(\"Triggered Command Handler\")\n\n        const { createPotentialModuleDto } = command;\n\n        // Saving potential module into the database\n        const potentialModule = await this.moduleManagementService.create(createPotentialModuleDto);\n        \n        // Create a PotentialModuleRegisteredEvent with the saved potential module\n        const moduleManagement = new PotentialModuleRegisteredEvent(potentialModule);\n\n        // Publish the event using the EventPublisher\n        const event = this.publisher.mergeObjectContext(moduleManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleDto.html":{"url":"classes/CreatePotentialModuleDto.html","title":"class - CreatePotentialModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/CreatePotentialModuleDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for applying a module.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:26\n                        \n                    \n\n            \n                \n                    Class associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:16\n                        \n                    \n\n            \n                \n                    Name of the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/CreatePotentialModuleDto.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { PotentialClass } from \"apps/class-management/src/schemas/potentialClass.schema\";\nimport { Teacher } from \"apps/student-management/src/schemas/teacher.schema\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO (Data Transfer Object) for applying a module.\n * Extends the AbstractDocument class.\n */\nexport class CreatePotentialModuleDto extends AbstractDocument {\n    /**\n     * Name of the module.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * Teacher associated with the module.\n     */\n    teacher: string;\n\n    /**\n     * Class associated with the module.\n     */\n    class: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommand.html":{"url":"classes/CreatePotentialStudentCommand.html","title":"class - CreatePotentialStudentCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential student.\nImplements the ICommand interface from the @nestjs/cqrs module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: CreatePotentialStudentDto)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        CreatePotentialStudentDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data required to create a potential student.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePotentialStudentDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:15\n                        \n                    \n\n            \n                \n                    - The data required to create a potential student.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { CreatePotentialStudentDto } from '../../potentialStudent/dto/create-potentialStudent.dto';\n\n/**\n * Command class for creating a potential student.\n * Implements the ICommand interface from the @nestjs/cqrs module.\n */\nexport class CreatePotentialStudentCommand implements ICommand {\n  /**\n   * Constructor for the CreatePotentialStudentCommand class.\n   * @param createPotentialStudentDto - The data required to create a potential student.\n   */\n  constructor(\n    public readonly createPotentialStudentDto: CreatePotentialStudentDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommandHandler.html":{"url":"classes/CreatePotentialStudentCommandHandler.html","title":"class - CreatePotentialStudentCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for CreatePotentialStudentCommand.\nThis class handles the command to create a potential student and publishes the corresponding event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, studentManagementService: PotentialStudentService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the CreatePotentialStudentCommandHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe EventPublisher instance used to publish events.\n\n\n                                                        \n                                                \n                                                \n                                                        studentManagementService\n                                                  \n                                                        \n                                                                        PotentialStudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialStudentCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:28\n                \n            \n\n\n            \n                \n                    Execute method that handles the CreatePotentialStudentCommand.\nIt saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialStudentCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe CreatePotentialStudentCommand to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialStudentCommand } from \"./create-potentialStudent.command\";\nimport { PotentialStudentRegisteredEvent } from \"../../events/potentialStudent-registered.event\";\nimport { PotentialStudentService } from \"../../potentialStudent/potentialStudent.service\";\n\n/**\n * Command handler for CreatePotentialStudentCommand.\n * This class handles the command to create a potential student and publishes the corresponding event.\n */\n@CommandHandler(CreatePotentialStudentCommand)\nexport class CreatePotentialStudentCommandHandler implements ICommandHandler {\n\n    /**\n     * Constructor for the CreatePotentialStudentCommandHandler class.\n     * @param publisher - The EventPublisher instance used to publish events.\n     * @param studentManagementRepository - The StudentManagementRepository instance used to access the database.\n     */\n    constructor(\n        private readonly publisher: EventPublisher, private studentManagementService: PotentialStudentService) {}\n\n    /**\n     * Execute method that handles the CreatePotentialStudentCommand.\n     * It saves the potential student data into the database and publishes the PotentialStudentRegisteredEvent.\n     * @param command - The CreatePotentialStudentCommand to be handled.\n     * @returns A Promise representing the completion of the execution.\n     */\n    async execute(command: CreatePotentialStudentCommand): Promise {\n        // Log a message to indicate that the command handler has been triggered\n        console.log(\"Triggered Command Handler\")\n\n        // Extract the createPotentialStudentDto from the command\n        const { createPotentialStudentDto } = command;\n\n        // Saving student into database\n        const potentialStudent = await this.studentManagementService.create(createPotentialStudentDto);\n        const student = new PotentialStudentRegisteredEvent(potentialStudent);\n\n        // Merge the event with the EventPublisher context to track its operations\n        const event = this.publisher.mergeObjectContext(student);\n\n        // Publish the event to trigger any registered event handlers for this event\n        event.publish(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentDto.html":{"url":"classes/CreatePotentialStudentDto.html","title":"class - CreatePotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:15\n                        \n                    \n\n            \n                \n                    The email property represents the email address of the potential student.\nIt must be a valid email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:30\n                        \n                    \n\n            \n                \n                    The phoneNumber property represents the phone number of the potential student.\nIt must be a valid phone number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts:23\n                        \n                    \n\n            \n                \n                    The study property represents the field of study of the potential student.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsDate, IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from \"class-validator\";\n\nexport class CreatePotentialStudentDto extends AbstractDocument {\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The email property represents the email address of the potential student.\n     * It must be a valid email address.\n     */\n    @IsEmail()\n    email: string;\n\n    /**\n     * The study property represents the field of study of the potential student.\n     * It must be a non-empty string.\n     */\n    @IsString()\n    @IsNotEmpty()\n    study: string;\n  \n    /**\n     * The phoneNumber property represents the phone number of the potential student.\n     * It must be a valid phone number.\n     */\n    @IsPhoneNumber()\n    phoneNumber: string;\n\n    @IsDate()\n    birthday: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommand.html":{"url":"classes/CreatePotentialTestCommand.html","title":"class - CreatePotentialTestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential test.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: createPotentialTestDto)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreatePotentialTestCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        createPotentialTestDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for creating a potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialTestDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for creating a potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { createPotentialTestDto } from \"../dto/create-potentialTest.dto\";\n\n/**\n * Command class for creating a potential test.\n */\nexport class CreatePotentialTestCommand implements ICommand {\n    /**\n     * Creates an instance of CreatePotentialTestCommand.\n     * @param createPotentialTestDto The DTO object containing the data for creating a potential test.\n     */\n    constructor(public readonly createPotentialTestDto: createPotentialTestDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommandHandler.html":{"url":"classes/CreatePotentialTestCommandHandler.html","title":"class - CreatePotentialTestCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler class responsible for handling the CreatePotentialTestCommand.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialTestCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the command handler logic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialTestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialTestCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the command execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialTestCommand } from \"./create-potentialTest.command\";\nimport { PotentialTestRegisteredEvent } from \"../events/potentialTest-registered.event\";\nimport { TestProgramRepository } from \"../test-program.repository\";\n\n/**\n * Command handler class responsible for handling the CreatePotentialTestCommand.\n */\n@CommandHandler(CreatePotentialTestCommand)\nexport class CreatePotentialTestCommandHandler implements ICommandHandler {\n    constructor(\n        /**\n         * The event publisher used to publish events.\n         */\n        private readonly publisher: EventPublisher,\n        /**\n         * The repository for managing test programs.\n         */\n        private testProgramRepository: TestProgramRepository\n    ) {}\n\n    /**\n     * Executes the command handler logic.\n     * @param command The CreatePotentialTestCommand instance.\n     * @returns A promise that resolves to the result of the command execution.\n     */\n    async execute(command: CreatePotentialTestCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialTestDto } = command;\n\n        // Saving the test into the database\n        const potentialTest = await this.testProgramRepository.create(createPotentialTestDto);\n        const test = new PotentialTestRegisteredEvent(potentialTest);\n\n        const event = this.publisher.mergeObjectContext(test);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/create-teacher.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) class for creating a teacher.\nExtends the AbstractDocument class from the \"@app/common\" module.\nThis class represents the data required to create a teacher.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/teacher/dto/create-teacher.dto.ts:17\n                        \n                    \n\n            \n                \n                    The name property represents the name of the teacher.\nIt must be a non-empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * Data Transfer Object (DTO) class for creating a teacher.\n * Extends the AbstractDocument class from the \"@app/common\" module.\n * This class represents the data required to create a teacher.\n */\nexport class CreateTeacherDto extends AbstractDocument {\n  /**\n   * The name property represents the name of the teacher.\n   * It must be a non-empty string.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Import necessary dependencies\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * @module DatabaseModule\n * @description Module for configuring the database connection using Mongoose.\n */\n@Module({\n  imports: [\n    /**\n     * @module MongooseModule\n     * @description Mongoose module for connecting to the MongoDB database.\n     * It uses the `forRootAsync` method to configure the connection asynchronously.\n     */\n    MongooseModule.forRootAsync({\n      /**\n       * @method useFactory\n       * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n       * @returns {Object} - The Mongoose connection configuration object.\n       * @description Factory function for creating the Mongoose connection configuration object.\n       * It retrieves the MongoDB URI from the `MONGODB_URI` configuration value using the ConfigService.\n       */\n      useFactory: (configService: ConfigService) => ({\n          uri: configService.get('MONGODB_URI')\n      }),\n      /**\n       * @property {Array} inject\n       * @description An array of dependencies to inject into the factory function.\n       * In this case, it injects the ConfigService.\n       */\n      inject: [ConfigService]\n    })\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Meeting.html":{"url":"classes/Meeting.html","title":"class - Meeting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Meeting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/meeting.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema for the Meeting collection.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: PotentialStudent})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Teacher})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/meeting.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from '@app/common';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PotentialStudent } from './potentialStudent.schema';\nimport { Teacher } from './teacher.schema';\n\n/**\n * Schema for the Meeting collection.\n */\n@Schema()\nexport class Meeting extends AbstractDocument {\n  @Prop({ required: true, type: PotentialStudent })\n  student: PotentialStudent;\n\n  @Prop({ required: true, type: Teacher })\n  teacher: Teacher;\n\n  @Prop({ required: true })\n  startTime: Date;\n\n  @Prop({ required: true })\n  endTime: Date;\n}\n\nexport const MeetingSchema = SchemaFactory.createForClass(Meeting);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingController.html":{"url":"controllers/MeetingController.html","title":"controller - MeetingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meetings\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMeetingDto: CreateMeetingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.controller.ts:17\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new meeting.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createMeetingDto\n                                    \n                                                CreateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating a meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: number; message: string; }\n\n                    \n                    \n                        Object containing the status and a message indicating the scheduled meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateMeetingDto: UpdateMeetingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.controller.ts:30\n                \n            \n\n\n            \n                \n                    Endpoint for updating a meeting.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to update.\n\n                                    \n                                \n                                \n                                    updateMeetingDto\n                                    \n                                                UpdateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for updating the meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: number; message: string; }\n\n                    \n                    \n                        Object containing the status and a message indicating the updated meeting.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Post, Put } from '@nestjs/common';\nimport { MeetingService } from './meeting.service';\nimport { CreateMeetingDto } from './dto/create-meeting.dto';\nimport { UpdateMeetingDto } from './dto/update-meeting.dto';\n\n@Controller('meetings')\nexport class MeetingController {\n  constructor(private readonly meetingService: MeetingService) {}\n\n  /**\n   * Endpoint for creating a new meeting.\n   * \n   * @param createMeetingDto The data for creating a meeting.\n   * @returns Object containing the status and a message indicating the scheduled meeting.\n   */\n  @Post()\n  create(@Body() createMeetingDto: CreateMeetingDto) {\n    this.meetingService.create(createMeetingDto);\n    return { status: 201, message: `Your meeting with teacher ${createMeetingDto.teacherId} is scheduled for ${createMeetingDto.startTime}.` };\n  }\n\n  /**\n   * Endpoint for updating a meeting.\n   * \n   * @param id The ID of the meeting to update.\n   * @param updateMeetingDto The data for updating the meeting.\n   * @returns Object containing the status and a message indicating the updated meeting.\n   */\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMeetingDto: UpdateMeetingDto) {\n    this.meetingService.update(id, updateMeetingDto);\n    return { status: 200, message: `Your meeting is updated` };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingModule.html":{"url":"modules/MeetingModule.html","title":"module - MeetingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_imports\n\n\n\ncluster_MeetingModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nRmqModule->MeetingModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The MeetingModule is responsible for managing meetings between potential students and teachers.\nIt provides the necessary controllers, services, and modules to handle meeting operations.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeetingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MeetingService } from './meeting.service';\nimport { MeetingController } from './meeting.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { APPLICATION_SERVICE } from '../constants/services';\nimport { AbstractRepository, RmqModule } from '@app/common';\nimport { Meeting, MeetingSchema } from '../schemas/meeting.schema';\nimport { PotentialStudent, PotentialStudentSchema } from '../schemas/potentialStudent.schema';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\n\n/**\n * The MeetingModule is responsible for managing meetings between potential students and teachers.\n * It provides the necessary controllers, services, and modules to handle meeting operations.\n */\n@Module({\n  imports: [\n    // Register the RmqModule with the specified service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Register the MongooseModule to work with the Meeting, Teacher, and PotentialStudent schemas\n    MongooseModule.forFeature([\n      { name: Meeting.name, schema: MeetingSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n      { name: PotentialStudent.name, schema: PotentialStudentSchema },\n    ]),\n  ],\n  controllers: [MeetingController],\n  providers: [\n    // Provide the MeetingService to handle meeting-related operations\n    MeetingService,\n\n    // Provide the AbstractRepository with the PotentialStudent model\n    { provide: AbstractRepository, useValue: { model: PotentialStudent } },\n  ],\n})\nexport class MeetingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingService.html":{"url":"injectables/MeetingService.html","title":"injectable - MeetingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/meeting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meetingRepository: AbstractRepository, studentRepository: AbstractRepository, teacherRepository: AbstractRepository, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/meeting/meeting.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meetingRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMeetingDto: CreateMeetingDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:26\n                \n            \n\n\n            \n                \n                    Creates a new meeting between a potential student and a teacher.\nSends a notification message via RabbitMQ.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createMeetingDto\n                                    \n                                                CreateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing meeting details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:84\n                \n            \n\n\n            \n                \n                    Deletes a meeting by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:50\n                \n            \n\n\n            \n                \n                    Retrieves all meetings.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A list of meetings.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:59\n                \n            \n\n\n            \n                \n                    Retrieves a meeting by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The retrieved meeting.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateMeetingDto: UpdateMeetingDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/meeting/meeting.service.ts:70\n                \n            \n\n\n            \n                \n                    Updates a meeting by its ID.\nSends a notification message via RabbitMQ.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the meeting to update.\n\n                                    \n                                \n                                \n                                    updateMeetingDto\n                                    \n                                                UpdateMeetingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing updated meeting details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated meeting.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { Meeting } from '../schemas/meeting.schema';\nimport { CreateMeetingDto } from './dto/create-meeting.dto';\nimport { UpdateMeetingDto } from './dto/update-meeting.dto';\nimport { PotentialStudent } from '../schemas/potentialStudent.schema';\nimport { Teacher } from '../schemas/teacher.schema';\n\n@Injectable()\nexport class MeetingService {\n  constructor(\n    @InjectModel(Meeting.name)\n    private readonly meetingRepository: AbstractRepository,\n    private readonly studentRepository: AbstractRepository,\n    private readonly teacherRepository: AbstractRepository,\n    private readonly rabbitmqService: RabbitmqService,\n  ) {}\n\n  /**\n   * Creates a new meeting between a potential student and a teacher.\n   * Sends a notification message via RabbitMQ.\n   * @param createMeetingDto The DTO containing meeting details.\n   * @returns The created meeting.\n   */\n  async create(createMeetingDto: CreateMeetingDto) {\n    const student = await this.studentRepository.findOne({\n      _id: createMeetingDto.studentId,\n    });\n    const teacher = await this.teacherRepository.findOne({\n      _id: createMeetingDto.teacherId,\n    });\n\n    const meeting = new Meeting();\n    meeting.student = student;\n    meeting.teacher = teacher;\n    meeting.startTime = createMeetingDto.startTime;\n    meeting.endTime = createMeetingDto.endTime;\n\n    const message = `A meeting with ${teacher.name} is scheduled for ${meeting.startTime}.`;\n    await this.rabbitmqService.sendMessage('meeting_notifications', message);\n\n    return await this.meetingRepository.create(meeting);\n  }\n\n  /**\n   * Retrieves all meetings.\n   * @returns A list of meetings.\n   */\n  async findAll() {\n    return await this.meetingRepository.find({});\n  }\n\n  /**\n   * Retrieves a meeting by its ID.\n   * @param id The ID of the meeting.\n   * @returns The retrieved meeting.\n   */\n  async findById(id: string) {\n    return await this.meetingRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Updates a meeting by its ID.\n   * Sends a notification message via RabbitMQ.\n   * @param id The ID of the meeting to update.\n   * @param updateMeetingDto The DTO containing updated meeting details.\n   * @returns The updated meeting.\n   */\n  async update(id: string, updateMeetingDto: UpdateMeetingDto) {\n    const match = 'Negative'; // Placeholder value, update as needed\n    const message = `Your last meeting resolved into a ${match} match`;\n\n    await this.rabbitmqService.sendMessage('student_notifications', message);\n\n    return await this.meetingRepository.update(id, updateMeetingDto);\n  }\n\n  /**\n   * Deletes a meeting by its ID.\n   * @param id The ID of the meeting to delete.\n   * @returns The deleted meeting.\n   */\n  async delete(id: string) {\n    return await this.meetingRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModuleManagementController.html":{"url":"controllers/ModuleManagementController.html","title":"controller - ModuleManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModuleManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialModuleDto: CreatePotentialModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:27\n                \n            \n\n\n            \n                \n                    Create a new potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialModuleDto\n                                    \n                                                CreatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:111\n                \n            \n\n\n            \n                \n                    Delete a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:49\n                \n            \n\n\n            \n                \n                    Get all potential modules.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential modules.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:66\n                \n            \n\n\n            \n                \n                    Get a potential module by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential module with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:84\n                \n            \n\n\n            \n                \n                    Update a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                                \n                                    updatePotentialModuleDto\n                                    \n                                                UpdatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential module.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ModuleManagementService } from './module-management.service';\nimport { CreatePotentialModuleDto } from './dto/CreatePotentialModuleDto';\nimport { UpdatePotentialModuleDto } from './dto/UpdatePotentialModuleDto';\n\n@Controller('module-management')\nexport class ModuleManagementController {\n  constructor(\n    private readonly potentialModuleService: ModuleManagementService,\n  ) {}\n\n  /**\n   * Create a new potential module.\n   *\n   * @param createPotentialModuleDto - The data for creating a potential module.\n   * @returns The created potential module.\n   */\n  @Post()\n  async create(@Body() createPotentialModuleDto: CreatePotentialModuleDto) {\n    try {\n      const potentialModule = await this.potentialModuleService.create(\n        createPotentialModuleDto,\n      );\n\n      return {\n        status: 201,\n        message: 'Created Potential Module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get all potential modules.\n   *\n   * @returns All potential modules.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const modules = await this.potentialModuleService.findAll();\n\n      return { status: 200, data: { modules } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Get a potential module by its ID.\n   *\n   * @param id - The ID of the potential module.\n   * @returns The potential module with the specified ID.\n   */\n  @Get(':id')\n  async findById(@Param('id') id: string) {\n    try {\n      const module = await this.potentialModuleService.findById(id);\n\n      return { status: 200, data: { module } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Update a potential module.\n   *\n   * @param id - The ID of the potential module.\n   * @param updatePotentialModuleDto - The updated data for the potential module.\n   * @returns The updated potential module.\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialModuleDto: UpdatePotentialModuleDto,\n  ) {\n    try {\n      const potentialModule = await this.potentialModuleService.update(\n        id,\n        updatePotentialModuleDto,\n      );\n\n      return {\n        status: 200,\n        message: 'Updated Potential Module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Delete a potential module.\n   *\n   * @param id - The ID of the potential module to delete.\n   * @returns The deleted potential module.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialModule = await this.potentialModuleService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential module',\n        data: { potentialModule },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModuleManagementModule.html":{"url":"modules/ModuleManagementModule.html","title":"module - ModuleManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModuleManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_imports\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/module-management/src/module-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Nest module for managing the module management feature.\nResponsible for importing dependencies, configuring providers, and controllers.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModuleManagementRepository\n                        \n                        \n                            ModuleManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModuleManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialModule, PotentialModuleSchema } from './schemas/potentialModule.schema';\nimport { ModuleManagementService } from './module-management.service';\nimport { ModuleManagementController } from './module-management.controller';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { PotentialModuleRegisteredEvent } from './events/potentialModule-registered.event';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Nest module for managing the module management feature.\n * Responsible for importing dependencies, configuring providers, and controllers.\n */\n@Module({\n  imports: [\n    // Import configuration module\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/module-management/.env'\n    }),\n\n    // Import RabbitMQ module\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import database module\n    DatabaseModule,\n\n    // Import CQRS module\n    CqrsModule,\n\n    // Import Mongoose module and register potential module schema\n    MongooseModule.forFeature([{ name: PotentialModule.name, schema: PotentialModuleSchema }])\n  ],\n  controllers: [ModuleManagementController],\n  providers: [\n    // Configure module management service and repository\n    ModuleManagementService,\n    ModuleManagementRepository,\n\n    // Configure event and command handlers\n    PotentialModuleRegisteredEvent,\n    CreatePotentialModuleCommand\n  ],\n})\nexport class ModuleManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementRepository.html":{"url":"injectables/ModuleManagementRepository.html","title":"injectable - ModuleManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repository class for handling database operations related to the PotentialModule entity.\nExtends the abstract repository class provided by the common module.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.repository.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the ModuleManagementRepository instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected Mongoose model for the PotentialModule schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialModule } from \"./schemas/potentialModule.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Repository class for handling database operations related to the `PotentialModule` entity.\n * Extends the abstract repository class provided by the common module.\n */\n@Injectable()\nexport class ModuleManagementRepository extends AbstractRepository {\n    /**\n     * Constructs the `ModuleManagementRepository` instance.\n     * @param applicationModel The injected Mongoose model for the `PotentialModule` schema.\n     */\n    constructor(@InjectModel(PotentialModule.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementService.html":{"url":"injectables/ModuleManagementService.html","title":"injectable - ModuleManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing potential modules.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ModuleManagementRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ModuleManagementRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialModuleDto: CreatePotentialModuleDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialModuleDto\n                                    \n                                                CreatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data for creating a potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:70\n                \n            \n\n\n            \n                \n                    Delete a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential module.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:36\n                \n            \n\n\n            \n                \n                    Get all potential modules.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All potential modules.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:46\n                \n            \n\n\n            \n                \n                    Get a potential module by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential module with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:57\n                \n            \n\n\n            \n                \n                    Update a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the potential module.\n\n\n                                    \n                                \n                                \n                                    updatePotentialModuleDto\n                                    \n                                                UpdatePotentialModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe updated data for the potential module.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential module.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialModule } from './schemas/potentialModule.schema';\nimport { AbstractRepository } from '@app/common';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { CreatePotentialModuleDto } from './dto/CreatePotentialModuleDto';\nimport { UpdatePotentialModuleDto } from './dto/UpdatePotentialModuleDto';\n\n/**\n * Service for managing potential modules.\n */\n@Injectable()\nexport class ModuleManagementService {\n  constructor(\n    @InjectModel(PotentialModule.name)\n    private readonly ModuleManagementRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Create a new potential module.\n   *\n   * @param createPotentialModuleDto - The data for creating a potential module.\n   * @returns The created potential module.\n   */\n  async create(createPotentialModuleDto: CreatePotentialModuleDto) {\n    return await this.ModuleManagementRepository.create(\n      createPotentialModuleDto,\n    );\n  }\n\n  /**\n   * Get all potential modules.\n   *\n   * @returns All potential modules.\n   */\n  async findAll() {\n    return await this.ModuleManagementRepository.find({});\n  }\n\n  /**\n   * Get a potential module by its ID.\n   *\n   * @param id - The ID of the potential module.\n   * @returns The potential module with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.ModuleManagementRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Update a potential module.\n   *\n   * @param id - The ID of the potential module.\n   * @param updatePotentialModuleDto - The updated data for the potential module.\n   * @returns The updated potential module.\n   */\n  async update(id: string, updatePotentialModuleDto: UpdatePotentialModuleDto) {\n    return await this.ModuleManagementRepository.update(\n      id,\n      updatePotentialModuleDto,\n    );\n  }\n\n  /**\n   * Delete a potential module.\n   *\n   * @param id - The ID of the potential module to delete.\n   * @returns The deleted potential module.\n   */\n  async delete(id: string) {\n    return await this.ModuleManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClass.html":{"url":"classes/PotentialClass.html","title":"class - PotentialClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/schemas/potentialClass.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema for representing a potential class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:14\n                        \n                    \n\n            \n                \n                    The name of the potential class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:20\n                        \n                    \n\n            \n                \n                    The student associated with the potential class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { PotentialStudent } from 'apps/student-management/src/schemas/potentialStudent.schema';\n\n/**\n * Schema for representing a potential class.\n */\n@Schema()\nexport class PotentialClass extends AbstractDocument {\n  /**\n   * The name of the potential class.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The student associated with the potential class.\n   */\n  @Prop({ required: true })\n  student: PotentialStudent;\n}\n\n/**\n * Mongoose schema for the PotentialClass class.\n */\nexport const PotentialClassSchema = SchemaFactory.createForClass(PotentialClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEvent.html":{"url":"classes/PotentialClassRegisteredEvent.html","title":"class - PotentialClassRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data related to the potential class being registered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The data related to the potential class being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\nexport class PotentialClassRegisteredEvent extends AggregateRoot {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEvent.\n     * @param createPotentialClassDto The data related to the potential class being registered.\n     */\n    constructor(public readonly createPotentialClassDto: any) {\n        super();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEventHandler.html":{"url":"classes/PotentialClassRegisteredEventHandler.html","title":"class - PotentialClassRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialClass: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEventHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        potentialClass\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for PotentialClass.\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The RabbitmqService for sending notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialClassRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:28\n                \n            \n\n\n            \n                \n                    Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialClassRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialClassRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialClassRegisteredEvent } from './potentialClass-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from '../schemas/potentialClass.schema';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialClassRegisteredEvent)\nexport class PotentialClassRegisteredEventHandler implements IEventHandler {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEventHandler.\n     * @param potentialClass The Mongoose model for PotentialClass.\n     * @param rabbitmqService The RabbitmqService for sending notifications.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name) private readonly potentialClass: Model,\n        private readonly rabbitmqService: RabbitmqService\n    ) {}\n\n    /**\n     * Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n     * @param event The PotentialClassRegisteredEvent instance.\n     */\n    async handle(event: PotentialClassRegisteredEvent): Promise {\n        // Send a notification to the study using RabbitMQ\n        const message = `A new class named: ${PotentialClass.name} has been made`;\n\n        await this.rabbitmqService.sendMessage('study-notification', message);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModule.html":{"url":"classes/PotentialModule.html","title":"class - PotentialModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/schemas/potentialModule.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialModule entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:27\n                        \n                    \n\n            \n                \n                    Class associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:15\n                        \n                    \n\n            \n                \n                    Name of the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { Teacher } from 'apps/student-management/src/schemas/teacher.schema';\nimport { PotentialClass } from 'apps/class-management/src/schemas/potentialClass.schema';\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\n@Schema()\nexport class PotentialModule extends AbstractDocument {\n  /**\n   * Name of the potential module.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * Teacher associated with the potential module.\n   */\n  @Prop({ required: true })\n  teacher: string;\n\n  /**\n   * Class associated with the potential module.\n   */\n  @Prop({ required: true})\n  class: string;\n}\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\nexport const PotentialModuleSchema = SchemaFactory.createForClass(PotentialModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEvent.html":{"url":"classes/PotentialModuleRegisteredEvent.html","title":"class - PotentialModuleRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event representing the registration of a potential module.\nExtends the AggregateRoot class.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PotentialModuleRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating the potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating the potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event representing the registration of a potential module.\n * Extends the AggregateRoot class.\n */\nexport class PotentialModuleRegisteredEvent extends AggregateRoot {\n  /**\n   * Initializes a new instance of the PotentialModuleRegisteredEvent class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating the potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEventHandler.html":{"url":"classes/PotentialModuleRegisteredEventHandler.html","title":"class - PotentialModuleRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialModuleRegisteredEvent.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialModule: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialModule\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialModuleRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:23\n                \n            \n\n\n            \n                \n                    Handles the PotentialModuleRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialModuleRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialModuleRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves when the event handling is complete.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialModuleRegisteredEvent } from './potentialModule-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PotentialModule } from '../schemas/potentialModule.schema';\n\n/**\n * Event handler for the PotentialModuleRegisteredEvent.\n */\n@EventsHandler(PotentialModuleRegisteredEvent)\nexport class PotentialModuleRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(PotentialModule.name) private readonly potentialModule: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialModuleRegisteredEvent.\n   * @param event The PotentialModuleRegisteredEvent instance.\n   * @returns A promise that resolves when the event handling is complete.\n   */\n  async handle(event: PotentialModuleRegisteredEvent): Promise {\n    const message = `A new module named: ${PotentialModule.name} has been made`;\n    await this.rabbitmqService.sendMessage('study-notification', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudent.html":{"url":"classes/PotentialStudent.html","title":"class - PotentialStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/potentialStudent.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:37\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:30\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:23\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * @description Mongoose schema for the PotentialStudent class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class PotentialStudent extends AbstractDocument {\n  /**\n   * @description Property representing the name of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * @description Property representing the study of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  study: string;\n\n  /**\n   * @description Property representing the phone number of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  phoneNumber: string;\n\n  /**\n   * @description Property representing the email of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true})\n  birthday: Date;\n}\n\n/**\n * @description Mongoose schema for the PotentialStudent class created using SchemaFactory.\n */\nexport const PotentialStudentSchema = SchemaFactory.createForClass(PotentialStudent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PotentialStudentController.html":{"url":"controllers/PotentialStudentController.html","title":"controller - PotentialStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PotentialStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                potentialStudents\n            \n\n\n            \n                Description\n            \n            \n                Controller class for handling potential student-related HTTP requests.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialStudentDto: CreatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:19\n                \n            \n\n\n            \n                \n                    Endpoint for creating a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialStudentDto\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the data for creating a potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:94\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:38\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential students.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of potential students or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:54\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving a potential student by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential student with the specified ID or an error message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.controller.ts:71\n                \n            \n\n\n            \n                \n                    Endpoint for updating a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to update.\n\n                                    \n                                \n                                \n                                    updatePotentialStudentDto\n                                    \n                                                UpdatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the updated data for the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential student or an error message.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { PotentialStudentService } from './potentialStudent.service';\nimport { CreatePotentialStudentDto } from './dto/create-potentialStudent.dto';\nimport { UpdatePotentialStudentDto } from './dto/update-potentialStudent.dto';\n\n/**\n * Controller class for handling potential student-related HTTP requests.\n */\n@Controller('potentialStudents')\nexport class PotentialStudentController {\n  constructor(private readonly potentialStudentService: PotentialStudentService) {}\n\n  /**\n   * Endpoint for creating a potential student.\n   * @param createPotentialStudentDto The DTO containing the data for creating a potential student.\n   * @returns The created potential student or an error message.\n   */\n  @Post()\n  async create(@Body() createPotentialStudentDto: CreatePotentialStudentDto) {\n    try {\n      const potentialStudent = await this.potentialStudentService.create(createPotentialStudentDto);\n\n      return {\n        status: 201,\n        message: 'Created Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for retrieving all potential students.\n   * @returns An array of potential students or an error message.\n   */\n  @Get()\n  async findAll() {\n    try {\n      const students = await this.potentialStudentService.findAll();\n\n      return { status: 200, data: { students } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for retrieving a potential student by ID.\n   * @param id The ID of the potential student.\n   * @returns The potential student with the specified ID or an error message.\n   */\n  @Get(':id')\n  async findById(@Param('id') id: string) {\n    try {\n      const student = await this.potentialStudentService.findById(id);\n\n      return { status: 200, data: { student } };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for updating a potential student.\n   * @param id The ID of the potential student to update.\n   * @param updatePotentialStudentDto The DTO containing the updated data for the potential student.\n   * @returns The updated potential student or an error message.\n   */\n  @Put(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updatePotentialStudentDto: UpdatePotentialStudentDto,\n  ) {\n    try {\n      const potentialStudent = await this.potentialStudentService.update(id, updatePotentialStudentDto);\n\n      return {\n        status: 200,\n        message: 'Updated Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n\n  /**\n   * Endpoint for deleting a potential student.\n   * @param id The ID of the potential student to delete.\n   * @returns The deleted potential student or an error message.\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string) {\n    try {\n      const potentialStudent = await this.potentialStudentService.delete(id);\n\n      return {\n        status: 200,\n        message: 'Deleted Potential Student',\n        data: { potentialStudent },\n      };\n    } catch (err) {\n      return { status: 400, message: err.message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PotentialStudentModule.html":{"url":"modules/PotentialStudentModule.html","title":"module - PotentialStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    PotentialStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PotentialStudentModule\n\n\n\ncluster_PotentialStudentModule_imports\n\n\n\ncluster_PotentialStudentModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nPotentialStudentModule -->\n\nRmqModule->PotentialStudentModule\n\n\n\n\n\nPotentialStudentService\n\nPotentialStudentService\n\nPotentialStudentModule -->\n\nPotentialStudentService->PotentialStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module class for the potential student module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PotentialStudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PotentialStudentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\nimport { PotentialStudentService } from './potentialStudent.service';\nimport { PotentialStudent, PotentialStudentSchema } from '../schemas/potentialStudent.schema';\nimport { PotentialStudentController } from './potentialStudent.controller';\n\n/**\n * Module class for the potential student module.\n */\n@Module({\n  imports: [\n    // Register RabbitMQ module with the given service name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Register the PotentialStudent model as a Mongoose feature\n    MongooseModule.forFeature([{ name: PotentialStudent.name, schema: PotentialStudentSchema }])\n  ],\n  controllers: [PotentialStudentController],\n  providers: [PotentialStudentService]\n})\nexport class PotentialStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEvent.html":{"url":"classes/PotentialStudentRegisteredEvent.html","title":"class - PotentialStudentRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for representing the registration of a potential student.\nExtends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\nThis class represents an event that is emitted when a potential student is registered.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialStudentRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data representing the potential student being registered.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:14\n                        \n                    \n\n            \n                \n                    - The data representing the potential student being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot, IEvent } from '@nestjs/cqrs';\n\n/**\n * Event class for representing the registration of a potential student.\n * Extends the AggregateRoot class from the \"@nestjs/cqrs\" module and implements the IEvent interface.\n * This class represents an event that is emitted when a potential student is registered.\n */\nexport class PotentialStudentRegisteredEvent extends AggregateRoot implements IEvent {\n  /**\n   * Constructor for the PotentialStudentRegisteredEvent class.\n   * @param createPotentialStudentDto - The data representing the potential student being registered.\n   */\n  constructor(public readonly createPotentialStudentDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEventHandler.html":{"url":"classes/PotentialStudentRegisteredEventHandler.html","title":"class - PotentialStudentRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Implements the IEventHandler interface for the event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialStudentRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialStudentRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialStudentRegisteredEvent object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEvent } from './potentialStudent-registered.event';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RabbitmqService } from '@app/common';\nimport { Teacher } from '../schemas/teacher.schema';\n\n/**\n * @description Event handler for the PotentialStudentRegisteredEvent.\n * Implements the IEventHandler interface for the event.\n */\n@EventsHandler(PotentialStudentRegisteredEvent)\nexport class PotentialStudentRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * @description Handle method that processes the PotentialStudentRegisteredEvent.\n   * @param event The PotentialStudentRegisteredEvent object.\n   */\n  async handle(event: PotentialStudentRegisteredEvent): Promise {\n    // Log a message to indicate that the event handler has been triggered\n    console.log(\"Triggered event handler\")\n\n    // Find a teacher and convert it to an object\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n\n    // Extract the createPotentialStudentDto from the event\n    const { createPotentialStudentDto } = event;\n\n    // Create a notification message for the teacher\n    const message = `Hello ${teacher.name}, ${createPotentialStudentDto.name} has applied for the study ${createPotentialStudentDto.study}. Contact: ${createPotentialStudentDto.email}, ${createPotentialStudentDto.phoneNumber}`;\n\n    // Send the notification message to the teacher using RabbitMQ\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PotentialStudentService.html":{"url":"injectables/PotentialStudentService.html","title":"injectable - PotentialStudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PotentialStudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/potentialStudent.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for potential students.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialStudentRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialStudentRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPotentialStudentDto: CreatePotentialStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:23\n                \n            \n\n\n            \n                \n                    Creates a new potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createPotentialStudentDto\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the potential student data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created potential student.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted potential student.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:31\n                \n            \n\n\n            \n                \n                    Retrieves all potential students.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A list of potential students.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:40\n                \n            \n\n\n            \n                \n                    Retrieves a potential student by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The potential student with the specified ID.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/potentialStudent/potentialStudent.service.ts:50\n                \n            \n\n\n            \n                \n                    Updates a potential student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential student to update.\n\n                                    \n                                \n                                \n                                    updatePotentialStudentDto\n                                    \n                                                UpdatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO containing the updated potential student data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The updated potential student.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialStudent } from '../schemas/PotentialStudent.schema';\nimport { AbstractRepository } from '@app/common';\nimport { CreatePotentialStudentDto } from './dto/create-potentialStudent.dto';\nimport { UpdatePotentialStudentDto } from './dto/update-potentialStudent.dto';\n\n/**\n * Service class for potential students.\n */\n@Injectable()\nexport class PotentialStudentService {\n  constructor(\n    @InjectModel(PotentialStudent.name)\n    private readonly potentialStudentRepository: AbstractRepository,\n  ) {}\n\n  /**\n   * Creates a new potential student.\n   * @param createPotentialStudentDto The DTO containing the potential student data.\n   * @returns The created potential student.\n   */\n  async create(createPotentialStudentDto: CreatePotentialStudentDto) {\n    return await this.potentialStudentRepository.create(createPotentialStudentDto);\n  }\n\n  /**\n   * Retrieves all potential students.\n   * @returns A list of potential students.\n   */\n  async findAll() {\n    return await this.potentialStudentRepository.find({});\n  }\n\n  /**\n   * Retrieves a potential student by ID.\n   * @param id The ID of the potential student.\n   * @returns The potential student with the specified ID.\n   */\n  async findById(id: string) {\n    return await this.potentialStudentRepository.findOne({ _id: id });\n  }\n\n  /**\n   * Updates a potential student.\n   * @param id The ID of the potential student to update.\n   * @param updatePotentialStudentDto The DTO containing the updated potential student data.\n   * @returns The updated potential student.\n   */\n  async update(id: string, updatePotentialStudentDto: UpdatePotentialStudentDto) {\n    return await this.potentialStudentRepository.update(id, updatePotentialStudentDto);\n  }\n\n  /**\n   * Deletes a potential student.\n   * @param id The ID of the potential student to delete.\n   * @returns The deleted potential student.\n   */\n  async delete(id: string) {\n    return await this.potentialStudentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTest.html":{"url":"classes/PotentialTest.html","title":"class - PotentialTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/potentialTest.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialTest entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answers\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                ec\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:43\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:25\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:31\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:19\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:37\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * Mongoose schema for the PotentialTest entity.\n */\n@Schema()\nexport class PotentialTest extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @Prop({ required: true })\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @Prop({ required: true })\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @Prop({ required: true })\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  answers: string[];\n}\n\n/**\n * Mongoose schema definition for the PotentialTest entity.\n */\nexport const PotentialTestSchema = SchemaFactory.createForClass(PotentialTest);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEvent.html":{"url":"classes/PotentialTestRegisteredEvent.html","title":"class - PotentialTestRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for indicating the registration of a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of PotentialTestRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for the registered potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:11\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for the registered potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event class for indicating the registration of a potential test.\n */\nexport class PotentialTestRegisteredEvent extends AggregateRoot {\n  /**\n   * Creates an instance of PotentialTestRegisteredEvent.\n   * @param createPotentialTestDto The DTO object containing the data for the registered potential test.\n   */\n  constructor(public readonly createPotentialTestDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEventHandler.html":{"url":"classes/PotentialTestRegisteredEventHandler.html","title":"class - PotentialTestRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialTestRegisteredEvent.\nImplements the IEventHandler interface from the \"@nestjs/cqrs\" module.\nThis event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the PotentialTestRegisteredEventHandler class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Teacher model from the \"teacher\" schema used to retrieve teacher information.\n\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitmqService instance used to send messages via RabbitMQ.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialTestRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:30\n                \n            \n\n\n            \n                \n                    Handles the PotentialTestRegisteredEvent by sending a notification to students.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialTestRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe PotentialTestRegisteredEvent to be handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise representing the completion of the handling process.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEvent } from './potentialTest-registered.event';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n/**\n * Event handler for the PotentialTestRegisteredEvent.\n * Implements the IEventHandler interface from the \"@nestjs/cqrs\" module.\n * This event handler is responsible for handling the PotentialTestRegisteredEvent and sending a notification to students.\n */\n@EventsHandler(PotentialTestRegisteredEvent)\nexport class PotentialTestRegisteredEventHandler implements IEventHandler {\n  /**\n   * Constructor for the PotentialTestRegisteredEventHandler class.\n   * @param teacher - The Teacher model from the \"teacher\" schema used to retrieve teacher information.\n   * @param rabbitmqService - The RabbitmqService instance used to send messages via RabbitMQ.\n   */\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher : Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialTestRegisteredEvent by sending a notification to students.\n   * @param event - The PotentialTestRegisteredEvent to be handled.\n   * @returns A Promise representing the completion of the handling process.\n   */\n  async handle(event: PotentialTestRegisteredEvent): Promise {\n    console.log(\"Triggered event handler\")\n    \n    // Retrieve teacher information\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n    const { createPotentialTestDto } = event;\n\n    // Send a notification to the students using RabbitMQ\n    const message = `Hello everyone, ${teacher.name} has added a new test for ${createPotentialTestDto.module}, it's about ${createPotentialTestDto.name}, it will have a duration of ${createPotentialTestDto.duration} minutes, passing this test will give ${createPotentialTestDto.ec} ECs`;\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitmqService.html":{"url":"injectables/RabbitmqService.html","title":"injectable - RabbitmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:11\n                            \n                        \n\n                \n                    \n                            It injects the RabbitMQ client proxy into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitMQ client proxy instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(queue: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:31\n                \n            \n\n\n            \n                \n                    It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the queue to send the message to.\n\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be sent.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the message is sent successfully.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n/**\n * @class RabbitmqService\n * @description Service for interacting with RabbitMQ microservice client.\n */\n@Injectable()\nexport class RabbitmqService {\n\n  /**\n   * @constructor\n   * @param {ClientProxy} clientProxy - The RabbitMQ client proxy instance.\n   * @description Constructs an instance of the RabbitmqService.\n   * It injects the RabbitMQ client proxy into the service.\n   */\n  constructor(\n    @Inject('RABBITMQ_CLIENT') private readonly clientProxy: ClientProxy,\n  ) {}\n\n  /**\n   * @method sendMessage\n   * @param {string} queue - The name of the queue to send the message to.\n   * @param {string} message - The message to be sent.\n   * @returns {Promise} - A promise that resolves when the message is sent successfully.\n   * @description Sends a message to the specified queue using the RabbitMQ client proxy.\n   * It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n   */\n  sendMessage(queue: string, message: string): Promise {\n    return lastValueFrom(this.clientProxy.emit(queue, message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.module.ts:31\n                \n            \n\n\n            \n                \n                    It returns a dynamically generated module configuration that can be used for importing the module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RmqModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \nThe dynamically generated module configuration.\n\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // Import necessary dependencies\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentManagementController.html":{"url":"controllers/StudentManagementController.html","title":"controller - StudentManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student-management\n            \n\n\n            \n                Description\n            \n            \n                It handles HTTP requests related to student management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                applyForStudy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        applyForStudy\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyForStudy(data: CreatePotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/student-management.controller.ts:23\n                \n            \n\n\n            \n                \n                    It receives a POST request and creates a potential student using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreatePotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData for creating a potential student.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \nA promise that resolves to the created student.\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post} from '@nestjs/common';\nimport { CreatePotentialStudentCommand } from './commands/create-potentialStudent/create-potentialStudent.command';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialStudentDto } from './potentialStudent/dto/create-potentialStudent.dto';\n\n/**\n * @class StudentManagementController\n * @description Controller for managing student-related operations.\n * It handles HTTP requests related to student management.\n */\n@Controller('student-management')\nexport class StudentManagementController {\n  constructor(private readonly commandBus: CommandBus, private readonly eventBus: EventBus) {}\n\n  /**\n   * @method applyForStudy\n   * @param {createPotentialStudentDto} data - Data for creating a potential student.\n   * @returns {Promise} - A promise that resolves to the created student.\n   * @description Endpoint for applying for study.\n   * It receives a POST request and creates a potential student using the provided data.\n   */\n  @Post()\n  async applyForStudy(@Body() data: CreatePotentialStudentDto) {\n    const command = new CreatePotentialStudentCommand(data);\n\n    // Execute the command using the command bus\n    const student = this.commandBus.execute(command);\n\n    // Return the student\n    return student;\n  }\n\n  // @MessagePattern('meeting_notifications')\n  // public async getMeetingResults(@Payload() data: any) {\n  //   console.log('Message: ', data);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentManagementModule.html":{"url":"modules/StudentManagementModule.html","title":"module - StudentManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nMeetingModule\n\nMeetingModule\n\nStudentManagementModule -->\n\nMeetingModule->StudentManagementModule\n\n\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nStudentManagementModule -->\n\nPotentialStudentModule->StudentManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/student-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports necessary dependencies, configures the module, and provides controllers and services.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            MeetingModule\n                        \n                        \n                            PotentialStudentModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            TeacherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { StudentManagementController } from './student-management.controller';\nimport { StudentManagementService } from './student-management.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialStudent, PotentialStudentSchema} from './schemas/potentialStudent.schema';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from './teacher/teacher.module';\nimport { MeetingModule } from './meeting/meeting.module';\nimport { PotentialStudentModule } from './potentialStudent/potentialStudent.module';\n\n/**\n * @module StudentManagementModule\n * @description Module for managing student-related functionality.\n * It imports necessary dependencies, configures the module, and provides controllers and services.\n */\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n    envFilePath: '.env'\n  }), RmqModule.register({name: APPLICATION_SERVICE}), DatabaseModule, CqrsModule, MongooseModule.forFeature([{name: PotentialStudent.name, schema: PotentialStudentSchema}, { name: Teacher.name, schema: TeacherSchema}]), TeacherModule, PotentialStudentModule, MeetingModule],\n  controllers: [StudentManagementController],\n  providers: [StudentManagementService],\n})\nexport class StudentManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementRepository.html":{"url":"injectables/StudentManagementRepository.html","title":"injectable - StudentManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the PotentialStudent model using the @InjectModel decorator.\nThe injected model is passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the PotentialStudent schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialStudent } from \"./schemas/potentialStudent.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * @class StudentManagementRepository\n * @description Repository class for managing potential students.\n * It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n */\n@Injectable()\nexport class StudentManagementRepository extends AbstractRepository {\n  /**\n   * @constructor\n   * @param {Model} applicationModel - The Mongoose model for the PotentialStudent schema.\n   * @description Constructs an instance of the StudentManagementRepository.\n   * It injects the PotentialStudent model using the @InjectModel decorator.\n   * The injected model is passed to the constructor of the AbstractRepository class.\n   */\n  constructor(@InjectModel(PotentialStudent.name) applicationModel: Model) {\n    // Call the constructor of the AbstractRepository class and pass the applicationModel\n    super(applicationModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementService.html":{"url":"injectables/StudentManagementService.html","title":"injectable - StudentManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the StudentManagementRepository to perform application-related operations.\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * @class StudentManagementService\n * @description Service class for managing student applications.\n * It interacts with the StudentManagementRepository to perform application-related operations.\n */\n@Injectable()\nexport class StudentManagementService {\n  // constructor(\n  //   // @InjectModel(PotentialStudent.name)\n  //   // private readonly studentManagementRepository: AbstractRepository,\n  // ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudyProgramController.html":{"url":"controllers/StudyProgramController.html","title":"controller - StudyProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudyProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                study-program\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/study-program/src/study-program.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { StudyProgramService } from './study-program.service';\n\n@Controller('study-program')\nexport class StudyProgramController {\n  constructor(private readonly studyProgramService: StudyProgramService) {}\n\n  @Get()\n  getHello(): string {\n    return this.studyProgramService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudyProgramModule.html":{"url":"modules/StudyProgramModule.html","title":"module - StudyProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    StudyProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/study-program/src/study-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudyProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudyProgramController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudyProgramController } from './study-program.controller';\nimport { StudyProgramService } from './study-program.service';\n\n@Module({\n  imports: [],\n  controllers: [StudyProgramController],\n  providers: [StudyProgramService],\n})\nexport class StudyProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudyProgramService.html":{"url":"injectables/StudyProgramService.html","title":"injectable - StudyProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudyProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/study-program/src/study-program.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StudyProgramService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher.html":{"url":"classes/Teacher.html","title":"class - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/teacher.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * @description Mongoose schema for the Teacher class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * @description Property representing the name of the teacher.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * @description Mongoose schema for the Teacher class created using SchemaFactory.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher-1.html":{"url":"classes/Teacher-1.html","title":"class - Teacher-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the Teacher entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/teacher.schema.ts:13\n                        \n                    \n\n            \n                \n                    The name of the teacher.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * Mongoose schema for the Teacher entity.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * The name of the teacher.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * Mongoose schema definition for the Teacher entity.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n\n            \n                Description\n            \n            \n                It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                getMeetings\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                GetNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:22\n                \n            \n\n\n            \n                \n                    It creates a new teacher using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO object containing teacher data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A response object with status and message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:36\n                \n            \n\n\n            \n                \n                    It retrieves all teachers from the teacherService.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An array of teacher objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        getMeetings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMeetings(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('meeting_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        GetNotifications\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetNotifications(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('teacher_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:47\n                \n            \n\n\n            \n                \n                    It logs the received message.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The payload data of the received message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\n\n/**\n * @description Controller class for handling teacher-related HTTP requests and message patterns.\n * It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n */\n@Controller('teachers')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  /**\n   * @description Handler for the POST /teachers endpoint.\n   * It creates a new teacher using the provided data.\n   * @param createTeacherDto The DTO object containing teacher data.\n   * @returns A response object with status and message.\n   */\n  @Post()\n  async create(@Body() createTeacherDto: CreateTeacherDto) {\n    // Call the teacherService to create a teacher\n    await this.teacherService.create(createTeacherDto);\n\n    // Return a response object with status and message\n    return { status: 201, message: 'Created Teacher' };\n  }\n\n  /**\n   * @description Handler for the GET /teachers endpoint.\n   * It retrieves all teachers from the teacherService.\n   * @returns An array of teacher objects.\n   */\n  @Get()\n  findAll() {\n    // Call the teacherService to find all teachers\n    return this.teacherService.findAll();\n  }\n\n  /**\n   * @description Message handler for 'teacher_notifications' pattern.\n   * It logs the received message.\n   * @param data The payload data of the received message.\n   */\n  @MessagePattern('teacher_notifications')\n  public async GetNotifications(@Payload() data: any) {\n    console.log('Message: ', data);\n  }\n\n  @MessagePattern('meeting_notifications')\n  public async getMeetings(@Payload() data: any) {\n    console.log('Message: ', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports the required modules and specifies the controllers and providers for the teacher feature.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\n\n/**\n * @module TeacherModule\n * @description Module for managing teachers.\n * It imports the required modules and specifies the controllers and providers for the teacher feature.\n */\n@Module({\n  // Import required modules\n  imports: [\n    /**\n     * @description Register the RmqModule with the given name.\n     * It allows communication with RabbitMQ microservice.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    /**\n     * @description Register the MongooseModule with the Teacher schema.\n     * It provides the Mongoose connection and access to the Teacher collection.\n     */\n    MongooseModule.forFeature([{ name: Teacher.name, schema: TeacherSchema }])\n  ],\n  // Specify the controllers\n  controllers: [TeacherController],\n  providers: [TeacherService]\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherRepository.html":{"url":"injectables/TeacherRepository.html","title":"injectable - TeacherRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides CRUD operations for teachers.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\nThe injected model is then passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the Teacher schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Teacher } from \"../schemas/teacher.schema\";\n\n/**\n * @class TeacherRepository\n * @description Repository class for managing teacher data.\n * It extends the AbstractRepository class and provides CRUD operations for teachers.\n */\n@Injectable()\nexport class TeacherRepository extends AbstractRepository {\n    /**\n     * @constructor\n     * @param {Model} applicationModel - The Mongoose model for the Teacher schema.\n     * @description Constructs an instance of the TeacherRepository.\n     * It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\n     * The injected model is then passed to the constructor of the AbstractRepository class.\n     */\n    constructor(@InjectModel(Teacher.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the TeacherRepository to perform teacher-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: AbstractRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.service.ts:15\n                            \n                        \n\n                \n                    \n                            It injects the TeacherRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        AbstractRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for teacher management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTeacherDto: UpdateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeacherDto\n                                    \n                                                UpdateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { AbstractRepository } from '@app/common';\nimport { UpdateTeacherDto } from './dto/update-teacher.dto';\n\n/**\n * @class TeacherService\n * @description Service class for managing teachers.\n * It interacts with the TeacherRepository to perform teacher-related operations.\n */\n@Injectable()\nexport class TeacherService {\n  /**\n   * @constructor\n   * @param {TeacherRepository} teacherRepository - The repository for teacher management.\n   * @description Constructs an instance of the TeacherService.\n   * It injects the TeacherRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(Teacher.name)\n    private readonly teacherRepository: AbstractRepository,\n  ) {\n  }\n\n  async create(createTeacherDto: CreateTeacherDto){\n    return await this.teacherRepository.create(createTeacherDto);\n  }\n\n  async findAll(){\n    return await this.teacherRepository.find({});\n  }\n\n  async findById(id: string){\n    return await this.teacherRepository.findOne({_id: id});\n  }\n\n  async delete(id: string){\n    return await this.teacherRepository.delete(id);\n  }\n\n  async update(id: string, updateTeacherDto: UpdateTeacherDto){\n    return await this.teacherRepository.update(id, updateTeacherDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestProgramController.html":{"url":"controllers/TestProgramController.html","title":"controller - TestProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test-program\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing potential tests in the test-program module.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialTestDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialTestDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialTestDto(data: createPotentialTestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:34\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new potential test.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A Promise that resolves to the created potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:24\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential test by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential test to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the deleted potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential tests.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { TestProgramService } from './test-program.service';\nimport { createPotentialTestDto } from './dto/create-potentialTest.dto';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialTestCommand } from './commands/create-potentialTest.command';\n\n/**\n * Controller class for managing potential tests in the test-program module.\n */\n@Controller('test-program')\nexport class TestProgramController {\n  constructor(\n    private readonly testProgramService: TestProgramService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Endpoint for deleting a potential test by its ID.\n   * @param id The ID of the potential test to be deleted.\n   * @returns A Promise that resolves to the deleted potential test.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.testProgramService.deleteApplicationById(id);\n  }\n\n  /**\n   * Endpoint for creating a new potential test.\n   * @param data The data for creating the potential test.\n   * @returns A Promise that resolves to the created potential test.\n   */\n  @Post()\n  async createPotentialTestDto(@Body() data: createPotentialTestDto) {\n    const command = new CreatePotentialTestCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Endpoint for retrieving all potential tests.\n   * @returns A Promise that resolves to an array of potential tests.\n   */\n  @Get()\n  async getApplications() {\n    return this.testProgramService.getApplications();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestProgramModule.html":{"url":"modules/TestProgramModule.html","title":"module - TestProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    TestProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_imports\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/test-program/src/test-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestProgramRepository\n                        \n                        \n                            TestProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestProgramController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes from external packages\nimport { Module } from '@nestjs/common';\nimport { TestProgramController } from './test-program.controller';\nimport { TestProgramService } from './test-program.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialTest, PotentialTestSchema } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEventHandler } from './events/potentialTest-registered.event.handler';\nimport { CreatePotentialTestCommandHandler } from './commands/create-potentialTest.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from 'apps/student-management/src/teacher/teacher.module';\n\n@Module({\n  // Import and configure modules for the TestProgramModule\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/test-program/.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    // Import MongooseModule and specify the schemas to be used\n    MongooseModule.forFeature([\n      { name: PotentialTest.name, schema: PotentialTestSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n  ],\n  // Specify the controllers to be included in the TestProgramModule\n  controllers: [TestProgramController],\n  // Specify the services and repositories to be included in the TestProgramModule\n  providers: [\n    TestProgramService,\n    TestProgramRepository,\n    PotentialTestRegisteredEventHandler,\n    CreatePotentialTestCommandHandler,\n  ],\n})\nexport class TestProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramRepository.html":{"url":"injectables/TestProgramRepository.html","title":"injectable - TestProgramRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramRepository class.\nThis class extends the AbstractRepository class from the \"@app/common\" package.\nIt provides data access methods for the \"PotentialTest\" entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.repository.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramRepository class.\n                        This model is used for executing database operations related to the \"PotentialTest\" entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose Model for the \"PotentialTest\" entity, injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialTest } from \"./schemas/potentialTest.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Injectable TestProgramRepository class.\n * This class extends the AbstractRepository class from the \"@app/common\" package.\n * It provides data access methods for the \"PotentialTest\" entity.\n */\n@Injectable()\nexport class TestProgramRepository extends AbstractRepository {\n    /**\n     * Constructor for the TestProgramRepository class.\n     * @param applicationModel The Mongoose Model for the \"PotentialTest\" entity, injected using @InjectModel decorator.\n     *                         This model is used for executing database operations related to the \"PotentialTest\" entity.\n     */\n    constructor(@InjectModel(PotentialTest.name) applicationModel: Model) {\n        // Call the constructor of the parent AbstractRepository class passing the injected \"applicationModel\".\n        // The parent class takes care of creating basic CRUD operations for the \"PotentialTest\" entity.\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramService.html":{"url":"injectables/TestProgramService.html","title":"injectable - TestProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramService class.\nThis class provides methods to interact with the test program data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramService class.\n                            This repository is used to execute database operations related to the test program.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TestProgramRepository instance injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes an application from the test program by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the result of the delete operation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:27\n                \n            \n\n\n            \n                \n                    Retrieves all applications from the test program.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests (applications).\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialTest } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\n\n/**\n * Injectable TestProgramService class.\n * This class provides methods to interact with the test program data.\n */\n@Injectable()\nexport class TestProgramService {\n  /**\n   * Constructor for the TestProgramService class.\n   * @param testProgramRepository The TestProgramRepository instance injected using @InjectModel decorator.\n   *                             This repository is used to execute database operations related to the test program.\n   */\n  constructor(\n    @InjectModel(PotentialTest.name)\n    private readonly testProgramRepository: TestProgramRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications from the test program.\n   * @returns A Promise that resolves to an array of potential tests (applications).\n   */\n  async getApplications() {\n    return this.testProgramRepository.find({});\n  }\n\n  /**\n   * Deletes an application from the test program by its ID.\n   * @param id The ID of the application to be deleted.\n   * @returns A Promise that resolves to the result of the delete operation.\n   */\n  async deleteApplicationById(id: string) {\n    return this.testProgramRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMeetingDto.html":{"url":"classes/UpdateMeetingDto.html","title":"class - UpdateMeetingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMeetingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/meeting/dto/update-meeting.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a meeting.\nExtends the CreateMeetingDto and allows partial updates.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateMeetingDto } from \"./create-meeting.dto\";\n\n/**\n * DTO for updating a meeting.\n * Extends the CreateMeetingDto and allows partial updates.\n */\nexport class UpdateMeetingDto extends PartialType(CreateMeetingDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialClassDto.html":{"url":"classes/UpdatePotentialClassDto.html","title":"class - UpdatePotentialClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/UpdatePotentialClassDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a potential class.\nExtends the CreatePotentialClassDto with partial properties.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePotentialClassDto } from './CreatePotentialClassDto';\n\n/**\n * DTO for updating a potential class.\n * Extends the CreatePotentialClassDto with partial properties.\n */\nexport class UpdatePotentialClassDto extends PartialType(CreatePotentialClassDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialModuleDto.html":{"url":"classes/UpdatePotentialModuleDto.html","title":"class - UpdatePotentialModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/UpdatePotentialModuleDto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating a potential module.\nExtends the CreatePotentialModuleDto and allows partial updates.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreatePotentialModuleDto } from \"./CreatePotentialModuleDto\";\n\n/**\n * DTO for updating a potential module.\n * Extends the CreatePotentialModuleDto and allows partial updates.\n */\nexport class UpdatePotentialModuleDto extends PartialType(CreatePotentialModuleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePotentialStudentDto.html":{"url":"classes/UpdatePotentialStudentDto.html","title":"class - UpdatePotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/potentialStudent/dto/update-potentialStudent.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for updating potential student entities.\nExtends the PartialType class from @nestjs/mapped-types.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreatePotentialStudentDto } from \"./create-potentialStudent.dto\";\n\n/**\n * DTO for updating potential student entities.\n * Extends the `PartialType` class from `@nestjs/mapped-types`.\n */\nexport class UpdatePotentialStudentDto extends PartialType(CreatePotentialStudentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/update-teacher.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for updating a teacher.\nExtends the PartialType class from @nestjs/mapped-types.\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\n/**\n * Data transfer object for updating a teacher.\n * Extends the `PartialType` class from `@nestjs/mapped-types`.\n */\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/class-management/src/class-management.controller.ts\n            \n            controller\n            ClassManagementController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.repository.ts\n            \n            injectable\n            ClassManagementRepository\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.service.ts\n            \n            injectable\n            ClassManagementService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.handler.ts\n            \n            class\n            CreatePotentialClassCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.ts\n            \n            class\n            CreatePotentialClassCommand\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/CreatePotentialClassDto.ts\n            \n            class\n            CreatePotentialClassDto\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/UpdatePotentialClassDto.ts\n            \n            class\n            UpdatePotentialClassDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.handler.ts\n            \n            class\n            PotentialClassRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.ts\n            \n            class\n            PotentialClassRegisteredEvent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            class\n            PotentialClass\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            variable\n            PotentialClassSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.handler.ts\n            \n            class\n            CreatePotentialModuleCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.ts\n            \n            class\n            CreatePotentialModuleCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/constants/service.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/CreatePotentialModuleDto.ts\n            \n            class\n            CreatePotentialModuleDto\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/UpdatePotentialModuleDto.ts\n            \n            class\n            UpdatePotentialModuleDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.handler.ts\n            \n            class\n            PotentialModuleRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.ts\n            \n            class\n            PotentialModuleRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.controller.ts\n            \n            controller\n            ModuleManagementController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.repository.ts\n            \n            injectable\n            ModuleManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.service.ts\n            \n            injectable\n            ModuleManagementService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            class\n            PotentialModule\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            variable\n            PotentialModuleSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n            \n            class\n            CreatePotentialStudentCommandHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n            \n            class\n            CreatePotentialStudentCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n            \n            class\n            PotentialStudentRegisteredEventHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.ts\n            \n            class\n            PotentialStudentRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/dto/create-meeting.dto.ts\n            \n            class\n            CreateMeetingDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/dto/update-meeting.dto.ts\n            \n            class\n            UpdateMeetingDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/meeting.controller.ts\n            \n            controller\n            MeetingController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/meeting/meeting.service.ts\n            \n            injectable\n            MeetingService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/dto/create-potentialStudent.dto.ts\n            \n            class\n            CreatePotentialStudentDto\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/dto/update-potentialStudent.dto.ts\n            \n            class\n            UpdatePotentialStudentDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/potentialStudent.controller.ts\n            \n            controller\n            PotentialStudentController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/potentialStudent/potentialStudent.service.ts\n            \n            injectable\n            PotentialStudentService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/meeting.schema.ts\n            \n            class\n            Meeting\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/meeting.schema.ts\n            \n            variable\n            MeetingSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            class\n            PotentialStudent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            variable\n            PotentialStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.controller.ts\n            \n            controller\n            StudentManagementController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.repository.ts\n            \n            injectable\n            StudentManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.service.ts\n            \n            injectable\n            StudentManagementService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.repository.ts\n            \n            injectable\n            TeacherRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/study-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.controller.ts\n            \n            controller\n            StudyProgramController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.service.ts\n            \n            injectable\n            StudyProgramService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.handler.ts\n            \n            class\n            CreatePotentialTestCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.ts\n            \n            class\n            CreatePotentialTestCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/dto/create-potentialTest.dto.ts\n            \n            class\n            createPotentialTestDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.handler.ts\n            \n            class\n            PotentialTestRegisteredEventHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.ts\n            \n            class\n            PotentialTestRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            class\n            PotentialTest\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            variable\n            PotentialTestSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.controller.ts\n            \n            controller\n            TestProgramController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.repository.ts\n            \n            injectable\n            TestProgramRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.service.ts\n            \n            injectable\n            TestProgramService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            injectable\n            AbstractRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.service.ts\n            \n            injectable\n            RabbitmqService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialTestDto.html":{"url":"classes/createPotentialTestDto.html","title":"class - createPotentialTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/dto/create-potentialTest.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO class for creating a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                ec\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:50\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:27\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:34\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:20\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:42\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsArray, IsNotEmpty, IsString, IsNumber } from \"class-validator\";\n\n/**\n * DTO class for creating a potential test.\n */\nexport class createPotentialTestDto extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.4\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.4\n        \n            @nestjs/cqrs : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.0.4\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.4\n        \n            @nestjs/swagger : ^7.0.12\n        \n            amqp-connection-manager : ^4.1.13\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The NestJS application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/module-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger for API documentation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/student-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Nest application instance.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/study-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/test-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the Nest.js application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest.js application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ClassManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModuleManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PotentialStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudyProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_providers\n\n\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_PotentialStudentModule\n\n\n\ncluster_PotentialStudentModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nRmqModule->MeetingModule\n\n\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nPotentialStudentModule\n\nPotentialStudentModule\n\nPotentialStudentModule -->\n\nRmqModule->PotentialStudentModule\n\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\nStudentManagementModule -->\n\nMeetingModule->StudentManagementModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\nStudentManagementModule -->\n\nPotentialStudentModule->StudentManagementModule\n\n\n\n\n\nPotentialStudentService\n\nPotentialStudentService\n\nPotentialStudentModule -->\n\nPotentialStudentService->PotentialStudentModule\n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../service.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            MeetingSchema   (apps/.../meeting.schema.ts)\n                        \n                        \n                            PotentialClassSchema   (apps/.../potentialClass.schema.ts)\n                        \n                        \n                            PotentialModuleSchema   (apps/.../potentialModule.schema.ts)\n                        \n                        \n                            PotentialStudentSchema   (apps/.../potentialStudent.schema.ts)\n                        \n                        \n                            PotentialTestSchema   (apps/.../potentialTest.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/module-management/src/constants/service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service name.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/test-program/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n            \n                \n                    Constant representing the application service.\nThis value does not change over time.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/meeting.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MeetingSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Meeting)\n                    \n                \n\n\n        \n    \n\n    apps/class-management/src/schemas/potentialClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialClass)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialClass class.\n\n                \n            \n\n        \n    \n\n    apps/module-management/src/schemas/potentialModule.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialModuleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialModule)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialModule entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/potentialStudent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialStudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialStudent)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/potentialTest.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialTestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialTest)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the PotentialTest entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the Teacher entity.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
