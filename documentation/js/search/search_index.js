var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.231,1,1.475]],["body/classes/AbstractDocument.html",[0,0.39,1,2.496,2,0.745,3,0.166,4,0.145,5,0.145,6,3.933,7,1.854,8,4.527,9,0.298,10,1.605,11,3.031,12,0.496,13,0.016,14,2.867,15,1.528,16,1.999,17,1.999,18,2.467,19,0.37,20,4.547,21,0.238,22,1.096,23,3.38,24,2.496,25,1.009,26,2.13,27,4.547,28,3.529,29,0.879,30,4.547,31,3.933,32,3.529,33,0.166,34,2.463,35,4.547,36,3.933,37,2.613,38,4.547,39,4.547,40,4.547,41,1.348,42,4.547,43,0.012,44,0.012]],["title/injectables/AbstractRepository.html",[45,0.892,46,1.872]],["body/injectables/AbstractRepository.html",[0,0.153,1,0.98,3,0.093,4,0.082,5,0.082,9,0.168,12,0.46,13,0.016,19,0.493,21,0.173,26,0.791,29,0.857,33,0.093,37,4.503,41,1.578,43,0.008,44,0.012,45,0.906,46,1.901,47,1.025,48,2.213,49,0.869,50,1.895,51,1.95,52,2.661,53,3.48,54,2.398,55,3.978,56,0.479,57,2.559,58,2.94,59,2.559,60,0.992,61,0.397,62,0.992,63,2.398,64,2.912,65,2.559,66,1.386,67,2.014,68,2.12,69,2.398,70,1.288,71,2.559,72,3.082,73,1.721,74,2.398,75,4.232,76,2.559,77,2.398,78,3.707,79,3.978,80,3.978,81,1.568,82,3.707,83,2.398,84,2.559,85,2.398,86,2.398,87,3.515,88,2.559,89,2.005,90,2.398,91,2.398,92,3.914,93,0.544,94,2.559,95,2.559,96,0.544,97,1.521,98,1.261,99,2.559,100,2.559,101,2.102,102,2.559,103,2.559,104,1.181,105,2.559,106,2.559,107,2.559,108,2.559,109,2.559,110,2.559,111,2.559]],["title/controllers/ClassManagementController.html",[112,1.616,113,2.735]],["body/controllers/ClassManagementController.html",[0,0.419,3,0.112,4,0.098,5,0.098,9,0.202,12,0.342,13,0.016,15,1.785,19,0.432,21,0.226,22,0.743,29,0.672,33,0.112,41,0.913,43,0.009,44,0.009,49,0.998,50,1.834,52,2.336,56,0.577,60,0.737,61,0.295,62,0.737,66,1.267,67,1.731,70,1.13,72,2.945,73,1.978,93,0.656,96,1.13,97,1.63,98,0.993,101,1.648,112,1.886,113,3.77,114,1.292,115,2.236,116,3.835,117,2.187,118,1.888,119,3.254,120,3.192,121,2.755,122,3.357,123,3.082,124,3.835,125,3.488,126,3.082,127,3.491,128,1.805,129,2.179,130,1.722,131,1.888,132,3.491,133,3.082,134,3.192,135,3.727,136,2.185,137,2.697,138,3.082,139,2.585,140,3.357,141,3.891,142,1.888,143,1.669,144,2.666,145,2.024,146,4.145,147,4.145,148,3.577,149,1.888,150,2.666,151,1.888,152,1.669,153,2.392,154,3.082,155,1.578,156,0.952,157,2.187,158,2.024,159,1.771,160,2.077,161,3.891,162,2.666,163,3.082,164,1.355,165,2.666,166,2.392,167,1.785,168,3.082,169,3.082,170,2.187,171,3.082,172,2.392,173,3.082]],["title/modules/ClassManagementModule.html",[174,0.786,175,2.735]],["body/modules/ClassManagementModule.html",[0,0.388,3,0.142,4,0.124,5,0.124,13,0.016,21,0.277,22,0.941,24,1.494,25,0.866,33,0.142,43,0.011,44,0.011,93,0.83,113,4.288,114,2.228,115,1.494,116,2.562,148,4.289,149,2.39,151,3.255,152,2.113,153,3.028,174,1.233,175,5.398,176,1.563,177,1.716,178,2.113,179,2.113,180,1.896,181,3.095,182,1.999,183,3.375,184,3.375,185,3.375,186,3.793,187,3.297,188,4.024,189,2.878,190,2.113,191,2.113,192,3.028,193,2.722,194,0.981,195,3.054,196,2.769,197,2.39,198,2.769,199,2.113,200,3.771,201,1.896,202,3.771,203,2.769,204,3.028,205,1.999,206,3.255,207,3.375,208,1.896,209,2.769,210,2.769,211,1.802,212,2.769,213,2.769,214,3.902,215,3.902,216,3.375]],["title/injectables/ClassManagementRepository.html",[45,0.892,188,2.215]],["body/injectables/ClassManagementRepository.html",[0,0.188,3,0.114,4,0.1,5,0.1,7,1.296,9,0.206,12,0.496,13,0.016,19,0.531,21,0.228,24,1.745,25,0.696,26,1.658,29,0.975,33,0.114,37,4.336,41,0.93,43,0.009,44,0.012,45,1.054,46,3.351,47,1.256,49,1.011,50,1.871,51,1.898,52,2.59,53,3.343,54,2.791,55,3.832,56,0.587,58,3.17,60,1.069,61,0.428,62,1.069,63,1.922,64,2.791,66,1.276,67,1.854,68,1.699,69,1.922,70,1.253,72,2.87,73,1.379,74,1.922,75,3.997,77,1.922,78,3.287,79,3.608,80,3.608,81,1.256,82,2.791,83,1.922,85,1.922,86,1.922,87,3.287,89,1.607,90,1.922,91,1.922,93,0.668,97,0.788,115,1.745,116,2.992,155,2.334,156,1.408,188,3.385,194,0.788,201,2.607,203,2.226,217,2.226,218,2.06,219,3.137,220,3.524,221,2.292,222,2.06,223,2.06,224,2.06,225,2.06,226,2.06,227,1.256,228,3.137,229,2.06]],["title/injectables/ClassManagementService.html",[45,0.892,148,2.36]],["body/injectables/ClassManagementService.html",[0,0.379,3,0.134,4,0.118,5,0.118,9,0.242,12,0.389,13,0.016,19,0.478,21,0.231,25,0.819,29,0.764,33,0.134,43,0.01,44,0.01,45,1.183,47,1.478,49,1.135,50,1.803,52,2.249,56,0.957,60,0.838,61,0.335,62,0.838,66,1.293,67,1.878,70,1.249,72,3.027,73,2.249,93,0.785,96,0.785,97,1.285,101,1.874,115,2.426,116,4.161,119,3.133,121,3.133,122,3.641,129,1.794,131,3.133,134,3.63,135,3.956,136,2.484,137,2.926,139,2.939,140,3.641,141,4.424,143,2.77,148,3.881,155,2.62,156,1.58,167,1.241,188,4.057,201,1.793,203,2.619,205,1.891,227,1.478,230,2.619,231,3.691,232,3.193,233,2.77,234,3.193,235,3.193,236,3.193,237,3.691,238,3.691]],["title/classes/CreatePotentialClassCommand.html",[0,0.231,151,2.36]],["body/classes/CreatePotentialClassCommand.html",[0,0.409,2,0.728,3,0.162,4,0.142,5,0.142,9,0.291,10,1.581,12,0.441,13,0.016,19,0.472,21,0.211,22,1.072,29,0.664,33,0.162,43,0.012,44,0.012,56,0.832,60,0.728,61,0.291,62,0.728,89,3.303,96,1.372,97,1.117,115,2.469,120,5.03,124,4.654,128,1.992,129,2.549,130,2.469,150,3.844,151,4.185,155,2.968,156,1.79,239,3.706,240,3.844,241,2.43,242,4.576,243,2.968,244,3.844,245,4.444,246,3.706,247,4.576,248,2.977,249,4.444,250,2.554]],["title/classes/CreatePotentialClassCommandHandler.html",[0,0.231,251,2.991]],["body/classes/CreatePotentialClassCommandHandler.html",[0,0.341,2,0.933,3,0.127,4,0.111,5,0.111,9,0.229,12,0.374,13,0.016,19,0.4,21,0.225,22,0.841,29,0.734,33,0.127,41,1.033,43,0.01,44,0.01,49,1.09,50,1.49,51,1.123,56,0.92,60,0.805,61,0.322,62,0.805,66,1.002,67,1.832,96,0.742,97,1.43,98,1.991,104,1.61,115,2.179,120,2.474,128,1.077,130,1.335,137,2.269,151,4.345,153,2.705,155,2.517,156,1.91,158,3.227,159,2.824,160,2.854,164,2.865,165,4.251,166,3.814,167,1.652,188,4.077,201,1.693,205,1.786,206,3.01,207,3.015,208,1.693,233,2.662,239,3.271,241,2.061,251,4.796,252,3.015,253,4.039,254,2.824,255,2.474,256,4.386,257,3.486,258,4.624,259,3.487,260,3.486,261,3.814,262,4.251,263,2.517,264,3.487,265,3.814,266,2.474,267,3.486,268,2.135,269,1.888,270,2.474,271,1.786,272,3.486,273,3.486,274,3.486,275,3.486,276,3.015,277,3.486,278,3.486,279,2.705]],["title/classes/CreatePotentialModuleCommand.html",[0,0.231,280,2.36]],["body/classes/CreatePotentialModuleCommand.html",[0,0.381,2,0.708,3,0.157,4,0.138,5,0.138,9,0.283,10,1.553,12,0.433,13,0.016,19,0.463,21,0.207,22,1.042,29,0.85,33,0.157,41,1.686,43,0.011,44,0.011,56,0.809,60,0.708,61,0.283,62,0.708,96,1.354,97,1.086,128,2.17,129,2.231,130,2.689,156,1.758,160,2.627,174,1.433,239,3.656,241,2.386,242,4.514,243,2.914,246,3.656,247,4.514,248,2.937,250,2.484,280,4.14,281,2.668,282,3.738,283,4.985,284,3.738,285,4.612,286,4.322,287,4.922,288,4.322,289,3.738]],["title/classes/CreatePotentialModuleCommandHandler.html",[0,0.231,290,2.991]],["body/classes/CreatePotentialModuleCommandHandler.html",[0,0.213,2,0.584,3,0.13,4,0.114,5,0.114,9,0.234,12,0.38,13,0.016,19,0.406,21,0.227,22,0.86,29,0.746,33,0.13,41,1.057,43,0.01,44,0.01,49,1.108,50,1.509,51,2.194,56,0.935,60,0.818,61,0.327,62,0.818,66,1.018,67,1.85,96,0.759,97,0.896,98,2.011,104,1.646,128,2.204,130,1.911,137,2.305,160,3.391,164,2.195,167,1.678,174,1.426,176,1.999,205,1.826,208,1.732,239,3.311,241,2.094,253,4.089,254,2.869,255,2.53,256,4.663,258,3.543,259,3.543,261,3.874,264,3.543,265,3.874,266,2.53,268,2.184,269,3.12,270,2.53,271,1.826,279,2.767,280,3.823,281,2.416,283,2.53,290,3.874,291,3.084,292,4.018,293,3.565,294,3.565,295,2.767,296,3.058,297,3.084,298,3.565,299,1.826,300,3.565,301,3.565,302,3.565,303,3.565,304,2.767,305,1.495,306,3.565]],["title/classes/CreatePotentialStudentCommand.html",[0,0.231,307,2.531]],["body/classes/CreatePotentialStudentCommand.html",[0,0.394,2,0.758,3,0.169,4,0.148,5,0.148,9,0.303,10,1.623,12,0.452,13,0.016,19,0.484,21,0.217,22,1.116,33,0.169,43,0.012,44,0.012,51,1.491,56,1.231,60,0.758,61,0.303,62,0.758,96,1.399,128,1.43,129,1.623,239,3.778,241,2.495,242,4.925,243,3.367,307,4.557,308,1.652,309,4.317,310,4.003,311,4.175,312,4.003,313,4.628,314,4.628,315,2.834,316,4.003,317,1.623,318,3.591,319,2.834,320,4.628,321,3.591,322,2.506,323,2.506]],["title/classes/CreatePotentialStudentCommandHandler.html",[0,0.231,324,2.735]],["body/classes/CreatePotentialStudentCommandHandler.html",[0,0.302,2,0.592,3,0.132,4,0.115,5,0.115,9,0.237,12,0.383,13,0.016,19,0.41,21,0.229,22,0.872,33,0.132,41,1.494,43,0.01,44,0.01,49,1.119,50,1.52,51,1.165,56,1.086,60,0.826,61,0.33,62,0.826,66,0.737,67,1.494,96,0.769,98,2.023,104,1.669,128,1.117,129,1.768,130,1.384,159,2.077,160,3.241,164,2.904,167,1.694,205,1.851,208,1.756,239,3.335,241,2.114,253,4.119,254,3.335,255,2.565,256,4.854,258,3.577,259,3.577,266,2.565,268,2.214,269,3.143,270,2.565,271,1.851,276,3.126,304,2.805,307,4.336,308,1.458,309,3.811,311,2.73,317,1.268,323,3.143,324,4.119,325,3.126,326,4.114,327,3.614,328,3.614,329,3.126,330,3.31,331,3.126,332,3.614,333,2.214,334,3.614,335,1.958,336,2.565,337,2.805,338,2.077,339,3.126,340,3.126,341,3.126,342,2.449,343,3.614,344,3.614,345,3.614,346,3.614,347,3.614,348,3.614,349,2.805,350,3.126,351,3.614]],["title/classes/CreatePotentialTestCommand.html",[0,0.231,352,2.531]],["body/classes/CreatePotentialTestCommand.html",[0,0.381,2,0.71,3,0.158,4,0.138,5,0.138,9,0.284,10,1.555,12,0.433,13,0.016,19,0.464,21,0.208,22,1.045,29,0.852,33,0.158,43,0.011,44,0.011,56,0.811,60,0.71,61,0.284,62,0.71,89,3.263,96,1.355,97,1.089,127,4.424,128,2.172,129,2.234,130,2.692,156,1.761,160,2.632,241,2.39,242,4.52,243,2.92,246,3.66,248,2.941,250,2.49,315,2.654,352,4.444,353,2.551,354,4.943,355,3.748,356,3.415,357,4.129,358,3.748,359,4.333,360,4.333,361,3.748]],["title/classes/CreatePotentialTestCommandHandler.html",[0,0.231,362,2.735]],["body/classes/CreatePotentialTestCommandHandler.html",[0,0.344,2,0.583,3,0.13,4,0.113,5,0.113,9,0.233,12,0.379,13,0.016,19,0.406,21,0.227,22,0.858,29,0.745,33,0.13,41,1.054,43,0.01,44,0.01,49,1.106,50,1.507,51,1.146,56,0.933,60,0.817,61,0.327,62,0.817,66,1.017,67,1.848,96,0.757,97,0.894,98,2.009,104,1.642,137,2.301,142,3.053,156,1.54,158,2.336,160,3.39,164,2.192,166,2.761,167,1.675,208,1.728,233,1.926,241,2.09,253,4.084,254,2.864,255,2.524,256,4.425,258,4.084,259,3.537,261,3.868,264,3.537,265,3.868,266,2.524,268,2.179,269,3.556,270,2.524,271,1.822,279,2.761,304,2.761,352,4.682,353,2.304,354,4.466,356,3.029,357,1.926,362,3.537,363,3.077,364,3.868,365,4.015,366,3.557,367,3.557,368,4.311,369,3.077,370,2.336,371,3.077,372,2.761,373,3.557,374,2.044,375,3.557,376,1.822,377,3.557,378,3.557,379,3.557]],["title/classes/CreateTeacherDto.html",[0,0.231,380,2.36]],["body/classes/CreateTeacherDto.html",[0,0.4,1,2.776,2,0.784,3,0.174,4,0.152,5,0.152,7,1.728,9,0.314,10,1.658,11,2.671,12,0.462,13,0.016,14,2.103,15,2.042,16,2.103,17,2.103,18,2.006,19,0.495,21,0.221,33,0.174,34,2.59,43,0.012,44,0.012,61,0.475,70,1.293,194,1.202,221,1.752,308,1.527,317,1.678,321,3.712,380,4.09,381,5.255,382,3.712,383,3.141,384,4.783,385,2.208,386,3.989,387,3.989,388,2.93,389,3.394,390,1.678]],["title/modules/DatabaseModule.html",[174,0.786,186,2.087]],["body/modules/DatabaseModule.html",[0,0.243,3,0.148,4,0.13,5,0.13,13,0.016,21,0.24,25,0.902,26,2.038,29,0.985,33,0.148,34,2.201,43,0.011,44,0.011,66,0.829,81,2.187,93,0.865,97,1.021,130,1.556,139,2.336,156,1.256,174,1.446,176,1.628,177,2.402,186,3.341,193,2.082,197,3.345,199,2.201,248,2.848,263,2.082,271,2.798,305,2.29,333,2.489,335,2.958,374,2.336,391,4.064,392,5.787,393,2.884,394,5.706,395,4.064,396,5.462,397,3.154,398,4.064,399,2.489,400,3.154,401,4.064,402,4.239,403,3.154,404,4.681,405,3.154,406,4.239,407,3.586,408,4.239,409,4.064,410,3.515,411,4.064,412,4.378,413,3.154]],["title/controllers/ModuleManagementController.html",[112,1.616,414,2.735]],["body/controllers/ModuleManagementController.html",[0,0.18,3,0.109,4,0.096,5,0.096,9,0.197,12,0.336,13,0.016,15,1.76,19,0.426,21,0.224,22,0.725,29,0.782,33,0.109,41,0.891,43,0.009,44,0.009,49,0.98,50,1.822,51,1.423,52,2.922,56,0.563,60,0.724,61,0.289,62,0.724,66,1.254,67,1.71,70,1.114,72,2.922,73,1.942,93,0.639,96,1.114,97,1.316,98,0.968,101,1.618,112,2.196,114,1.26,117,2.132,118,1.84,119,3.535,121,2.705,122,3.316,125,4.037,128,1.783,129,2.157,130,1.691,131,1.84,132,3.427,135,3.694,136,2.145,137,2.665,140,3.316,142,2.705,143,2.392,144,3.82,145,1.973,146,3.715,147,3.715,149,1.84,152,1.627,160,1.387,167,1.76,170,2.132,172,2.332,174,1.443,280,1.84,281,2.42,283,3.134,285,3.789,289,2.599,295,2.332,336,4.562,364,3.427,414,3.134,415,3.789,416,6.817,417,4.416,418,4.416,419,4.416,420,3.005,421,3.005,422,6.428,423,3.005,424,3.005,425,4.416,426,3.207,427,3.005,428,3.005,429,3.005,430,3.005,431,3.005]],["title/modules/ModuleManagementModule.html",[174,0.786,432,2.735]],["body/modules/ModuleManagementModule.html",[0,0.198,3,0.121,4,0.105,5,0.105,13,0.016,21,0.278,22,0.798,24,1.813,25,0.734,26,1.022,29,0.494,31,2.863,33,0.121,43,0.01,44,0.01,61,0.31,93,0.704,114,2.532,119,3.388,128,1.022,149,2.027,152,1.792,157,2.348,158,3.11,160,1.528,164,1.455,174,1.559,176,1.325,177,2.432,178,1.792,179,1.792,180,1.608,181,3.272,182,1.695,186,3.6,187,3.103,189,2.565,190,1.792,191,1.792,192,2.568,193,2.426,194,0.832,195,2.722,197,2.027,198,2.348,199,1.792,200,3.361,204,2.568,205,1.695,208,1.608,209,2.348,210,2.348,211,1.528,212,2.348,213,2.348,233,1.792,271,1.695,280,2.901,281,1.388,292,3.82,295,2.568,296,2.901,297,2.863,299,1.695,350,2.863,364,3.676,393,3.361,399,2.901,404,2.348,414,3.925,415,2.173,426,4.071,432,5.246,433,2.863,434,2.863,435,3.309,436,3.676,437,4.097,438,3.676,439,3.309,440,3.361,441,2.348,442,1.902,443,2.348,444,2.348,445,2.348,446,2.863]],["title/injectables/ModuleManagementRepository.html",[45,0.892,292,2.215]],["body/injectables/ModuleManagementRepository.html",[0,0.364,3,0.106,4,0.093,5,0.093,7,1.619,9,0.191,12,0.484,13,0.016,19,0.518,21,0.221,24,1.656,25,0.648,26,1.591,29,0.984,33,0.106,37,4.289,41,0.866,43,0.009,44,0.011,45,1,46,3.285,47,1.17,49,0.96,50,1.84,51,1.834,52,2.503,53,3.259,54,2.649,55,3.722,56,0.547,58,3.091,60,1.043,61,0.417,62,1.043,63,1.789,64,2.649,66,1.24,67,1.801,68,1.582,69,1.789,70,1.211,72,2.798,73,1.284,74,1.789,75,3.897,77,1.789,78,3.154,79,3.487,80,3.487,81,1.17,82,2.649,83,1.789,85,1.789,86,1.789,87,3.154,89,1.496,90,1.789,91,1.789,93,0.622,97,0.734,142,2.649,143,2.342,155,2.215,156,1.336,159,2.485,174,0.882,194,0.734,217,2.073,218,1.918,220,3.381,221,2.226,222,1.918,223,1.918,224,1.918,225,1.918,226,1.918,227,1.17,229,1.918,233,3.083,271,2.215,281,1.814,292,3.271,299,3.113,415,2.84,441,2.073,447,2.649,448,4.325,449,3.741,450,4.325,451,2.921,452,3.069,453,2.921]],["title/injectables/ModuleManagementService.html",[45,0.892,426,2.36]],["body/injectables/ModuleManagementService.html",[0,0.345,3,0.13,4,0.114,5,0.114,9,0.234,12,0.38,13,0.016,19,0.469,21,0.227,25,0.791,29,0.746,33,0.13,43,0.01,44,0.01,45,1.155,47,1.428,49,1.108,50,1.783,52,2.195,56,0.935,60,0.818,61,0.327,62,0.818,66,1.273,67,1.85,70,1.226,72,2.994,73,2.195,81,1.999,93,0.759,96,0.759,97,1.255,101,1.829,119,3.823,121,3.058,122,3.587,131,3.058,134,3.543,135,3.914,136,2.425,137,2.882,139,2.869,140,3.587,142,3.058,143,2.704,157,3.543,167,1.198,174,1.34,205,1.826,227,1.428,230,2.53,232,3.084,233,2.704,234,3.084,235,3.084,281,2.618,292,4.018,299,1.826,333,2.184,368,4.318,415,4.099,426,3.058,437,4.318,441,2.53,452,2.53,454,4.992,455,3.565,456,4.318,457,3.084,458,3.565,459,3.565]],["title/classes/PotentialClass.html",[0,0.231,201,1.872]],["body/classes/PotentialClass.html",[0,0.271,1,2.633,2,0.741,3,0.165,4,0.144,5,0.144,7,1.666,9,0.296,10,1.599,11,2.577,12,0.494,13,0.016,14,1.988,15,2.185,16,1.988,17,1.988,18,1.896,19,0.529,21,0.237,23,3.736,24,2.243,25,1.003,33,0.213,43,0.012,44,0.012,61,0.426,70,1.247,98,1.457,115,2.489,194,1.136,201,2.847,202,3.208,211,3.176,221,1.656,308,1.136,322,3.174,323,3.521,342,3.158,385,2.087,460,3.509,461,3.589,462,4.521,463,4.521,464,2.769,465,3.911,466,3.911]],["title/classes/PotentialClassRegisteredEvent.html",[0,0.231,206,2.36]],["body/classes/PotentialClassRegisteredEvent.html",[0,0.416,2,0.763,3,0.17,4,0.148,5,0.148,7,1.698,8,4.329,9,0.305,10,1.629,12,0.454,13,0.016,19,0.486,21,0.17,22,1.123,29,0.695,33,0.17,43,0.012,44,0.012,56,0.871,60,0.763,61,0.305,62,0.763,96,1.403,97,1.17,115,2.524,120,5.104,128,2.037,129,2.313,143,3.571,155,3.059,156,1.845,206,4.26,243,3.059,244,4.027,250,2.675,349,5.116,467,5.116,468,3.057,469,3.613,470,6.593,471,4.027,472,3.304]],["title/classes/PotentialClassRegisteredEventHandler.html",[0,0.231,473,2.991]],["body/classes/PotentialClassRegisteredEventHandler.html",[0,0.305,2,0.601,3,0.134,4,0.117,5,0.117,9,0.24,12,0.387,13,0.016,19,0.414,21,0.25,22,0.884,25,0.813,26,1.807,29,0.76,33,0.134,41,1.086,43,0.01,44,0.01,46,1.78,49,1.129,50,1.531,56,0.953,58,3.337,60,0.834,61,0.334,62,0.834,66,0.748,67,1.508,96,1.083,97,1.469,98,1.181,104,1.692,115,2.239,155,2.607,156,1.952,159,2.925,164,2.238,167,1.711,194,0.921,201,3.423,203,2.601,206,4.4,208,1.78,216,3.17,227,1.468,236,3.17,241,2.134,262,4.402,263,2.607,305,1.537,336,3.612,338,2.925,442,2.106,467,4.538,473,4.903,474,2.407,475,4.15,476,3.612,477,3.665,478,3.588,479,3.17,480,5.089,481,5.089,482,3.612,483,3.665,484,2.601,485,3.665,486,2.601,487,3.612,488,2.106,489,3.17,490,3.17,491,3.17]],["title/classes/PotentialModule.html",[0,0.231,299,1.974]],["body/classes/PotentialModule.html",[0,0.414,1,2.438,2,0.612,3,0.136,4,0.119,5,0.119,7,1.466,9,0.245,10,1.407,11,2.267,12,0.484,13,0.016,14,1.642,15,2.14,16,1.642,17,1.642,18,1.566,19,0.518,21,0.232,23,3.66,24,2.558,25,0.829,26,1.825,29,0.558,33,0.188,43,0.01,44,0.01,61,0.438,70,1.097,98,1.203,115,1.43,128,2.135,174,1.41,194,0.939,201,2.869,211,3.191,221,1.368,281,2.671,299,3.423,308,0.939,322,3.199,385,1.725,390,2.531,440,2.651,447,3.617,461,3.617,464,2.288,492,2.899,493,3.735,494,4.52,495,3.735,496,3.735,497,3.231,498,3.231,499,3.231]],["title/classes/PotentialModuleRegisteredEvent.html",[0,0.231,296,2.36]],["body/classes/PotentialModuleRegisteredEvent.html",[0,0.42,2,0.704,3,0.157,4,0.137,5,0.137,7,1.918,8,4.604,9,0.282,10,1.547,12,0.431,13,0.016,19,0.462,21,0.157,22,1.036,29,0.847,33,0.157,41,1.68,43,0.011,44,0.011,56,0.805,60,0.704,61,0.282,62,0.704,96,1.35,97,1.08,128,2.166,129,2.225,130,2.429,156,1.752,164,2.493,174,1.43,243,2.904,246,3.646,247,4.502,248,2.929,250,2.47,281,2.66,283,4.976,284,3.718,287,4.904,296,4.131,468,2.822,469,3.336,471,3.718,472,3.05,500,4.923,501,5.669,502,4.904]],["title/classes/PotentialModuleRegisteredEventHandler.html",[0,0.231,503,2.991]],["body/classes/PotentialModuleRegisteredEventHandler.html",[0,0.229,2,0.627,3,0.139,4,0.122,5,0.122,9,0.251,12,0.399,13,0.016,19,0.427,21,0.254,22,0.923,25,0.849,26,1.182,29,0.783,33,0.139,41,1.134,43,0.011,44,0.011,46,1.859,49,1.163,50,1.566,56,0.981,58,3.125,60,0.859,61,0.344,62,0.859,66,1.069,67,1.907,96,1.116,97,0.961,98,1.233,104,1.767,137,2.421,142,3.211,156,1.62,164,3.061,167,1.762,174,0.78,194,0.961,208,1.859,227,1.532,241,2.199,269,2.839,281,2.508,296,4.563,299,3.296,336,3.721,338,3.013,441,2.715,446,3.309,457,3.309,474,2.512,475,4.244,476,3.721,478,3.463,482,3.721,484,2.715,487,2.715,489,3.309,490,3.309,491,3.309,500,4.642,503,4.069,504,3.826,505,3.826,506,3.826,507,5.243,508,3.826]],["title/classes/PotentialStudent.html",[0,0.231,342,1.872]],["body/classes/PotentialStudent.html",[0,0.311,1,2.448,2,0.618,3,0.137,4,0.12,5,0.12,7,1.476,9,0.247,10,1.416,11,2.282,12,0.51,13,0.016,14,1.658,15,2.254,16,1.658,17,1.658,18,1.581,19,0.546,21,0.189,23,3.854,24,2.567,25,0.837,26,1.165,33,0.189,34,3.463,43,0.01,44,0.01,51,1.215,61,0.419,70,1.539,98,1.215,194,0.948,211,3.34,221,1.381,305,2.177,308,1.685,317,2.352,322,3.918,342,3.106,385,1.741,461,3.917,464,3.179,488,3.675,509,2.926,510,5.531,511,5.531,512,3.771,513,3.771,514,3.771,515,3.771,516,2.676,517,5.531,518,2.676,519,3.262]],["title/classes/PotentialStudentRegisteredEvent.html",[0,0.231,330,2.531]],["body/classes/PotentialStudentRegisteredEvent.html",[0,0.403,2,0.796,3,0.177,4,0.155,5,0.155,7,1.745,8,4.639,9,0.318,10,1.674,12,0.466,13,0.016,19,0.499,21,0.177,22,1.171,33,0.177,43,0.012,44,0.012,56,1.148,60,0.796,61,0.318,62,0.796,96,1.431,241,2.573,243,3.142,250,2.791,308,1.69,311,3.826,312,4.201,317,1.704,318,3.769,330,4.639,389,3.447,468,3.189,469,3.769,472,3.447,520,5.219,521,7.064,522,4.857]],["title/classes/PotentialStudentRegisteredEventHandler.html",[0,0.231,523,2.735]],["body/classes/PotentialStudentRegisteredEventHandler.html",[0,0.305,2,0.602,3,0.134,4,0.117,5,0.117,9,0.241,12,0.388,13,0.016,19,0.415,21,0.25,22,0.886,25,0.815,26,1.135,33,0.134,43,0.01,44,0.01,49,1.131,50,1.533,51,1.184,53,1.882,56,0.954,58,3.072,60,0.835,61,0.334,62,0.835,66,0.749,67,1.511,96,1.085,98,1.886,104,2.354,164,2.921,167,1.713,194,0.923,208,1.785,227,1.471,241,2.138,248,1.696,268,2.25,269,1.99,305,1.541,308,1.471,311,2.761,317,1.289,318,2.851,330,4.152,335,1.99,337,2.851,338,3.818,339,3.178,340,3.178,341,3.178,342,1.785,390,2.473,442,2.111,474,2.412,475,4.488,476,4.155,478,3.425,482,3.618,484,2.607,486,2.607,487,3.618,488,2.111,520,4.543,523,4.155,524,3.178,525,3.674,526,3.674,527,2.111,528,3.674,529,3.178,530,3.674,531,3.674,532,3.674,533,3.178,534,2.851,535,2.412,536,3.674,537,3.674,538,3.674,539,3.674,540,3.674,541,3.674,542,3.178]],["title/classes/PotentialTest.html",[0,0.231,376,1.974]],["body/classes/PotentialTest.html",[0,0.183,1,2.228,2,0.501,3,0.111,4,0.097,5,0.097,7,1.272,9,0.2,10,1.22,11,1.967,12,0.547,13,0.016,14,1.344,15,2.245,16,1.344,17,2.325,18,1.282,19,0.544,21,0.163,23,3.839,24,2.371,25,0.679,26,1.634,29,0.457,33,0.163,43,0.009,44,0.009,61,0.406,70,1.511,81,2.33,98,0.985,128,2.249,174,1.263,194,0.768,211,3.361,221,1.12,322,3.503,353,2.676,356,3.536,376,3.172,385,1.412,447,3.239,461,3.962,464,1.873,494,4.13,543,2.373,544,5.356,545,4.805,546,5.356,547,5.779,548,3.058,549,3.869,550,4.516,551,3.058,552,3.471,553,3.058,554,3.869,555,3.869,556,3.058,557,3.058,558,3.058,559,2.373,560,2.17,561,2.645]],["title/classes/PotentialTestRegisteredEvent.html",[0,0.231,370,2.531]],["body/classes/PotentialTestRegisteredEvent.html",[0,0.384,2,0.722,3,0.161,4,0.14,5,0.14,7,1.639,8,4.217,9,0.289,10,1.573,12,0.438,13,0.016,19,0.469,21,0.161,22,1.063,29,0.861,33,0.161,43,0.012,44,0.012,56,0.825,60,0.722,61,0.289,62,0.722,89,3.289,96,1.367,97,1.107,127,4.472,128,2.184,129,2.253,156,1.781,164,2.534,243,2.952,246,3.69,248,2.965,250,2.532,349,4.984,353,2.572,356,3.434,357,3.828,358,3.812,370,4.472,468,2.894,472,3.127,502,4.985,562,4.984,563,5.763,564,4.407,565,4.407]],["title/classes/PotentialTestRegisteredEventHandler.html",[0,0.231,566,2.735]],["body/classes/PotentialTestRegisteredEventHandler.html",[0,0.227,2,0.621,3,0.138,4,0.121,5,0.121,9,0.248,12,0.396,13,0.016,19,0.424,21,0.253,22,0.914,25,0.841,26,1.171,33,0.138,41,1.123,43,0.01,44,0.01,49,1.156,50,1.558,56,0.709,58,3.263,60,0.853,61,0.341,62,0.853,66,0.773,67,1.544,96,1.363,98,1.917,104,2.405,164,2.616,167,2.154,194,0.952,208,1.841,227,1.517,241,2.184,268,2.321,269,2.052,305,1.589,338,2.993,353,2.383,356,2.53,357,2.052,370,4.207,376,2.668,390,2.248,442,2.178,474,2.488,475,4.223,476,3.696,478,3.569,479,3.278,482,3.696,484,2.689,486,2.689,487,2.689,524,3.278,527,2.178,533,3.278,534,2.941,535,2.488,542,3.278,545,2.941,552,2.941,562,4.618,566,3.696,567,3.789,568,3.789,569,3.278,570,3.278,571,3.789,572,3.789,573,3.789,574,3.789,575,3.789,576,3.789,577,3.789,578,3.278,579,3.789,580,3.789,581,3.789]],["title/injectables/RabbitmqService.html",[45,0.892,478,1.872]],["body/injectables/RabbitmqService.html",[0,0.296,3,0.128,4,0.112,5,0.112,9,0.231,12,0.377,13,0.016,19,0.403,21,0.209,29,0.977,33,0.128,43,0.01,44,0.01,45,1.146,47,1.412,49,1.099,56,1.072,60,0.812,61,0.407,62,0.812,66,1.267,67,2.066,70,1.514,93,0.75,96,0.75,97,1.439,101,1.291,137,2.868,155,1.806,156,1.769,157,4.064,167,1.185,305,1.478,333,3.034,335,1.909,338,4.409,412,2.502,442,3.899,456,4.284,478,3.017,486,3.515,582,3.049,583,5.726,584,3.525,585,7.114,586,3.525,587,5.266,588,6.543,589,4.953,590,3.525,591,4.953,592,4.444,593,5.409,594,6.785,595,2.315,596,3.525,597,3.049,598,3.525,599,2.736,600,3.525,601,3.525,602,3.525]],["title/modules/RmqModule.html",[174,0.786,187,1.872]],["body/modules/RmqModule.html",[0,0.175,3,0.106,4,0.093,5,0.093,12,0.222,13,0.016,19,0.237,21,0.221,29,0.95,33,0.106,34,1.579,43,0.009,44,0.009,49,0.647,60,0.478,61,0.398,62,0.478,66,1.239,70,0.62,81,1.73,93,0.62,97,1.085,101,1.068,130,1.653,139,1.675,156,0.901,174,1.531,176,1.168,177,2.262,178,1.579,179,1.579,180,1.416,181,2.635,182,2.913,187,3.353,189,2.339,190,1.579,191,1.579,193,1.493,199,1.579,248,2.375,263,1.493,305,1.223,319,3.151,333,1.786,335,2.786,374,2.956,392,5.357,393,3.65,397,2.263,399,1.786,400,2.263,402,3.352,403,2.263,404,4.796,405,2.263,406,3.352,407,2.836,408,2.263,412,3.65,413,2.263,438,3.352,442,3.884,444,3.65,478,3.503,587,4.414,592,2.263,593,3.352,595,1.914,599,3.352,603,2.522,604,2.522,605,2.522,606,2.263,607,3.736,608,2.915,609,4.513,610,2.915,611,4.919,612,4.919,613,4.919,614,4.449,615,3.736,616,2.522,617,2.522,618,5.252,619,2.522,620,2.522,621,2.522,622,2.522,623,2.522,624,2.522,625,2.522,626,2.522,627,2.522]],["title/interfaces/RmqModuleOptions.html",[319,2.36,609,2.735]],["body/interfaces/RmqModuleOptions.html",[0,0.194,3,0.118,4,0.103,5,0.103,9,0.212,10,1.273,12,0.246,13,0.016,21,0.218,29,0.986,33,0.118,34,1.755,43,0.009,44,0.009,61,0.446,66,1.115,70,1.163,81,1.868,93,0.69,97,1.172,101,1.187,130,1.786,139,1.862,156,1.001,174,1.515,177,1.425,181,1.66,182,2.39,187,2.656,193,1.66,199,1.755,248,2.524,305,1.359,319,3.348,333,1.985,335,2.961,374,2.681,392,5.502,393,3.879,397,2.515,399,1.985,400,2.515,402,3.621,403,2.515,404,4.684,405,2.515,406,3.621,407,3.064,408,2.515,412,3.879,413,2.515,438,2.515,442,4,444,3.311,478,2.656,587,4.641,592,2.515,593,3.621,595,2.128,599,3.621,606,2.515,607,2.803,609,4.497,611,4.036,612,4.036,613,4.729,614,4.729,615,4.036,616,2.803,617,2.803,618,5.481,619,2.803,620,2.803,621,2.803,622,2.803,623,2.803,624,2.803,625,2.803,626,2.803,627,2.803,628,3.241]],["title/controllers/StudentManagementController.html",[112,1.616,629,2.735]],["body/controllers/StudentManagementController.html",[0,0.326,2,0.663,3,0.147,4,0.129,5,0.129,9,0.265,12,0.307,13,0.016,15,1.359,19,0.329,21,0.258,22,0.975,33,0.147,41,1.613,43,0.011,44,0.011,49,1.208,50,1.611,51,1.303,56,0.757,60,0.663,61,0.265,62,0.663,66,0.825,93,0.86,96,1.309,98,1.754,101,1.994,112,1.695,114,1.695,117,2.869,118,2.476,119,3.334,125,4.04,129,2.158,136,1.964,145,2.655,146,4.367,147,4.367,149,2.476,152,2.19,160,2.841,161,3.497,167,2.068,170,2.869,176,1.619,254,2.323,263,2.071,305,1.695,307,3.574,308,1.368,309,2.655,311,3.565,315,2.476,316,3.497,317,1.418,323,3.721,329,3.497,449,3.497,488,2.323,629,4.367,630,3.574,631,5.443,632,4.043,633,4.043,634,3.769,635,4.043,636,3.138,637,3.497,638,4.043,639,4.043]],["title/modules/StudentManagementModule.html",[174,0.786,640,2.735]],["body/modules/StudentManagementModule.html",[0,0.29,2,0.56,3,0.125,4,0.109,5,0.109,13,0.016,21,0.277,22,0.824,24,1.855,25,0.758,33,0.125,43,0.01,44,0.01,61,0.369,93,0.727,114,2.361,149,2.093,152,1.851,174,1.37,176,1.941,177,1.503,178,1.851,179,1.851,180,1.66,181,3.138,182,1.75,186,3.638,187,3.142,189,2.625,190,1.851,191,1.851,192,2.652,193,2.884,194,0.859,195,2.785,196,2.425,197,2.093,198,2.425,199,1.851,200,3.439,204,2.652,205,1.75,209,2.425,210,2.425,211,1.578,212,2.425,213,2.425,263,1.75,308,0.859,309,2.244,317,1.199,323,3.049,324,3.439,326,3.86,331,2.956,342,1.66,390,1.199,399,3.448,443,2.425,445,2.425,518,3.439,523,3.439,527,1.964,535,2.244,629,3.996,630,2.244,634,4.114,640,5.392,641,2.956,642,2.956,643,2.956,644,4.114,645,2.652,646,2.956,647,3.417,648,2.785,649,3.417,650,3.417]],["title/injectables/StudentManagementRepository.html",[45,0.892,326,2.215]],["body/injectables/StudentManagementRepository.html",[0,0.325,3,0.117,4,0.102,5,0.102,7,1.315,9,0.21,12,0.5,13,0.016,19,0.535,21,0.23,25,0.71,26,0.989,29,0.942,33,0.117,37,4.349,41,0.949,43,0.009,44,0.012,45,1.07,46,3.434,47,1.282,49,1.026,50,1.879,51,1.916,52,2.614,53,3.366,54,2.832,55,3.863,56,0.866,58,2.888,60,1.077,61,0.431,62,1.077,63,1.961,64,2.832,66,1.286,67,1.869,68,1.734,69,1.961,70,1.265,72,2.89,73,1.408,74,1.961,75,4.025,77,1.961,78,3.325,79,3.642,80,3.642,81,1.282,82,2.832,83,1.961,85,1.961,86,1.961,87,3.325,89,1.64,90,1.961,91,1.961,93,0.681,194,0.804,217,2.272,218,2.102,220,3.565,221,2.31,222,2.102,223,2.102,224,2.102,225,2.102,226,2.102,227,1.282,229,2.102,308,1.162,317,1.123,326,3.12,342,1.555,630,3.037,645,2.484,651,3.201,652,3.201,653,2.102,654,3.201]],["title/injectables/StudentManagementService.html",[45,0.892,634,2.36]],["body/injectables/StudentManagementService.html",[0,0.358,3,0.17,4,0.149,5,0.149,9,0.306,12,0.355,13,0.016,19,0.487,21,0.254,25,1.036,33,0.17,43,0.012,44,0.012,45,1.384,47,1.87,49,1.328,50,1.729,56,1.12,60,0.765,61,0.306,62,0.765,66,0.952,93,0.994,96,0.994,101,1.71,122,4.001,136,2.268,140,2.683,167,1.569,205,2.392,227,1.87,230,3.313,308,1.659,317,1.638,323,2.529,326,4.232,335,2.529,342,2.268,630,4.335,634,4.044,645,3.624,655,4.669,656,4.669,657,4.669,658,4.669,659,4.669]],["title/controllers/StudyProgramController.html",[112,1.616,660,2.735]],["body/controllers/StudyProgramController.html",[0,0.307,3,0.187,4,0.163,5,0.163,9,0.336,13,0.016,15,1.723,19,0.417,21,0.231,33,0.187,43,0.013,44,0.013,49,1.408,66,1.046,70,1.35,93,1.091,96,1.091,101,1.878,112,2.15,114,2.15,118,3.14,488,3.647,660,4.504,661,4.167,662,4.504,663,3.979,664,4.925,665,6.23,666,5.127,667,4.221,668,3.638,669,5.127,670,4.435,671,5.127]],["title/modules/StudyProgramModule.html",[174,0.786,672,2.735]],["body/modules/StudyProgramModule.html",[0,0.3,3,0.183,4,0.16,5,0.16,13,0.016,21,0.249,33,0.183,43,0.013,44,0.013,93,1.067,114,2.624,174,1.392,176,2.007,177,2.204,178,2.715,179,2.715,180,2.435,181,3.494,182,2.567,189,3.389,190,2.715,191,2.715,193,2.567,488,3.596,660,4.842,661,3.291,662,3.557,667,4.593,668,3.557,672,5.322,673,4.336,674,4.336,675,4.336,676,4.336]],["title/injectables/StudyProgramService.html",[45,0.892,667,2.36]],["body/injectables/StudyProgramService.html",[0,0.324,3,0.197,4,0.172,5,0.172,9,0.355,13,0.016,19,0.44,21,0.197,33,0.197,43,0.013,44,0.013,45,1.517,47,2.167,49,1.455,66,1.104,70,1.396,93,1.151,101,1.982,534,4.199,661,4.306,662,4.654,665,6.346,667,4.017,677,4.199,678,5.41,679,5.41]],["title/classes/Teacher.html",[0,0.231,390,1.352]],["body/classes/Teacher.html",[0,0.353,1,2.642,2,0.747,3,0.166,4,0.145,5,0.145,7,1.676,9,0.299,10,1.608,11,2.591,12,0.448,13,0.016,14,2.005,15,1.981,16,2.005,17,2.005,18,1.912,19,0.48,21,0.215,23,3.387,24,2.736,25,1.012,26,1.409,33,0.215,34,2.47,43,0.012,44,0.012,51,1.469,61,0.452,70,1.254,98,1.469,194,1.146,211,2.721,221,1.671,305,2.471,308,1.481,317,2.067,322,3.192,385,2.106,390,2.421,461,2.793,464,3.609,516,3.236,517,3.945,648,2.621,680,3.539,681,4.56,682,3.539]],["title/classes/Teacher-1.html",[0,0.192,390,1.127,683,2.78]],["body/classes/Teacher-1.html",[0,0.268,1,2.625,2,0.734,3,0.163,4,0.143,5,0.143,7,1.657,9,0.294,10,1.59,11,2.562,12,0.443,13,0.016,14,1.971,15,1.958,16,1.971,17,1.971,18,1.88,19,0.474,21,0.212,23,3.349,24,2.721,25,0.995,26,2.001,29,0.67,33,0.212,43,0.012,44,0.012,61,0.466,70,1.24,98,1.444,194,1.126,211,2.691,221,1.642,322,2.428,353,2.334,385,2.07,390,2.602,447,3.966,461,2.745,464,2.745,559,3.479,648,2.576,682,3.479,684,3.479,685,4.482]],["title/controllers/TeacherController.html",[112,1.616,686,2.735]],["body/controllers/TeacherController.html",[0,0.302,2,0.594,3,0.132,4,0.115,5,0.115,9,0.237,12,0.384,13,0.016,15,1.953,19,0.473,21,0.249,33,0.132,43,0.01,44,0.01,49,1.12,50,1.792,51,1.872,53,1.856,60,0.827,61,0.331,62,0.827,66,1.185,68,1.962,93,0.771,96,0.771,101,2.129,104,1.673,112,1.519,114,1.519,118,2.219,125,4.127,129,2.038,136,1.76,145,2.379,176,1.451,243,2.976,248,1.673,254,2.901,263,1.856,269,3.147,308,1.58,315,2.219,317,1.271,337,2.812,338,3.612,380,4.192,390,1.771,595,2.379,636,3.918,653,3.315,670,3.134,686,4.124,687,3.134,688,5.437,689,5.437,690,3.134,691,3.623,692,3.623,693,5.049,694,3.623,695,3.623,696,4.048,697,3.134,698,2.812,699,3.623,700,3.623,701,3.623,702,3.623,703,3.623,704,3.623,705,3.623,706,3.623,707,3.623,708,3.623,709,5.049,710,3.623,711,3.623,712,3.623,713,3.623,714,3.623,715,3.623,716,3.623]],["title/modules/TeacherModule.html",[174,0.786,644,2.36]],["body/modules/TeacherModule.html",[0,0.323,2,0.654,3,0.145,4,0.127,5,0.127,13,0.016,21,0.274,24,2.066,25,0.886,33,0.145,43,0.011,44,0.011,61,0.401,93,0.849,114,2.564,174,1.247,176,2.448,177,1.755,178,2.162,179,2.162,180,1.939,181,3.354,182,2.045,187,3.425,189,2.923,190,2.162,191,2.162,193,2.764,194,1.003,195,3.101,196,2.833,197,3.305,263,2.045,308,1.003,317,1.4,322,2.162,390,1.893,443,2.833,444,3.829,445,2.833,527,2.294,535,2.621,644,4.641,648,3.101,686,4.338,696,4.318,697,3.453,717,3.453,718,3.992,719,3.453,720,4.318,721,3.992,722,3.992,723,3.453,724,3.992,725,4.668]],["title/injectables/TeacherRepository.html",[45,0.892,720,2.36]],["body/injectables/TeacherRepository.html",[0,0.356,3,0.116,4,0.102,5,0.102,7,1.313,9,0.209,12,0.499,13,0.016,19,0.535,21,0.23,25,0.709,26,0.987,29,0.941,33,0.116,37,4.348,41,0.947,43,0.009,44,0.012,45,1.068,46,3.432,47,1.279,49,1.025,50,1.878,51,1.914,52,2.612,53,3.364,54,2.828,55,3.86,56,1.015,58,2.886,60,1.076,61,0.431,62,1.076,63,1.957,64,2.828,66,1.285,67,1.868,68,1.73,69,1.957,70,1.264,72,2.888,73,1.405,74,1.957,75,4.023,77,1.957,78,3.321,79,3.638,80,3.638,81,1.279,82,2.828,83,1.957,85,1.957,86,1.957,87,3.321,89,1.636,90,1.957,91,1.957,93,0.68,194,0.803,218,2.098,220,3.561,221,2.308,222,2.098,223,2.098,224,2.098,225,2.098,226,2.098,227,1.279,229,2.098,308,1.16,317,1.121,390,1.121,527,1.836,570,2.763,653,2.098,720,3.638,726,2.763,727,3.195]],["title/injectables/TeacherService.html",[45,0.892,696,2.36]],["body/injectables/TeacherService.html",[0,0.332,3,0.151,4,0.132,5,0.132,9,0.272,12,0.421,13,0.016,19,0.508,21,0.253,25,0.921,33,0.151,43,0.011,44,0.011,45,1.281,47,1.662,49,1.229,50,1.867,51,2.143,53,2.837,56,1.037,60,0.908,61,0.363,62,0.908,66,1.13,93,0.883,96,0.883,101,1.52,104,1.916,136,2.016,167,1.395,227,1.662,308,1.672,315,2.542,317,1.456,335,3.603,380,4.245,390,1.943,527,2.385,529,3.59,653,3.637,688,3.59,689,5.754,690,4.791,696,3.819,698,3.221,720,4.53,723,3.59,728,3.59,729,4.15,730,4.15,731,4.15,732,4.15,733,4.15,734,4.15]],["title/controllers/TestProgramController.html",[112,1.616,735,2.735]],["body/controllers/TestProgramController.html",[0,0.313,3,0.109,4,0.095,5,0.095,9,0.196,12,0.335,13,0.016,15,1.756,19,0.425,21,0.224,22,0.722,29,0.78,33,0.109,41,1.548,43,0.009,44,0.009,49,0.977,50,1.82,52,1.316,56,0.56,60,0.722,61,0.289,62,0.722,66,1.309,67,1.903,68,2.385,70,1.112,72,2.918,73,2.533,81,1.764,93,0.637,96,1.112,97,1.313,98,0.964,101,1.613,112,2.191,114,1.255,118,1.833,121,2.697,122,3.31,125,3.43,128,2.341,129,2.153,130,2.205,131,1.833,132,3.418,136,2.139,137,2.964,145,1.966,146,3.707,147,3.707,152,1.621,158,2.892,160,1.382,167,1.756,170,2.124,172,2.323,174,0.898,315,1.833,352,1.966,353,2.307,356,3.639,357,3.477,361,2.589,369,2.589,636,4.982,663,2.323,664,4.47,668,2.124,735,3.125,736,3.782,737,4.982,738,2.993,739,2.993,740,2.993,741,4.403,742,2.993,743,4.403,744,3.2,745,2.993,746,2.993,747,2.993,748,2.993,749,2.993]],["title/modules/TestProgramModule.html",[174,0.786,750,2.735]],["body/modules/TestProgramModule.html",[0,0.205,2,0.56,3,0.125,4,0.109,5,0.109,13,0.016,21,0.28,22,0.824,24,1.855,25,0.758,33,0.125,43,0.01,44,0.01,61,0.369,93,0.727,114,2.361,152,1.851,174,1.148,176,2.255,177,1.503,178,1.851,179,1.851,180,1.66,181,2.884,182,1.75,186,3.638,187,3.142,189,2.625,190,1.851,191,1.851,193,2.482,194,0.859,195,2.785,196,2.425,197,2.968,198,2.425,199,1.851,200,3.439,209,2.425,210,2.425,211,1.578,212,2.425,213,2.425,263,1.75,308,0.859,353,1.369,356,2.735,362,3.439,365,3.86,371,2.956,372,2.652,374,1.964,376,1.75,390,1.199,399,2.093,443,2.425,445,2.425,527,1.964,535,2.244,560,3.439,566,3.439,644,2.093,646,2.956,648,2.785,668,2.425,675,2.956,676,2.956,725,4.87,735,3.996,736,2.244,744,4.114,750,5.392,751,2.956,752,3.417,753,2.956,754,3.417,755,3.417,756,2.652,757,3.417,758,3.417,759,3.417,760,3.417,761,4.846,762,3.417,763,3.417]],["title/injectables/TestProgramRepository.html",[45,0.892,365,2.215]],["body/injectables/TestProgramRepository.html",[0,0.419,3,0.099,4,0.086,5,0.086,7,1.559,9,0.178,12,0.47,13,0.016,19,0.504,21,0.214,25,0.601,26,1.521,29,0.96,33,0.099,37,4.236,41,0.803,43,0.008,44,0.011,45,1.269,46,3.403,47,1.085,49,1.217,50,1.806,51,1.767,52,2.411,53,3.169,54,2.504,55,3.605,56,1.026,58,3.212,60,1.014,61,0.406,62,1.014,63,1.659,64,2.504,66,1.2,67,1.744,68,1.467,69,1.659,70,1.167,72,2.721,73,1.191,74,1.659,75,3.79,77,1.659,78,3.015,79,3.359,80,3.359,81,1.085,82,2.504,83,1.659,85,1.659,86,1.659,87,3.015,89,1.388,90,1.659,91,1.659,93,0.576,97,0.681,129,1.434,130,1.037,143,2.214,159,2.829,162,3.536,194,1.237,218,1.779,220,3.601,221,2.156,222,1.779,223,1.779,224,1.779,225,1.779,226,1.779,227,1.637,229,1.779,271,2.094,305,1.714,353,1.637,365,3.556,374,2.349,376,3.387,447,3.934,452,3.494,516,1.923,569,2.343,578,2.343,653,1.779,736,2.684,756,2.102,764,2.343,765,3.173,766,3.536,767,4.088,768,2.709,769,4.088,770,2.709,771,2.709,772,2.709,773,2.709]],["title/injectables/TestProgramService.html",[45,0.892,744,2.36]],["body/injectables/TestProgramService.html",[0,0.408,3,0.119,4,0.104,5,0.104,9,0.214,12,0.356,13,0.016,19,0.447,21,0.218,25,0.724,29,0.819,33,0.119,43,0.009,44,0.009,45,1.387,47,1.306,49,1.331,50,1.732,52,2.061,56,1.123,60,0.768,61,0.307,62,0.768,66,1.223,67,1.777,70,1.167,72,2.908,73,2.061,81,1.877,93,0.694,96,0.694,97,1.178,101,1.717,121,2.87,122,3.446,128,1.448,129,1.644,131,2.87,134,3.326,135,3.446,136,2.277,137,2.769,139,2.693,140,3.446,143,2.538,156,1.448,159,2.693,167,1.096,227,1.877,233,2.538,254,2.693,264,3.326,271,2.4,305,1.965,353,2.402,356,3.449,365,4.08,372,2.531,374,2.693,376,1.67,452,3.326,516,2.314,664,5.411,677,2.531,736,3.938,737,3.637,744,4.051,756,2.531,766,4.054,774,4.686,775,3.261,776,3.261,777,3.261,778,4.686,779,3.261,780,3.261,781,3.261,782,3.261]],["title/classes/UpdateTeacherDto.html",[0,0.231,783,2.991]],["body/classes/UpdateTeacherDto.html",[0,0.398,2,0.908,3,0.202,4,0.177,5,0.177,7,1.577,13,0.016,21,0.242,28,4.302,33,0.202,43,0.013,44,0.013,51,1.786,308,1.393,317,1.945,380,3.396,382,4.302,389,3.934,698,4.302,783,5.535,784,4.795,785,5.544,786,4.795,787,6.656]],["title/classes/applyClassDto.html",[0,0.231,124,2.531]],["body/classes/applyClassDto.html",[0,0.436,1,2.625,2,0.734,3,0.163,4,0.143,5,0.143,7,1.657,9,0.294,10,1.59,11,2.562,12,0.492,13,0.016,14,1.971,15,1.958,16,1.971,17,1.971,18,1.88,19,0.527,21,0.236,33,0.163,43,0.012,44,0.012,61,0.466,70,1.24,115,2.479,124,3.826,128,1.8,194,1.126,221,1.642,308,1.126,323,3.849,342,3.145,383,2.943,385,2.07,386,3.826,387,3.826,388,2.745,465,3.877,637,5.04,788,3.877,789,4.482,790,4.482,791,5.04]],["title/classes/applyModuleDto.html",[0,0.231,285,2.531]],["body/classes/applyModuleDto.html",[0,0.444,1,2.697,2,0.652,3,0.145,4,0.127,5,0.127,7,1.86,9,0.261,10,1.47,11,2.369,12,0.497,13,0.016,14,1.751,15,1.81,16,1.751,17,1.751,18,1.67,19,0.533,21,0.238,29,0.595,33,0.145,43,0.011,44,0.011,61,0.448,70,1.146,115,1.524,129,1.89,174,1.494,194,1.001,201,2.966,221,1.459,246,3.096,247,3.823,248,2.487,281,2.743,285,3.537,308,1.001,383,2.614,385,1.838,386,3.537,387,3.537,388,2.439,390,2.57,494,4.642,497,3.444,498,3.444,791,4.66,792,3.444,793,3.981,794,3.981,795,3.981]],["title/coverage.html",[796,4.089]],["body/coverage.html",[0,0.451,1,0.782,5,0.065,6,1.767,12,0.155,13,0.016,36,1.767,41,0.605,43,0.007,44,0.007,45,1.557,46,0.992,48,1.767,112,2.308,113,1.449,115,2.577,116,2.699,117,2.917,124,1.341,148,1.251,151,1.251,180,2.504,188,1.174,195,2.704,201,0.992,202,1.449,206,1.251,217,2.917,230,2.917,239,3.163,240,1.767,251,1.585,252,1.767,280,1.251,281,2.823,282,1.767,285,1.341,290,1.585,291,1.767,292,1.174,296,1.251,299,1.046,307,1.341,308,1.813,309,2.154,310,1.767,311,1.106,319,1.251,324,1.449,325,1.767,326,1.174,330,1.341,342,0.992,352,1.341,353,2.767,354,2.545,355,1.767,357,1.106,362,1.449,363,1.767,365,1.174,370,1.341,376,1.046,380,1.251,381,1.767,382,2.545,390,1.151,407,4.074,414,1.449,415,2.699,426,1.251,440,1.449,460,2.545,467,2.545,468,3.09,473,1.585,474,3.09,478,0.992,492,2.545,500,2.545,503,1.585,509,2.545,518,1.449,520,2.545,523,1.449,543,2.545,560,1.449,562,2.545,566,1.449,582,1.767,606,1.585,609,1.449,629,1.449,630,2.699,634,1.251,648,1.885,660,1.449,661,2.699,662,2.328,663,2.545,667,1.251,677,2.545,680,2.545,684,2.545,686,1.449,687,1.767,696,1.251,720,1.251,726,1.767,728,1.767,735,1.449,736,2.699,744,1.251,764,1.767,783,1.585,784,1.767,788,1.767,792,1.767,796,1.585,797,1.767,798,2.042,799,4.11,800,4.11,801,2.042,802,2.042,803,6.204,804,6.204,805,2.837,806,6.366,807,7.551,808,6.626,809,2.042,810,2.042,811,4.76,812,7.049,813,6.013,814,4.071,815,4.11,816,4.706,817,1.767,818,3.28,819,3.28,820,4.11,821,3.28,822,6.013,823,1.767,824,1.767,825,3.28,826,5.154,827,4.11,828,4.11,829,3.555,830,1.767,831,1.767,832,1.767,833,3.28,834,3.28,835,2.042,836,2.042]],["title/classes/createPotentialStudentDto.html",[0,0.231,311,2.087]],["body/classes/createPotentialStudentDto.html",[0,0.362,1,2.601,2,0.641,3,0.143,4,0.125,5,0.125,7,1.514,9,0.256,10,1.452,11,2.34,12,0.516,13,0.016,14,1.72,15,2.283,16,1.72,17,1.72,18,1.641,19,0.553,21,0.194,33,0.143,34,3.517,43,0.011,44,0.011,61,0.445,70,1.553,128,2.006,194,0.983,221,1.433,308,1.707,311,3.277,317,1.372,321,5.04,323,3.517,383,3.495,385,1.806,386,3.973,387,3.973,388,2.396,389,2.776,488,3.904,510,5.876,511,5.617,550,3.036,823,5.876,824,3.384,837,6.05,838,3.912,839,3.912,840,6.05,841,3.912,842,3.912,843,3.912,844,3.912,845,3.912]],["title/classes/createPotentialTestDto.html",[0,0.231,357,2.087]],["body/classes/createPotentialTestDto.html",[0,0.352,1,2.251,2,0.512,3,0.114,4,0.1,5,0.1,7,1.292,9,0.205,10,1.24,11,1.998,12,0.511,13,0.016,14,1.374,15,2.261,16,1.374,17,1.374,18,1.31,19,0.548,21,0.166,29,0.467,33,0.114,43,0.009,44,0.009,61,0.409,70,1.466,81,2.354,128,2.299,130,1.74,174,1.274,194,0.785,211,3.009,221,1.145,246,2.611,353,2.694,356,3.614,357,2.461,383,2.984,385,1.443,386,4.417,387,4.101,388,1.914,494,4.172,544,5.403,545,4.848,546,5.403,547,5.818,549,3.93,550,4.563,552,3.526,554,3.93,555,3.93,831,5.818,832,2.703,846,4.544,847,4.544,848,3.125,849,4.544,850,3.125,851,3.125,852,3.125,853,3.125,854,3.125,855,5.355,856,5.355,857,5.879]],["title/dependencies.html",[177,2.039,765,2.494]],["body/dependencies.html",[0,0.31,13,0.016,22,1.249,25,1.149,26,1.6,28,4.018,43,0.013,44,0.013,93,1.102,177,2.277,199,2.804,388,3.171,394,4.479,595,3.4,597,4.479,786,4.479,858,7.227,859,5.178,860,5.178,861,5.178,862,5.178,863,5.178,864,5.178,865,5.178,866,5.178,867,5.178,868,5.178,869,5.178,870,5.178,871,5.178,872,5.178,873,5.178,874,5.178,875,5.178,876,5.178,877,5.178]],["title/miscellaneous/functions.html",[878,2.281,879,4.011]],["body/miscellaneous/functions.html",[9,0.291,13,0.015,29,0.963,43,0.012,44,0.012,60,1.12,61,0.448,62,1.12,115,1.701,135,4.254,156,1.992,180,3.847,281,1.864,308,1.117,353,1.78,407,3.805,436,3.449,661,2.918,797,5.578,811,5.578,814,6.493,829,5.013,878,3.154,879,3.844,880,7.589,881,5.013,882,6.833,883,6.448,884,6.448,885,5.911,886,4.444,887,4.444,888,5.795]],["title/index.html",[9,0.211,889,3.214,890,3.214]],["body/index.html",[4,0.146,13,0.016,29,0.683,32,3.55,43,0.012,44,0.012,140,2.628,233,2.477,356,2.868,436,5.074,737,4.582,796,3.55,881,3.956,885,3.956,891,4.574,892,4.574,893,5.904,894,4.574,895,4.574,896,4.574,897,4.574,898,4.574,899,4.574,900,4.574,901,4.574,902,7.452,903,4.574,904,4.574,905,7.324,906,4.574,907,5.904,908,4.574,909,4.574,910,4.574,911,4.574,912,4.574,913,4.574,914,4.574,915,5.904,916,5.904,917,4.574,918,4.574,919,4.574,920,4.574,921,4.574,922,4.574,923,4.574,924,4.574,925,4.574,926,4.574,927,4.574,928,4.574,929,4.574,930,4.574,931,4.574,932,3.956,933,4.574,934,4.574,935,4.574,936,4.574,937,4.574,938,4.574,939,3.956]],["title/modules.html",[176,2.11]],["body/modules.html",[13,0.013,32,5.995,43,0.013,44,0.013,175,3.826,176,2.159,186,2.92,187,2.619,432,3.826,640,3.826,644,3.302,672,3.826,750,3.826,940,7.725,941,7.725,942,7.795,943,5.391,944,5.391]],["title/overview.html",[945,4.557]],["body/overview.html",[2,0.606,13,0.016,43,0.01,44,0.01,47,1.482,114,1.551,148,3.599,174,0.755,175,5.252,176,1.482,177,1.627,178,2.004,179,2.004,180,1.797,181,1.895,182,1.895,183,3.2,184,3.2,185,3.2,186,3.732,187,3.595,188,3.377,189,2.775,190,2.004,191,2.004,292,3.377,319,2.266,326,3.377,365,3.377,426,3.599,432,5.252,433,3.2,434,3.2,478,3.431,603,3.2,604,3.2,605,3.2,634,3.599,640,5.351,641,3.2,642,3.2,643,3.2,644,4.477,667,3.599,672,4.501,673,3.2,674,3.2,683,3.2,696,3.599,717,3.2,719,3.2,720,3.599,744,3.599,750,5.252,751,3.2,753,3.2,945,3.2,946,3.7,947,3.7,948,3.7,949,3.7]],["title/properties.html",[10,1.265,765,2.494]],["body/properties.html",[10,1.634,13,0.016,29,0.895,43,0.014,44,0.014,932,5.18,939,5.18,950,5.988,951,5.988,952,5.988]],["title/miscellaneous/variables.html",[878,2.281,953,4.011]],["body/miscellaneous/variables.html",[9,0.278,12,0.51,13,0.016,18,3.184,24,2.412,26,1.947,43,0.011,44,0.011,70,1.428,115,2.151,135,3.856,195,4.27,202,3.987,281,2.356,299,2.172,308,1.584,353,2.524,376,2.172,390,1.487,410,6.568,440,3.987,447,3.86,460,3.29,466,3.667,492,3.29,499,3.667,509,3.29,518,3.987,519,3.667,543,3.29,559,4.36,560,3.987,561,3.667,648,3.856,680,3.29,682,4.36,684,3.29,805,4.86,817,3.667,830,3.667,878,3.009,953,3.667,954,6.301,955,4.24,956,4.24,957,4.24,958,4.24,959,4.24,960,5.618]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":951,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":683,"title":{"classes/Teacher-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":948,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":710,"title":{},"body":{"controllers/TeacherController.html":{}}}],["29",{"_index":949,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["4.1.13",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":947,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["7.0.12",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":946,"title":{},"body":{"overview.html":{}}}],["80",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstract",{"_index":448,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["abstract.schema",{"_index":94,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractdocument:19",{"_index":385,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractrepository",{"_index":46,"title":{"injectables/AbstractRepository.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["abstractrepository:14",{"_index":222,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:25",{"_index":225,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:40",{"_index":224,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:50",{"_index":226,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:59",{"_index":223,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["access",{"_index":767,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["accessing",{"_index":403,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["added",{"_index":573,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["address",{"_index":843,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["amazing",{"_index":922,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":544,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["api",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/common",{"_index":194,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["application",{"_index":135,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application_service",{"_index":195,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmodel",{"_index":220,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["applications",{"_index":140,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["applied",{"_index":537,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["apply",{"_index":637,"title":{},"body":{"controllers/StudentManagementController.html":{},"classes/applyClassDto.html":{}}}],["applyclassdto",{"_index":124,"title":{"classes/applyClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["applyforstudy",{"_index":631,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(@body",{"_index":638,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(data",{"_index":632,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applying",{"_index":791,"title":{},"body":{"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{}}}],["applymoduledto",{"_index":285,"title":{"classes/applyModuleDto.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["apps/.../main.ts",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../potentialclass.schema.ts",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialmodule.schema.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialstudent.schema.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialtest.schema.ts",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../service.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../teacher.schema.ts",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/class",{"_index":115,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/module",{"_index":281,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/student",{"_index":308,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/study",{"_index":661,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/test",{"_index":353,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":81,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["associated",{"_index":494,"title":{},"body":{"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{}}}],["async",{"_index":50,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["asynchronously",{"_index":400,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["author",{"_index":932,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":944,"title":{},"body":{"modules.html":{}}}],["await",{"_index":104,"title":{},"body":{"injectables/AbstractRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["backers",{"_index":923,"title":{},"body":{"index.html":{}}}],["base",{"_index":30,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["basic",{"_index":772,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["being",{"_index":470,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["bootstrap",{"_index":180,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":942,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":940,"title":{},"body":{"modules.html":{}}}],["building",{"_index":894,"title":{},"body":{"index.html":{}}}],["bus",{"_index":161,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/StudentManagementController.html":{}}}],["business",{"_index":454,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["call",{"_index":653,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["care",{"_index":771,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["case",{"_index":413,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["classmanagement",{"_index":273,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["classmanagementcontroller",{"_index":113,"title":{"controllers/ClassManagementController.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"coverage.html":{}}}],["classmanagementmodule",{"_index":175,"title":{"modules/ClassManagementModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["classmanagementrepository",{"_index":188,"title":{"injectables/ClassManagementRepository.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["classmanagementservice",{"_index":148,"title":{"injectables/ClassManagementService.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":587,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientproxy",{"_index":585,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["clients",{"_index":620,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule",{"_index":614,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":622,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_classmanagementmodule",{"_index":183,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_imports",{"_index":184,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_providers",{"_index":185,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule",{"_index":433,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule_imports",{"_index":435,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["cluster_modulemanagementmodule_providers",{"_index":434,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":603,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":604,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":605,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule",{"_index":641,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_imports",{"_index":642,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_providers",{"_index":643,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule",{"_index":673,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule_providers",{"_index":674,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":717,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":718,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":719,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule",{"_index":751,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule_imports",{"_index":752,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["cluster_testprogrammodule_providers",{"_index":753,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["command",{"_index":160,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandbus",{"_index":146,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandhandler",{"_index":266,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["commandhandler(createpotentialclasscommand",{"_index":267,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["commandhandler(createpotentialmodulecommand",{"_index":298,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["commandhandler(createpotentialstudentcommand",{"_index":332,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["commandhandler(createpotentialtestcommand",{"_index":373,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["commands",{"_index":163,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["commands/create",{"_index":152,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["committing",{"_index":277,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["common",{"_index":450,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["complete",{"_index":507,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["configmodule",{"_index":198,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configmodule.forroot",{"_index":209,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configservice",{"_index":392,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('mongodb_uri",{"_index":411,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":626,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":627,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":404,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configure",{"_index":399,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configures",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configureswagger",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configureswagger(app",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":393,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["connecting",{"_index":395,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":394,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["console.log(\"triggered",{"_index":268,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["console.log('message",{"_index":716,"title":{},"body":{"controllers/TeacherController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{}}}],["constants/service",{"_index":439,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["constants/services",{"_index":196,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["constructor(@injectmodel(potentialclass.name",{"_index":228,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["constructor(@injectmodel(potentialmodule.name",{"_index":453,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["constructor(@injectmodel(potentialstudent.name",{"_index":652,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["constructor(@injectmodel(potentialtest.name",{"_index":569,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(@injectmodel(teacher.name",{"_index":570,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TeacherRepository.html":{}}}],["constructor(applicationmodel",{"_index":218,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(classmanagementrepository",{"_index":231,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["constructor(clientproxy",{"_index":584,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["constructor(createpotentialclassdto",{"_index":244,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["constructor(createpotentialmoduledto",{"_index":284,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["constructor(createpotentialstudentdto",{"_index":312,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["constructor(createpotentialtestdto",{"_index":358,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(model",{"_index":57,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(modulemanagementrepository",{"_index":455,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["constructor(potentialclass",{"_index":477,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["constructor(potentialmodule",{"_index":504,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["constructor(private",{"_index":670,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{}}}],["constructor(protected",{"_index":95,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(public",{"_index":250,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(publisher",{"_index":255,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["constructor(studentmanagementrepository",{"_index":655,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["constructor(teacher",{"_index":524,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["constructor(teacherrepository",{"_index":729,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(testprogramrepository",{"_index":775,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["constructs",{"_index":155,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["contact",{"_index":539,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["containing",{"_index":89,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["context",{"_index":276,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{}}}],["controller",{"_index":112,"title":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["controller('class",{"_index":154,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["controller('module",{"_index":427,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["controller('student",{"_index":635,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["controller('study",{"_index":669,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["controller('teachers",{"_index":705,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('test",{"_index":745,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["controllers",{"_index":114,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["convert",{"_index":532,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["corresponding",{"_index":549,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["coverage",{"_index":796,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":31,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ModuleManagementModule.html":{}}}],["cqrsmodule",{"_index":200,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["create",{"_index":51,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{}}}],["create(@body",{"_index":706,"title":{},"body":{"controllers/TeacherController.html":{}}}],["create(createteacherdto",{"_index":690,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(document",{"_index":63,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["created",{"_index":68,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{}}}],["createddocument",{"_index":99,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createddocument.save",{"_index":102,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createpotentialclasscommand",{"_index":151,"title":{"classes/CreatePotentialClassCommand.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclasscommand(data",{"_index":169,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclasscommandhandler",{"_index":251,"title":{"classes/CreatePotentialClassCommandHandler.html":{}},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclassdto",{"_index":120,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["createpotentialclassdto(@body",{"_index":168,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclassdto(data",{"_index":123,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialmodulecommand",{"_index":280,"title":{"classes/CreatePotentialModuleCommand.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["createpotentialmodulecommand(data",{"_index":429,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmodulecommandhandler",{"_index":290,"title":{"classes/CreatePotentialModuleCommandHandler.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["createpotentialmoduledto",{"_index":283,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["createpotentialmoduledto(@body",{"_index":428,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmoduledto(data",{"_index":420,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialstudentcommand",{"_index":307,"title":{"classes/CreatePotentialStudentCommand.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["createpotentialstudentcommand(data",{"_index":639,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["createpotentialstudentcommandhandler",{"_index":324,"title":{"classes/CreatePotentialStudentCommandHandler.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["createpotentialstudentdto",{"_index":311,"title":{"classes/createPotentialStudentDto.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["createpotentialstudentdto.email",{"_index":540,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.name",{"_index":536,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.phonenumber",{"_index":541,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.study",{"_index":538,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialtestcommand",{"_index":352,"title":{"classes/CreatePotentialTestCommand.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["createpotentialtestcommand(data",{"_index":748,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestcommandhandler",{"_index":362,"title":{"classes/CreatePotentialTestCommandHandler.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["createpotentialtestdto",{"_index":357,"title":{"classes/createPotentialTestDto.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["createpotentialtestdto(@body",{"_index":747,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto(data",{"_index":738,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto.duration",{"_index":577,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.ec",{"_index":580,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.module",{"_index":574,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.name",{"_index":576,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["creates",{"_index":127,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["createteacherdto",{"_index":380,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["creating",{"_index":130,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["creation",{"_index":417,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["credits",{"_index":555,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["crud",{"_index":773,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["ctx",{"_index":702,"title":{},"body":{"controllers/TeacherController.html":{}}}],["data",{"_index":129,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{}}}],["database",{"_index":271,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["databasemodule",{"_index":186,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["declarations",{"_index":179,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["decorator",{"_index":516,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":317,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["defining",{"_index":617,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["definition",{"_index":559,"title":{},"body":{"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":52,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["delete(':id",{"_index":132,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["delete(id",{"_index":69,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["deleteapplicationbyid",{"_index":121,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleteapplicationbyid(@param('id",{"_index":172,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["deleteapplicationbyid(id",{"_index":131,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleted",{"_index":73,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["deletes",{"_index":134,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramService.html":{}}}],["deleting",{"_index":741,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["deletion",{"_index":419,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["dependencies",{"_index":177,"title":{"dependencies.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":904,"title":{},"body":{"index.html":{}}}],["document",{"_index":37,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["document).exec",{"_index":110,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["documentation",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":78,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["dto",{"_index":246,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{}}}],["dto/applyclass.dto",{"_index":150,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{}}}],["dto/applymodule.dto",{"_index":289,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{}}}],["dto/create",{"_index":315,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["duration",{"_index":545,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["dynamically",{"_index":611,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["dynamicmodule",{"_index":613,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e2e",{"_index":912,"title":{},"body":{"index.html":{}}}],["each",{"_index":857,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["ec",{"_index":546,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["ecs",{"_index":581,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["educational",{"_index":554,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["efficient",{"_index":895,"title":{},"body":{"index.html":{}}}],["email",{"_index":510,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["emits",{"_index":591,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["endpoint",{"_index":636,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["endpoints",{"_index":144,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{}}}],["entity",{"_index":447,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"injectables/TestProgramRepository.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":213,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["envfilepath",{"_index":212,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["event",{"_index":164,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["event.commit",{"_index":279,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["event.publish(event",{"_index":351,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["event/potentialclass",{"_index":207,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["eventbus",{"_index":147,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["eventhandler",{"_index":531,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventpublisher",{"_index":256,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events",{"_index":166,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events/potentialmodule",{"_index":297,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["events/potentialstudent",{"_index":331,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{}}}],["events/potentialtest",{"_index":371,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{}}}],["eventshandler",{"_index":484,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["eventshandler(potentialclassregisteredevent",{"_index":485,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["eventshandler(potentialmoduleregisteredevent",{"_index":508,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["eventshandler(potentialstudentregisteredevent",{"_index":528,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventshandler(potentialtestregisteredevent",{"_index":568,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["everyone",{"_index":572,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["execute",{"_index":254,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramService.html":{}}}],["execute(@payload",{"_index":714,"title":{},"body":{"controllers/TeacherController.html":{}}}],["execute(command",{"_index":259,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["execute(data",{"_index":692,"title":{},"body":{"controllers/TeacherController.html":{}}}],["executes",{"_index":261,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executing",{"_index":162,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/TestProgramRepository.html":{}}}],["execution",{"_index":265,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["exports",{"_index":182,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["express",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":389,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["external",{"_index":754,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["extract",{"_index":341,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["factory",{"_index":406,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["feature",{"_index":437,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{}}}],["field",{"_index":844,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["fields",{"_index":90,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["filter",{"_index":79,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["filterquery",{"_index":75,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find",{"_index":53,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["find(filterquery",{"_index":74,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findall",{"_index":689,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["findone",{"_index":54,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findone(filterquery",{"_index":83,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["forrootasync",{"_index":398,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["found",{"_index":82,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["framework",{"_index":893,"title":{},"body":{"index.html":{}}}],["function",{"_index":407,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":879,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":612,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["getapplications",{"_index":122,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["gethello",{"_index":665,"title":{},"body":{"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{}}}],["getting",{"_index":889,"title":{"index.html":{}},"body":{}}],["give",{"_index":579,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["given",{"_index":724,"title":{},"body":{"modules/TeacherModule.html":{}}}],["graph",{"_index":943,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":919,"title":{},"body":{"index.html":{}}}],["handle",{"_index":476,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handle(event",{"_index":482,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handler",{"_index":269,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["handlers",{"_index":350,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["handles",{"_index":336,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["handling",{"_index":142,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["hello",{"_index":534,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudyProgramService.html":{}}}],["here",{"_index":929,"title":{},"body":{"index.html":{}}}],["host/rmq.context",{"_index":701,"title":{},"body":{"controllers/TeacherController.html":{}}}],["http",{"_index":416,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["https://nestjs.com",{"_index":936,"title":{},"body":{"index.html":{}}}],["icommand",{"_index":242,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{}}}],["icommandhandler",{"_index":253,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["identifier",{"_index":36,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["ievent",{"_index":521,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["ieventhandler",{"_index":475,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["implementing",{"_index":318,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["implements",{"_index":241,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["importing",{"_index":438,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["imports",{"_index":193,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["included",{"_index":761,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":339,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["indicating",{"_index":563,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["inherited",{"_index":221,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["initializes",{"_index":287,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["inject",{"_index":412,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject('rabbitmq_client",{"_index":600,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"overview.html":{}}}],["injected",{"_index":452,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel",{"_index":227,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel(potentialclass.name",{"_index":236,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["injectmodel(potentialmodule.name",{"_index":457,"title":{},"body":{"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["injectmodel(potentialstudent.name",{"_index":658,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["injectmodel(potentialtest.name",{"_index":780,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["injectmodel(teacher.name",{"_index":529,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/TeacherService.html":{}}}],["injects",{"_index":333,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["installation",{"_index":901,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":903,"title":{},"body":{"index.html":{}}}],["instance",{"_index":156,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["instances",{"_index":334,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["interact",{"_index":774,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["interacting",{"_index":598,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["interface",{"_index":319,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":628,"title":{},"body":{"interfaces/RmqModuleOptions.html":{}}}],["isarray",{"_index":855,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isarray()@isstring({each",{"_index":846,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isemail",{"_index":837,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isglobal",{"_index":210,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["isnotempty",{"_index":386,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isnumber",{"_index":856,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isnumber()@isnotempty",{"_index":849,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isphonenumber",{"_index":840,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isstring",{"_index":387,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isstring()@isnotempty",{"_index":383,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["it's",{"_index":575,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["join",{"_index":925,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":933,"title":{},"body":{"index.html":{}}}],["lastvaluefrom",{"_index":596,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["lastvaluefrom(this.clientproxy.emit(queue",{"_index":602,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["legend",{"_index":178,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":48,"title":{},"body":{"injectables/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":65,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:25",{"_index":84,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:40",{"_index":76,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:50",{"_index":88,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:59",{"_index":71,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:6",{"_index":59,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:19",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":391,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts",{"_index":606,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts:31",{"_index":610,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts",{"_index":582,"title":{},"body":{"injectables/RabbitmqService.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:11",{"_index":586,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:31",{"_index":590,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["license",{"_index":939,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":916,"title":{},"body":{"index.html":{}}}],["list",{"_index":141,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["log",{"_index":337,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["logic",{"_index":368,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementService.html":{}}}],["made",{"_index":490,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["management",{"_index":119,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{}}}],["management.controller",{"_index":204,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.controller.ts",{"_index":117,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:19",{"_index":633,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["management.controller.ts:24",{"_index":421,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:29",{"_index":126,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:34",{"_index":424,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:39",{"_index":138,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:44",{"_index":423,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:49",{"_index":133,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.module.ts",{"_index":192,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.repository",{"_index":205,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{}}}],["management.repository.ts",{"_index":217,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["management.repository.ts:10",{"_index":651,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["management.repository.ts:11",{"_index":219,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["management.repository.ts:12",{"_index":451,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["management.service",{"_index":149,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{}}}],["management.service.ts",{"_index":230,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management.service.ts:10",{"_index":232,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:16",{"_index":657,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management.service.ts:24",{"_index":235,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:33",{"_index":234,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:9",{"_index":656,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management/src/class",{"_index":116,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{}}}],["management/src/commands/create",{"_index":239,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["management/src/constants/service.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/constants/services.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/dto/applyclass.dto.ts",{"_index":788,"title":{},"body":{"classes/applyClassDto.html":{},"coverage.html":{}}}],["management/src/dto/applyclass.dto.ts:15",{"_index":789,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applyclass.dto.ts:20",{"_index":790,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applymodule.dto.ts",{"_index":792,"title":{},"body":{"classes/applyModuleDto.html":{},"coverage.html":{}}}],["management/src/dto/applymodule.dto.ts:16",{"_index":794,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:21",{"_index":795,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:26",{"_index":793,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/create",{"_index":823,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["management/src/event/potentialclass",{"_index":467,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialmodule",{"_index":500,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialstudent",{"_index":520,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/main.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["management/src/module",{"_index":415,"title":{},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{}}}],["management/src/schemas/potentialclass.schema",{"_index":498,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/potentialclass.schema.ts",{"_index":460,"title":{},"body":{"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialclass.schema.ts:11",{"_index":463,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialclass.schema.ts:8",{"_index":462,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialmodule.schema.ts",{"_index":492,"title":{},"body":{"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:15",{"_index":495,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:21",{"_index":496,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:27",{"_index":493,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialstudent.schema",{"_index":465,"title":{},"body":{"classes/PotentialClass.html":{},"classes/applyClassDto.html":{}}}],["management/src/schemas/potentialstudent.schema.ts",{"_index":509,"title":{},"body":{"classes/PotentialStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:10",{"_index":513,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:14",{"_index":515,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:18",{"_index":514,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:22",{"_index":512,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/teacher.schema",{"_index":497,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/teacher.schema.ts",{"_index":680,"title":{},"body":{"classes/Teacher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/teacher.schema.ts:10",{"_index":681,"title":{},"body":{"classes/Teacher.html":{}}}],["management/src/student",{"_index":630,"title":{},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management/src/teacher/dto/create",{"_index":381,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/dto/update",{"_index":784,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts",{"_index":687,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts:15",{"_index":691,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:25",{"_index":695,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:32",{"_index":694,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.module",{"_index":758,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["management/src/teacher/teacher.module.ts",{"_index":721,"title":{},"body":{"modules/TeacherModule.html":{}}}],["management/src/teacher/teacher.repository.ts",{"_index":726,"title":{},"body":{"injectables/TeacherRepository.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.repository.ts:10",{"_index":727,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["management/src/teacher/teacher.service.ts",{"_index":728,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.service.ts:10",{"_index":730,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:17",{"_index":731,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:23",{"_index":732,"title":{},"body":{"injectables/TeacherService.html":{}}}],["manager",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":158,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"controllers/TestProgramController.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["merge",{"_index":345,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["merging",{"_index":275,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["message",{"_index":338,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TeacherController.html":{}}}],["messagepattern",{"_index":703,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messagepattern('teacher_notifications",{"_index":693,"title":{},"body":{"controllers/TeacherController.html":{}}}],["metadata",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":335,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["methods",{"_index":49,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["microservice",{"_index":599,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["minutes",{"_index":552,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["miscellaneous",{"_index":878,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":915,"title":{},"body":{"index.html":{}}}],["mode",{"_index":907,"title":{},"body":{"index.html":{}}}],["model",{"_index":58,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["module",{"_index":174,"title":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["modulemanagement",{"_index":302,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["modulemanagementcontroller",{"_index":414,"title":{"controllers/ModuleManagementController.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["modulemanagementmodule",{"_index":432,"title":{"modules/ModuleManagementModule.html":{}},"body":{"modules/ModuleManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["modulemanagementrepository",{"_index":292,"title":{"injectables/ModuleManagementRepository.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modulemanagementservice",{"_index":426,"title":{"injectables/ModuleManagementService.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":176,"title":{"modules.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":396,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodb_uri",{"_index":409,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":42,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["mongoosemodule",{"_index":197,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature",{"_index":445,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":215,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":401,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":928,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":77,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["myśliwiec",{"_index":934,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":489,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["necessary",{"_index":263,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["nest",{"_index":436,"title":{},"body":{"modules/ModuleManagementModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nest.js",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestframework",{"_index":938,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":93,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":199,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":786,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":595,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"dependencies.html":{}}}],["nestjs/microservices/ctx",{"_index":700,"title":{},"body":{"controllers/TeacherController.html":{}}}],["nestjs/mongoose",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["node.js",{"_index":892,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":92,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":107,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notification",{"_index":487,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["notifications",{"_index":481,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["npm",{"_index":902,"title":{},"body":{"index.html":{}}}],["number",{"_index":550,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/DatabaseModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"classes/applyModuleDto.html":{}}}],["objectid",{"_index":39,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["open",{"_index":917,"title":{},"body":{"index.html":{}}}],["operation",{"_index":778,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["operations",{"_index":159,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":618,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["overview",{"_index":945,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":765,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/TestProgramRepository.html":{}}}],["packages",{"_index":755,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["parameter",{"_index":320,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":769,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["partial",{"_index":87,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["partialtype",{"_index":785,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createteacherdto",{"_index":787,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["pass",{"_index":654,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["passing",{"_index":578,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["pattern",{"_index":713,"title":{},"body":{"controllers/TeacherController.html":{}}}],["payload",{"_index":704,"title":{},"body":{"controllers/TeacherController.html":{}}}],["performs",{"_index":262,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["phone",{"_index":845,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["phonenumber",{"_index":511,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["please",{"_index":926,"title":{},"body":{"index.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["potential",{"_index":128,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialclass",{"_index":201,"title":{"classes/PotentialClass.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["potentialclass.command",{"_index":153,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts",{"_index":252,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["potentialclass.command.handler.ts:10",{"_index":257,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts:26",{"_index":260,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.ts",{"_index":240,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"coverage.html":{}}}],["potentialclass.command.ts:12",{"_index":249,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.command.ts:7",{"_index":245,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.name",{"_index":216,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["potentialclassregisteredevent",{"_index":206,"title":{"classes/PotentialClassRegisteredEvent.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassregisteredevent(potentialclass",{"_index":274,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclassregisteredeventhandler",{"_index":473,"title":{"classes/PotentialClassRegisteredEventHandler.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassschema",{"_index":202,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule",{"_index":299,"title":{"classes/PotentialModule.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule.command",{"_index":295,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{}}}],["potentialmodule.command.handler.ts",{"_index":291,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["potentialmodule.command.handler.ts:10",{"_index":293,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.handler.ts:22",{"_index":294,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.ts",{"_index":282,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"coverage.html":{}}}],["potentialmodule.command.ts:12",{"_index":288,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.command.ts:7",{"_index":286,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.name",{"_index":446,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["potentialmoduleregisteredevent",{"_index":296,"title":{"classes/PotentialModuleRegisteredEvent.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleregisteredevent(potentialmodule",{"_index":303,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmoduleregisteredeventhandler",{"_index":503,"title":{"classes/PotentialModuleRegisteredEventHandler.html":{}},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleschema",{"_index":440,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialstudent",{"_index":342,"title":{"classes/PotentialStudent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["potentialstudent.command",{"_index":329,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.command.handler",{"_index":647,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent.command.handler.ts",{"_index":325,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["potentialstudent.command.handler.ts:17",{"_index":328,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.handler.ts:9",{"_index":327,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.ts",{"_index":310,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"coverage.html":{}}}],["potentialstudent.command.ts:10",{"_index":314,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.command.ts:6",{"_index":313,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.dto",{"_index":316,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.dto.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:10",{"_index":839,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:14",{"_index":838,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:19",{"_index":842,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:23",{"_index":841,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.name",{"_index":650,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent/create",{"_index":309,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent",{"_index":330,"title":{"classes/PotentialStudentRegisteredEvent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent(potentialstudent",{"_index":344,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentregisteredeventhandler",{"_index":523,"title":{"classes/PotentialStudentRegisteredEventHandler.html":{}},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentschema",{"_index":518,"title":{},"body":{"classes/PotentialStudent.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest",{"_index":376,"title":{"classes/PotentialTest.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest.command",{"_index":369,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.command.handler",{"_index":757,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtest.command.handler.ts",{"_index":363,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["potentialtest.command.handler.ts:10",{"_index":366,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.handler.ts:27",{"_index":367,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.ts",{"_index":355,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"coverage.html":{}}}],["potentialtest.command.ts:12",{"_index":360,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.command.ts:7",{"_index":359,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.dto",{"_index":361,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.dto.ts",{"_index":832,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:13",{"_index":852,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:20",{"_index":853,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:27",{"_index":850,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:34",{"_index":851,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:42",{"_index":854,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:50",{"_index":848,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.name",{"_index":760,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtestregisteredevent",{"_index":370,"title":{"classes/PotentialTestRegisteredEvent.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialtestregisteredevent(potentialtest",{"_index":378,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtestregisteredeventhandler",{"_index":566,"title":{"classes/PotentialTestRegisteredEventHandler.html":{}},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["potentialtestschema",{"_index":560,"title":{},"body":{"classes/PotentialTest.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":118,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["processes",{"_index":530,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["production",{"_index":909,"title":{},"body":{"index.html":{}}}],["program",{"_index":664,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["program.controller",{"_index":676,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.controller.ts",{"_index":663,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["program.controller.ts:24",{"_index":740,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:34",{"_index":739,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:44",{"_index":742,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:9",{"_index":666,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["program.module.ts",{"_index":675,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.repository",{"_index":372,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{}}}],["program.repository.ts",{"_index":764,"title":{},"body":{"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["program.repository.ts:14",{"_index":768,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["program.service",{"_index":668,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["program.service.ts",{"_index":677,"title":{},"body":{"injectables/StudyProgramService.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["program.service.ts:12",{"_index":776,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:27",{"_index":779,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:36",{"_index":777,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:5",{"_index":678,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["program/src/commands/create",{"_index":354,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["program/src/constants/services.ts",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/dto/create",{"_index":831,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["program/src/events/potentialtest",{"_index":562,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["program/src/main.ts",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["program/src/schemas/potentialtest.schema.ts",{"_index":543,"title":{},"body":{"classes/PotentialTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/potentialtest.schema.ts:13",{"_index":556,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:19",{"_index":557,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:25",{"_index":551,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:31",{"_index":553,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:37",{"_index":558,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:43",{"_index":548,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/teacher.schema.ts",{"_index":684,"title":{},"body":{"classes/Teacher-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/teacher.schema.ts:13",{"_index":685,"title":{},"body":{"classes/Teacher-1.html":{}}}],["program/src/study",{"_index":662,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{}}}],["program/src/test",{"_index":736,"title":{},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["programs",{"_index":375,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["progressive",{"_index":891,"title":{},"body":{"index.html":{}}}],["project",{"_index":918,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({required",{"_index":461,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({type",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"properties.html":{}}}],["property",{"_index":34,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/createPotentialStudentDto.html":{}}}],["provided",{"_index":449,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"controllers/StudentManagementController.html":{}}}],["providers",{"_index":181,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["provides",{"_index":766,"title":{},"body":{"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["proxy",{"_index":588,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["public",{"_index":243,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{}}}],["publish",{"_index":304,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publisher",{"_index":258,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publishing",{"_index":165,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["query",{"_index":80,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["questions",{"_index":547,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["queue",{"_index":593,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq",{"_index":442,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq.service",{"_index":616,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq_client",{"_index":623,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmqservice",{"_index":478,"title":{"injectables/RabbitmqService.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":927,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":96,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["received",{"_index":715,"title":{},"body":{"controllers/TeacherController.html":{}}}],["reflect",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":444,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["register(undefined",{"_index":608,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":621,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registered",{"_index":349,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event",{"_index":208,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler",{"_index":646,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["registered.event.handler.ts",{"_index":474,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["registered.event.handler.ts:11",{"_index":525,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:12",{"_index":505,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:13",{"_index":479,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:18",{"_index":526,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:23",{"_index":506,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:28",{"_index":483,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:9",{"_index":567,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.ts",{"_index":468,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"coverage.html":{}}}],["registered.event.ts:11",{"_index":565,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:12",{"_index":471,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:5",{"_index":522,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registered.event.ts:6",{"_index":564,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:7",{"_index":469,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["registers",{"_index":619,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registration",{"_index":502,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["related",{"_index":143,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["repositories",{"_index":763,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["repository",{"_index":233,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["represented",{"_index":38,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["representing",{"_index":501,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{}}}],["represents",{"_index":321,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["requests",{"_index":422,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["required",{"_index":322,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["resolves",{"_index":137,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["response",{"_index":708,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsible",{"_index":364,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{}}}],["result",{"_index":264,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/TestProgramService.html":{}}}],["results",{"_index":43,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":418,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["retrieve",{"_index":425,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["retrieves",{"_index":139,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/TestProgramService.html":{}}}],["retrieving",{"_index":743,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["rmqcontext",{"_index":699,"title":{},"body":{"controllers/TeacherController.html":{}}}],["rmqmodule",{"_index":187,"title":{"modules/RmqModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":443,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["rmqmodule.register({name",{"_index":214,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["rmqmoduleoptions",{"_index":609,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["run",{"_index":905,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"injectables/RabbitmqService.html":{},"dependencies.html":{}}}],["saved",{"_index":301,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["saving",{"_index":270,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["scalable",{"_index":896,"title":{},"body":{"index.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":464,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["schemafactory.createforclass(potentialclass",{"_index":466,"title":{},"body":{"classes/PotentialClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialmodule",{"_index":499,"title":{},"body":{"classes/PotentialModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialstudent",{"_index":519,"title":{},"body":{"classes/PotentialStudent.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialtest",{"_index":561,"title":{},"body":{"classes/PotentialTest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teacher",{"_index":682,"title":{},"body":{"classes/Teacher.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":759,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["schemas/potentialclass.schema",{"_index":203,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["schemas/potentialmodule.schema",{"_index":441,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["schemas/potentialstudent.schema",{"_index":645,"title":{},"body":{"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{}}}],["schemas/potentialtest.schema",{"_index":756,"title":{},"body":{"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["schemas/teacher.schema",{"_index":527,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{}}}],["schematypes",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":40,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["send",{"_index":486,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["sending",{"_index":480,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["sendmessage",{"_index":583,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sendmessage(queue",{"_index":589,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sends",{"_index":601,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sent",{"_index":594,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["server",{"_index":897,"title":{},"body":{"index.html":{}}}],["service",{"_index":157,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{}}}],["services",{"_index":762,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["side",{"_index":898,"title":{},"body":{"index.html":{}}}],["single",{"_index":85,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["specified",{"_index":592,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["specify",{"_index":725,"title":{},"body":{"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["sponsors",{"_index":921,"title":{},"body":{"index.html":{}}}],["start",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":908,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":910,"title":{},"body":{"index.html":{}}}],["started",{"_index":890,"title":{"index.html":{}},"body":{}}],["starter",{"_index":900,"title":{},"body":{"index.html":{}}}],["statements",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":607,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["status",{"_index":709,"title":{},"body":{"controllers/TeacherController.html":{}}}],["stay",{"_index":930,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":323,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["studentmanagementcontroller",{"_index":629,"title":{"controllers/StudentManagementController.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["studentmanagementmodule",{"_index":640,"title":{"modules/StudentManagementModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["studentmanagementrepository",{"_index":326,"title":{"injectables/StudentManagementRepository.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["studentmanagementservice",{"_index":634,"title":{"injectables/StudentManagementService.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["students",{"_index":571,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["study",{"_index":488,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"classes/createPotentialStudentDto.html":{}}}],["studyprogramcontroller",{"_index":660,"title":{"controllers/StudyProgramController.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"coverage.html":{}}}],["studyprogrammodule",{"_index":672,"title":{"modules/StudyProgramModule.html":{}},"body":{"modules/StudyProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["studyprogramservice",{"_index":667,"title":{"injectables/StudyProgramService.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":456,"title":{},"body":{"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{}}}],["super",{"_index":472,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["super(applicationmodel",{"_index":229,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["support",{"_index":32,"title":{},"body":{"classes/AbstractDocument.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":941,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":770,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["tdocument",{"_index":64,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["teacher",{"_index":390,"title":{"classes/Teacher.html":{},"classes/Teacher-1.html":{}},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacher.controller",{"_index":722,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":698,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":382,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:10",{"_index":384,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.name",{"_index":535,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["teacher.repository",{"_index":723,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["teacher.service",{"_index":697,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":649,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["teacher_notifications",{"_index":712,"title":{},"body":{"controllers/TeacherController.html":{}}}],["teachercontroller",{"_index":686,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":644,"title":{"modules/TeacherModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":720,"title":{"injectables/TeacherRepository.html":{}},"body":{"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["teachers",{"_index":688,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["teacherschema",{"_index":648,"title":{},"body":{"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacherservice",{"_index":696,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":356,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":914,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":913,"title":{},"body":{"index.html":{}}}],["testprogramcontroller",{"_index":735,"title":{"controllers/TestProgramController.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["testprogrammodule",{"_index":750,"title":{"modules/TestProgramModule.html":{}},"body":{"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["testprogramrepository",{"_index":365,"title":{"injectables/TestProgramRepository.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["testprogramservice",{"_index":744,"title":{"injectables/TestProgramService.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":737,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["thanks",{"_index":920,"title":{},"body":{"index.html":{}}}],["this.classmanagementrepository.create(createpotentialclassdto",{"_index":272,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.classmanagementrepository.delete(id",{"_index":238,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.find",{"_index":237,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementservice.deleteapplicationbyid(id",{"_index":173,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.classmanagementservice.getapplications",{"_index":171,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.commandbus.execute(command",{"_index":170,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["this.model(document",{"_index":100,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.find(filterquery).exec",{"_index":108,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidanddelete(id).exec",{"_index":111,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":109,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findone(filterquery).exec",{"_index":105,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.modulemanagementrepository.create(createpotentialmoduledto",{"_index":300,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.modulemanagementrepository.delete(id",{"_index":459,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.find",{"_index":458,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementservice.deleteapplicationbyid(id",{"_index":431,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.modulemanagementservice.getapplications",{"_index":430,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.publisher.mergeobjectcontext(classmanagement",{"_index":278,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(modulemanagement",{"_index":306,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(student",{"_index":347,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(test",{"_index":379,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.rabbitmqservice.sendmessage('study",{"_index":491,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["this.rabbitmqservice.sendmessage('teacher_notifications",{"_index":542,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.studentmanagementrepository.create(createpotentialstudentdto",{"_index":343,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.studentmanagementrepository.find",{"_index":659,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["this.studyprogramservice.gethello",{"_index":671,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["this.teacher.findone({}).exec()).toobject",{"_index":533,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.teacherrepository.create(createteacherdto",{"_index":733,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.find",{"_index":734,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":707,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":711,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.testprogramrepository.create(createpotentialtestdto",{"_index":377,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.testprogramrepository.delete(id",{"_index":782,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramrepository.find",{"_index":781,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramservice.deleteapplicationbyid(id",{"_index":746,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["this.testprogramservice.getapplications",{"_index":749,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["throw",{"_index":106,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["throws",{"_index":103,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["touch",{"_index":931,"title":{},"body":{"index.html":{}}}],["track",{"_index":346,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["transfer",{"_index":247,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/applyModuleDto.html":{}}}],["transport",{"_index":615,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":624,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["trigger",{"_index":348,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["triggered",{"_index":340,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["true",{"_index":211,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TestProgramModule.html":{},"classes/createPotentialTestDto.html":{}}}],["true})@isnotempty({each",{"_index":847,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["twitter",{"_index":937,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["typescript",{"_index":899,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["unique",{"_index":35,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unit",{"_index":911,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["unlicensed",{"_index":952,"title":{},"body":{"properties.html":{}}}],["update",{"_index":55,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["update(id",{"_index":86,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updated",{"_index":91,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updateteacherdto",{"_index":783,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["uri",{"_index":408,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["urls",{"_index":625,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["used",{"_index":374,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["usefactory",{"_index":402,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["uses",{"_index":397,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["using",{"_index":305,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["validation",{"_index":517,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["validator",{"_index":388,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["value",{"_index":410,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":405,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["variable",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":953,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":950,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":906,"title":{},"body":{"index.html":{}}}],["website",{"_index":935,"title":{},"body":{"index.html":{}}}],["world",{"_index":679,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["you'd",{"_index":924,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Prop, Schema } from \"@nestjs/mongoose\";\nimport mongoose, { SchemaTypes, Types } from \"mongoose\";\n\n/**\n * @class AbstractDocument\n * @extends AggregateRoot\n * @description Base class for Mongoose schema with CQRS support.\n */\n@Schema()\nexport class AbstractDocument extends AggregateRoot {\n    /**\n     * @property {_id}\n     * @type {Types.ObjectId}\n     * @description Unique identifier for the document, represented by a Mongoose ObjectId.\n     */\n    @Prop({ type: SchemaTypes.ObjectId, default: () => new mongoose.Types.ObjectId()})\n    _id: Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractRepository.html":{"url":"injectables/AbstractRepository.html","title":"injectable - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:14\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:59\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:40\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:25\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:50\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractDocument } from './abstract.schema';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class AbstractRepository {\n  constructor(protected readonly model: Model) {}\n\n  /**\n   * Create a new document.\n   * @param document The document to create.\n   * @returns The created document.\n   */\n  async create(document: TDocument): Promise {\n    const createdDocument = new this.model(document);\n    return createdDocument.save();\n  }\n\n  /**\n   * Find a single document matching the filter query.\n   * @param filterQuery The filter query to find the document.\n   * @returns The found document.\n   * @throws NotFoundException if the document is not found.\n   */\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery).exec();\n\n    if (!document) {\n      throw new NotFoundException('Document not found');\n    }\n\n    return document;\n  }\n\n  /**\n   * Find multiple documents matching the filter query.\n   * @param filterQuery The filter query to find the documents.\n   * @returns An array of found documents.\n   */\n  async find(filterQuery: FilterQuery): Promise {\n    return this.model.find(filterQuery).exec();\n  }\n\n  /**\n   * Update a document by its ID.\n   * @param id The ID of the document to update.\n   * @param document The partial document containing the fields to update.\n   * @returns The updated document.\n   */\n  async update(id: string, document: Partial): Promise {\n    return this.model.findByIdAndUpdate(id, document).exec();\n  }\n\n  /**\n   * Delete a document by its ID.\n   * @param id The ID of the document to delete.\n   * @returns The deleted document.\n   */\n  async delete(id: string): Promise {\n    return this.model.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassManagementController.html":{"url":"controllers/ClassManagementController.html","title":"controller - ClassManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialClassDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialClassDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialClassDto(data: applyClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:29\n                \n            \n\n\n            \n                \n                    Creates a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:49\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:39\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * Controller for handling class management related endpoints.\n */\nimport { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ClassManagementService } from './class-management.service';\nimport { applyClassDto } from './dto/applyClass.dto';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\n\n@Controller('class-management')\nexport class ClassManagementController {\n    /**\n     * Constructs an instance of ClassManagementController.\n     * @param classManagementService The service for managing class operations.\n     * @param commandBus The command bus for executing commands.\n     * @param eventBus The event bus for publishing events.\n     */\n    constructor(\n        private readonly classManagementService: ClassManagementService,\n        private readonly commandBus: CommandBus,\n        private readonly eventBus: EventBus\n    ) {}\n\n    /**\n     * Creates a potential class.\n     * @param data The data for creating the potential class.\n     */\n    @Post()\n    async createPotentialClassDto(@Body() data: applyClassDto) {\n        const command = new CreatePotentialClassCommand(data);\n        this.commandBus.execute(command);\n    }\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    @Get()\n    async getApplications() {\n        return this.classManagementService.getApplications();\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    @Delete(':id')\n    async deleteApplicationById(@Param('id') id: string) {\n        return this.classManagementService.deleteApplicationById(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassManagementModule.html":{"url":"modules/ClassManagementModule.html","title":"module - ClassManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/class-management/src/class-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassManagementRepository\n                        \n                        \n                            ClassManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialClass, PotentialClassSchema } from './schemas/potentialClass.schema';\nimport { ClassManagementController } from './class-management.controller';\nimport { ClassManagementService } from './class-management.service';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\nimport { PotentialClassRegisteredEvent } from './event/potentialClass-registered.event';\n\n\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n    envFilePath: '.env'\n  }), RmqModule.register({name: APPLICATION_SERVICE}), DatabaseModule, CqrsModule, MongooseModule.forFeature([{name: PotentialClass.name, schema: PotentialClassSchema}])],\n  controllers: [ClassManagementController],\n  providers: [ClassManagementService, ClassManagementRepository, PotentialClassRegisteredEvent, CreatePotentialClassCommand],\n})\nexport class ClassManagementModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementRepository.html":{"url":"injectables/ClassManagementRepository.html","title":"injectable - ClassManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for the PotentialClass schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialClass } from \"./schemas/potentialClass.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n@Injectable()\nexport class ClassManagementRepository extends AbstractRepository {\n    /**\n     * Constructs an instance of ClassManagementRepository.\n     * @param applicationModel The Mongoose model for the PotentialClass schema.\n     */\n    constructor(@InjectModel(PotentialClass.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementService.html":{"url":"injectables/ClassManagementService.html","title":"injectable - ClassManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for class management related data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from './schemas/potentialClass.schema';\nimport { ClassManagementRepository } from './class-management.repository';\n\n@Injectable()\nexport class ClassManagementService {\n    /**\n     * Constructs an instance of ClassManagementService.\n     * @param classManagementRepository The repository for class management related data.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name)\n        private readonly classManagementRepository: ClassManagementRepository,\n    ) {}\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    async getApplications() {\n        return this.classManagementRepository.find({});\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    async deleteApplicationById(id: string) {\n        return this.classManagementRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommand.html":{"url":"classes/CreatePotentialClassCommand.html","title":"class - CreatePotentialClassCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: applyClassDto)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        applyClassDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) containing the data for creating the potential class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyClassDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) containing the data for creating the potential class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyClassDto } from \"../dto/applyClass.dto\";\n\nexport class CreatePotentialClassCommand implements ICommand {\n    /**\n     * Constructs an instance of CreatePotentialClassCommand.\n     * @param createPotentialClassDto The DTO (Data Transfer Object) containing the data for creating the potential class.\n     */\n    constructor(public readonly createPotentialClassDto: applyClassDto) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommandHandler.html":{"url":"classes/CreatePotentialClassCommandHandler.html","title":"class - CreatePotentialClassCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommandHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The event publisher for publishing events.\n\n                                                        \n                                                \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for managing classes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialClassCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:26\n                \n            \n\n\n            \n                \n                    Executes the CreatePotentialClassCommand and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialClassCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialClassCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialClassCommand } from \"./create-potentialClass.command\";\nimport { ClassManagementRepository } from \"../class-management.repository\";\nimport { PotentialClassRegisteredEvent } from \"../event/potentialClass-registered.event\";\n\n@CommandHandler(CreatePotentialClassCommand)\nexport class CreatePotentialClassCommandHandler implements ICommandHandler {\n    /**\n     * Constructs an instance of CreatePotentialClassCommandHandler.\n     * @param publisher The event publisher for publishing events.\n     * @param classManagementRepository The repository for managing classes.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private classManagementRepository: ClassManagementRepository\n    ) {}\n\n    /**\n     * Executes the CreatePotentialClassCommand and performs the necessary operations.\n     * @param command The CreatePotentialClassCommand instance.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialClassCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialClassDto } = command;\n\n        // Saving potential class into the database\n        const potentialClass = await this.classManagementRepository.create(createPotentialClassDto);\n\n        // Creating a PotentialClassRegisteredEvent\n        const classManagement = new PotentialClassRegisteredEvent(potentialClass);\n\n        // Merging the event with the event context and committing it\n        const event = this.publisher.mergeObjectContext(classManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommand.html":{"url":"classes/CreatePotentialModuleCommand.html","title":"class - CreatePotentialModuleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command for creating a potential module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: applyModuleDto)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the CreatePotentialModuleCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        applyModuleDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating a potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyModuleDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating a potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyModuleDto } from \"../dto/applyModule.dto\";\n\n/**\n * Command for creating a potential module.\n */\nexport class CreatePotentialModuleCommand implements ICommand {\n    /**\n     * Initializes a new instance of the CreatePotentialModuleCommand class.\n     * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating a potential module.\n     */\n    constructor(public readonly createPotentialModuleDto: applyModuleDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommandHandler.html":{"url":"classes/CreatePotentialModuleCommandHandler.html","title":"class - CreatePotentialModuleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for creating potential modules.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialModuleCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:22\n                \n            \n\n\n            \n                \n                    Executes the create potential module command.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialModuleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The create potential module command.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialModuleCommand } from \"./create-potentialModule.command\";\nimport { ModuleManagementRepository } from \"../module-management.repository\";\nimport { PotentialModuleRegisteredEvent } from \"../events/potentialModule-registered.event\"\n\n/**\n * Command handler for creating potential modules.\n */\n@CommandHandler(CreatePotentialModuleCommand)\nexport class CreatePotentialModuleCommandHandler implements ICommandHandler {\n\n    constructor(\n        private readonly publisher: EventPublisher,\n        private moduleManagementRepository: ModuleManagementRepository\n    ) {}\n\n    /**\n     * Executes the create potential module command.\n     * @param command The create potential module command.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialModuleCommand): Promise {\n        console.log(\"Triggered Command Handler\")\n\n        const { createPotentialModuleDto } = command;\n\n        // Saving potential module into the database\n        const potentialModule = await this.moduleManagementRepository.create(createPotentialModuleDto);\n        \n        // Create a PotentialModuleRegisteredEvent with the saved potential module\n        const moduleManagement = new PotentialModuleRegisteredEvent(potentialModule);\n\n        // Publish the event using the EventPublisher\n        const event = this.publisher.mergeObjectContext(moduleManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommand.html":{"url":"classes/CreatePotentialStudentCommand.html","title":"class - CreatePotentialStudentCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: createPotentialStudentDto)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        createPotentialStudentDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialStudentDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from '../../dto/create-potentialStudent.dto';\n\n// Define the CreatePotentialStudentCommand class implementing ICommand interface\nexport class CreatePotentialStudentCommand implements ICommand {\n  // Constructor for the CreatePotentialStudentCommand class\n  constructor(\n    // The createPotentialStudentDto parameter represents the data required to create a potential student\n    public readonly createPotentialStudentDto: createPotentialStudentDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommandHandler.html":{"url":"classes/CreatePotentialStudentCommandHandler.html","title":"class - CreatePotentialStudentCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialStudentCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialStudentCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialStudentCommand } from \"./create-potentialStudent.command\";\nimport { PotentialStudentRegisteredEvent } from \"../../events/potentialStudent-registered.event\";\nimport { StudentManagementRepository } from \"../../student-management.repository\";\n\n// Define the command handler for the CreatePotentialStudentCommand\n@CommandHandler(CreatePotentialStudentCommand)\nexport class CreatePotentialStudentCommandHandler implements ICommandHandler {\n\n    // Constructor for the CreatePotentialStudentCommandHandler class\n    // It injects the EventPublisher and StudentManagementRepository instances\n    constructor(\n        private readonly publisher: EventPublisher, private studentManagementRepository: StudentManagementRepository) {}\n\n    // Execute method that handles the command\n    async execute(command: CreatePotentialStudentCommand): Promise {\n        // Log a message to indicate that the command handler has been triggered\n        console.log(\"Triggered Command Handler\")\n\n        // Extract the createPotentialStudentDto from the command\n        const { createPotentialStudentDto } = command;\n\n        // Saving the potential student data into the database\n        const potentialStudent = await this.studentManagementRepository.create(createPotentialStudentDto);\n\n        // Creating a new PotentialStudentRegisteredEvent with the potentialStudent data\n        const student = new PotentialStudentRegisteredEvent(potentialStudent);\n\n        // Merge the event with the EventPublisher context to track its operations\n        const event = this.publisher.mergeObjectContext(student);\n\n        // Publish the event to trigger any registered event handlers for this event\n        event.publish(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommand.html":{"url":"classes/CreatePotentialTestCommand.html","title":"class - CreatePotentialTestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential test.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: createPotentialTestDto)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreatePotentialTestCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        createPotentialTestDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for creating a potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialTestDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for creating a potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { createPotentialTestDto } from \"../dto/create-potentialTest.dto\";\n\n/**\n * Command class for creating a potential test.\n */\nexport class CreatePotentialTestCommand implements ICommand {\n    /**\n     * Creates an instance of CreatePotentialTestCommand.\n     * @param createPotentialTestDto The DTO object containing the data for creating a potential test.\n     */\n    constructor(public readonly createPotentialTestDto: createPotentialTestDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommandHandler.html":{"url":"classes/CreatePotentialTestCommandHandler.html","title":"class - CreatePotentialTestCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler class responsible for handling the CreatePotentialTestCommand.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialTestCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the command handler logic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialTestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialTestCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the command execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialTestCommand } from \"./create-potentialTest.command\";\nimport { PotentialTestRegisteredEvent } from \"../events/potentialTest-registered.event\";\nimport { TestProgramRepository } from \"../test-program.repository\";\n\n/**\n * Command handler class responsible for handling the CreatePotentialTestCommand.\n */\n@CommandHandler(CreatePotentialTestCommand)\nexport class CreatePotentialTestCommandHandler implements ICommandHandler {\n    constructor(\n        /**\n         * The event publisher used to publish events.\n         */\n        private readonly publisher: EventPublisher,\n        /**\n         * The repository for managing test programs.\n         */\n        private testProgramRepository: TestProgramRepository\n    ) {}\n\n    /**\n     * Executes the command handler logic.\n     * @param command The CreatePotentialTestCommand instance.\n     * @returns A promise that resolves to the result of the command execution.\n     */\n    async execute(command: CreatePotentialTestCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialTestDto } = command;\n\n        // Saving the test into the database\n        const potentialTest = await this.testProgramRepository.create(createPotentialTestDto);\n        const test = new PotentialTestRegisteredEvent(potentialTest);\n\n        const event = this.publisher.mergeObjectContext(test);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/create-teacher.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/teacher/dto/create-teacher.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n// Define the CreateTeacherDto class extending AbstractDocument\nexport class CreateTeacherDto extends AbstractDocument {\n  // The name property represents the name of the teacher\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Import necessary dependencies\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * @module DatabaseModule\n * @description Module for configuring the database connection using Mongoose.\n */\n@Module({\n  imports: [\n    /**\n     * @module MongooseModule\n     * @description Mongoose module for connecting to the MongoDB database.\n     * It uses the `forRootAsync` method to configure the connection asynchronously.\n     */\n    MongooseModule.forRootAsync({\n      /**\n       * @method useFactory\n       * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n       * @returns {Object} - The Mongoose connection configuration object.\n       * @description Factory function for creating the Mongoose connection configuration object.\n       * It retrieves the MongoDB URI from the `MONGODB_URI` configuration value using the ConfigService.\n       */\n      useFactory: (configService: ConfigService) => ({\n          uri: configService.get('MONGODB_URI')\n      }),\n      /**\n       * @property {Array} inject\n       * @description An array of dependencies to inject into the factory function.\n       * In this case, it injects the ConfigService.\n       */\n      inject: [ConfigService]\n    })\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModuleManagementController.html":{"url":"controllers/ModuleManagementController.html","title":"controller - ModuleManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModuleManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module-management\n            \n\n\n            \n                Description\n            \n            \n                Controller for module management related HTTP endpoints.\nResponsible for handling module creation, retrieval, and deletion.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialModuleDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialModuleDto(data: applyModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:24\n                \n            \n\n\n            \n                \n                    Handles HTTP POST requests to create a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating a potential module.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:44\n                \n            \n\n\n            \n                \n                    Handles HTTP DELETE requests to delete an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:34\n                \n            \n\n\n            \n                \n                    Handles HTTP GET requests to retrieve all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ModuleManagementService } from './module-management.service';\nimport { applyModuleDto } from './dto/applyModule.dto';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Controller for module management related HTTP endpoints.\n * Responsible for handling module creation, retrieval, and deletion.\n */\n@Controller('module-management')\nexport class ModuleManagementController {\n  constructor(\n    private readonly moduleManagementService: ModuleManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus\n  ) {}\n\n  /**\n   * Handles HTTP POST requests to create a potential module.\n   * @param data The data for creating a potential module.\n   */\n  @Post()\n  async createPotentialModuleDto(@Body() data: applyModuleDto) {\n    const command = new CreatePotentialModuleCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Handles HTTP GET requests to retrieve all applications.\n   * @returns A promise that resolves to the applications.\n   */\n  @Get()\n  async getApplications() {\n    return this.moduleManagementService.getApplications();\n  }\n\n  /**\n   * Handles HTTP DELETE requests to delete an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is deleted.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.moduleManagementService.deleteApplicationById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModuleManagementModule.html":{"url":"modules/ModuleManagementModule.html","title":"module - ModuleManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModuleManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_ModuleManagementModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/module-management/src/module-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Nest module for managing the module management feature.\nResponsible for importing dependencies, configuring providers, and controllers.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModuleManagementRepository\n                        \n                        \n                            ModuleManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModuleManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialModule, PotentialModuleSchema } from './schemas/potentialModule.schema';\nimport { ModuleManagementService } from './module-management.service';\nimport { ModuleManagementController } from './module-management.controller';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { PotentialModuleRegisteredEvent } from './events/potentialModule-registered.event';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Nest module for managing the module management feature.\n * Responsible for importing dependencies, configuring providers, and controllers.\n */\n@Module({\n  imports: [\n    // Import configuration module\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env'\n    }),\n\n    // Import RabbitMQ module\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import database module\n    DatabaseModule,\n\n    // Import CQRS module\n    CqrsModule,\n\n    // Import Mongoose module and register potential module schema\n    MongooseModule.forFeature([{ name: PotentialModule.name, schema: PotentialModuleSchema }])\n  ],\n  controllers: [ModuleManagementController],\n  providers: [\n    // Configure module management service and repository\n    ModuleManagementService,\n    ModuleManagementRepository,\n\n    // Configure event and command handlers\n    PotentialModuleRegisteredEvent,\n    CreatePotentialModuleCommand\n  ],\n})\nexport class ModuleManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementRepository.html":{"url":"injectables/ModuleManagementRepository.html","title":"injectable - ModuleManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repository class for handling database operations related to the PotentialModule entity.\nExtends the abstract repository class provided by the common module.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.repository.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the ModuleManagementRepository instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected Mongoose model for the PotentialModule schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialModule } from \"./schemas/potentialModule.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Repository class for handling database operations related to the `PotentialModule` entity.\n * Extends the abstract repository class provided by the common module.\n */\n@Injectable()\nexport class ModuleManagementRepository extends AbstractRepository {\n    /**\n     * Constructs the `ModuleManagementRepository` instance.\n     * @param applicationModel The injected Mongoose model for the `PotentialModule` schema.\n     */\n    constructor(@InjectModel(PotentialModule.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementService.html":{"url":"injectables/ModuleManagementService.html","title":"injectable - ModuleManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for handling business logic related to the module management feature.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is successfully deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to an array of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialModule } from './schemas/potentialModule.schema';\nimport { ModuleManagementRepository } from './module-management.repository';\n\n/**\n * Service class for handling business logic related to the module management feature.\n */\n@Injectable()\nexport class ModuleManagementService {\n  constructor(\n    /**\n     * Injects the module management repository.\n     * @param moduleManagementRepository The injected module management repository.\n     */\n    @InjectModel(PotentialModule.name)\n    private readonly moduleManagementRepository: ModuleManagementRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications.\n   * @returns A promise that resolves to an array of applications.\n   */\n  async getApplications() {\n    return this.moduleManagementRepository.find({});\n  }\n\n  /**\n   * Deletes an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is successfully deleted.\n   */\n  async deleteApplicationById(id: string) {\n    return this.moduleManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClass.html":{"url":"classes/PotentialClass.html","title":"class - PotentialClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/schemas/potentialClass.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { PotentialStudent } from 'apps/student-management/src/schemas/potentialStudent.schema';\n\n@Schema()\nexport class PotentialClass extends AbstractDocument {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  student: PotentialStudent;\n\n}\n\nexport const PotentialClassSchema = SchemaFactory.createForClass(PotentialClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEvent.html":{"url":"classes/PotentialClassRegisteredEvent.html","title":"class - PotentialClassRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data related to the potential class being registered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The data related to the potential class being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\nexport class PotentialClassRegisteredEvent extends AggregateRoot {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEvent.\n     * @param createPotentialClassDto The data related to the potential class being registered.\n     */\n    constructor(public readonly createPotentialClassDto: any) {\n        super();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEventHandler.html":{"url":"classes/PotentialClassRegisteredEventHandler.html","title":"class - PotentialClassRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialClass: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEventHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        potentialClass\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for PotentialClass.\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The RabbitmqService for sending notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialClassRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:28\n                \n            \n\n\n            \n                \n                    Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialClassRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialClassRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialClassRegisteredEvent } from './potentialClass-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from '../schemas/potentialClass.schema';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialClassRegisteredEvent)\nexport class PotentialClassRegisteredEventHandler implements IEventHandler {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEventHandler.\n     * @param potentialClass The Mongoose model for PotentialClass.\n     * @param rabbitmqService The RabbitmqService for sending notifications.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name) private readonly potentialClass: Model,\n        private readonly rabbitmqService: RabbitmqService\n    ) {}\n\n    /**\n     * Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n     * @param event The PotentialClassRegisteredEvent instance.\n     */\n    async handle(event: PotentialClassRegisteredEvent): Promise {\n        // Send a notification to the study using RabbitMQ\n        const message = `A new class named: ${PotentialClass.name} has been made`;\n\n        await this.rabbitmqService.sendMessage('study-notification', message);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModule.html":{"url":"classes/PotentialModule.html","title":"class - PotentialModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/schemas/potentialModule.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialModule entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:27\n                        \n                    \n\n            \n                \n                    Class associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:15\n                        \n                    \n\n            \n                \n                    Name of the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { Teacher } from 'apps/student-management/src/schemas/teacher.schema';\nimport { PotentialClass } from 'apps/class-management/src/schemas/potentialClass.schema';\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\n@Schema()\nexport class PotentialModule extends AbstractDocument {\n  /**\n   * Name of the potential module.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * Teacher associated with the potential module.\n   */\n  @Prop({ required: true })\n  teacher: Teacher;\n\n  /**\n   * Class associated with the potential module.\n   */\n  @Prop({ required: true})\n  class: PotentialClass;\n}\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\nexport const PotentialModuleSchema = SchemaFactory.createForClass(PotentialModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEvent.html":{"url":"classes/PotentialModuleRegisteredEvent.html","title":"class - PotentialModuleRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event representing the registration of a potential module.\nExtends the AggregateRoot class.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PotentialModuleRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating the potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating the potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event representing the registration of a potential module.\n * Extends the AggregateRoot class.\n */\nexport class PotentialModuleRegisteredEvent extends AggregateRoot {\n  /**\n   * Initializes a new instance of the PotentialModuleRegisteredEvent class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating the potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEventHandler.html":{"url":"classes/PotentialModuleRegisteredEventHandler.html","title":"class - PotentialModuleRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialModuleRegisteredEvent.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialModule: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialModule\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialModuleRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:23\n                \n            \n\n\n            \n                \n                    Handles the PotentialModuleRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialModuleRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialModuleRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves when the event handling is complete.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialModuleRegisteredEvent } from './potentialModule-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PotentialModule } from '../schemas/potentialModule.schema';\n\n/**\n * Event handler for the PotentialModuleRegisteredEvent.\n */\n@EventsHandler(PotentialModuleRegisteredEvent)\nexport class PotentialModuleRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(PotentialModule.name) private readonly potentialModule: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialModuleRegisteredEvent.\n   * @param event The PotentialModuleRegisteredEvent instance.\n   * @returns A promise that resolves when the event handling is complete.\n   */\n  async handle(event: PotentialModuleRegisteredEvent): Promise {\n    const message = `A new module named: ${PotentialModule.name} has been made`;\n    await this.rabbitmqService.sendMessage('study-notification', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudent.html":{"url":"classes/PotentialStudent.html","title":"class - PotentialStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/potentialStudent.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n// Define the PotentialStudent schema using @Schema decorator\n@Schema()\nexport class PotentialStudent extends AbstractDocument {\n  // Define the name property with the required validation\n  @Prop({ required: true })\n  name: string;\n\n  // Define the study property with the required validation\n  @Prop({ required: true })\n  study: string;\n\n  // Define the phoneNumber property with the required validation\n  @Prop({ required: true })\n  phoneNumber: string;\n\n  // Define the email property with the required validation\n  @Prop({ required: true })\n  email: string;\n}\n\n// Create the Mongoose schema for the PotentialStudent class using SchemaFactory\nexport const PotentialStudentSchema = SchemaFactory.createForClass(PotentialStudent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEvent.html":{"url":"classes/PotentialStudentRegisteredEvent.html","title":"class - PotentialStudentRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot, IEvent } from '@nestjs/cqrs';\n\n// Define the PotentialStudentRegisteredEvent class extending AggregateRoot and implementing IEvent\nexport class PotentialStudentRegisteredEvent extends AggregateRoot implements IEvent {\n  // Constructor for the PotentialStudentRegisteredEvent class\n  constructor(public readonly createPotentialStudentDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEventHandler.html":{"url":"classes/PotentialStudentRegisteredEventHandler.html","title":"class - PotentialStudentRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialStudentRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialStudentRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEvent } from './potentialStudent-registered.event';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RabbitmqService } from '@app/common';\nimport { Teacher } from '../schemas/teacher.schema';\n\n// Define the PotentialStudentRegisteredEventHandler class implementing IEventHandler\n@EventsHandler(PotentialStudentRegisteredEvent)\nexport class PotentialStudentRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  // Handle method that processes the event\n  async handle(event: PotentialStudentRegisteredEvent): Promise {\n    // Log a message to indicate that the event handler has been triggered\n    console.log(\"Triggered eventhandler\")\n\n    // Find a teacher and convert it to an object\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n\n    // Extract the createPotentialStudentDto from the event\n    const { createPotentialStudentDto } = event;\n\n    // Create a notification message for the teacher\n    const message = `Hello ${teacher.name}, ${createPotentialStudentDto.name} has applied for the study ${createPotentialStudentDto.study}. Contact: ${createPotentialStudentDto.email}, ${createPotentialStudentDto.phoneNumber}`;\n\n    // Send the notification message to the teacher using RabbitMQ\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTest.html":{"url":"classes/PotentialTest.html","title":"class - PotentialTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/potentialTest.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialTest entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answers\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                ec\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:43\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:25\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:31\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:19\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:37\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * Mongoose schema for the PotentialTest entity.\n */\n@Schema()\nexport class PotentialTest extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @Prop({ required: true })\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @Prop({ required: true })\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @Prop({ required: true })\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  answers: string[];\n}\n\n/**\n * Mongoose schema definition for the PotentialTest entity.\n */\nexport const PotentialTestSchema = SchemaFactory.createForClass(PotentialTest);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEvent.html":{"url":"classes/PotentialTestRegisteredEvent.html","title":"class - PotentialTestRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for indicating the registration of a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of PotentialTestRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for the registered potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:11\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for the registered potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event class for indicating the registration of a potential test.\n */\nexport class PotentialTestRegisteredEvent extends AggregateRoot {\n  /**\n   * Creates an instance of PotentialTestRegisteredEvent.\n   * @param createPotentialTestDto The DTO object containing the data for the registered potential test.\n   */\n  constructor(public readonly createPotentialTestDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEventHandler.html":{"url":"classes/PotentialTestRegisteredEventHandler.html","title":"class - PotentialTestRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialTestRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialTestRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEvent } from './potentialTest-registered.event';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialTestRegisteredEvent)\nexport class PotentialTestRegisteredEventHandler implements IEventHandler {\n  // constructor(@InjectModel(PotentialTest.name) private readonly potentialTest : Model,  private readonly rabbitmqService: RabbitmqService) {}\n  constructor(@InjectModel(Teacher.name) private readonly teacher : Model,  private readonly rabbitmqService: RabbitmqService) {}\n\n  async handle(event: PotentialTestRegisteredEvent): Promise {\n    console.log(\"Triggered event handler\")\n    \n    const teacher =  (await this.teacher.findOne({}).exec()).toObject();\n    const { createPotentialTestDto } = event;\n\n    // Send a notification to the students using RabbitMQ\n    const message = `Hello everyone, ${teacher.name} has added a new test for ${createPotentialTestDto.module}, it's about ${createPotentialTestDto.name}, it will have a duration of ${createPotentialTestDto.duration} minutes, passing this test will give ${createPotentialTestDto.ec} ECs`\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitmqService.html":{"url":"injectables/RabbitmqService.html","title":"injectable - RabbitmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:11\n                            \n                        \n\n                \n                    \n                            It injects the RabbitMQ client proxy into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitMQ client proxy instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(queue: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:31\n                \n            \n\n\n            \n                \n                    It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the queue to send the message to.\n\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be sent.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the message is sent successfully.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n/**\n * @class RabbitmqService\n * @description Service for interacting with RabbitMQ microservice client.\n */\n@Injectable()\nexport class RabbitmqService {\n\n  /**\n   * @constructor\n   * @param {ClientProxy} clientProxy - The RabbitMQ client proxy instance.\n   * @description Constructs an instance of the RabbitmqService.\n   * It injects the RabbitMQ client proxy into the service.\n   */\n  constructor(\n    @Inject('RABBITMQ_CLIENT') private readonly clientProxy: ClientProxy,\n  ) {}\n\n  /**\n   * @method sendMessage\n   * @param {string} queue - The name of the queue to send the message to.\n   * @param {string} message - The message to be sent.\n   * @returns {Promise} - A promise that resolves when the message is sent successfully.\n   * @description Sends a message to the specified queue using the RabbitMQ client proxy.\n   * It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n   */\n  sendMessage(queue: string, message: string): Promise {\n    return lastValueFrom(this.clientProxy.emit(queue, message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.module.ts:31\n                \n            \n\n\n            \n                \n                    It returns a dynamically generated module configuration that can be used for importing the module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RmqModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \nThe dynamically generated module configuration.\n\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // Import necessary dependencies\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentManagementController.html":{"url":"controllers/StudentManagementController.html","title":"controller - StudentManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                applyForStudy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        applyForStudy\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyForStudy(data: createPotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/student-management.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { StudentManagementService } from './student-management.service';\nimport { CreatePotentialStudentCommand } from './commands/create-potentialStudent/create-potentialStudent.command';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from './dto/create-potentialStudent.dto';\n\n// Define the StudentManagementController class\n@Controller('student-management')\nexport class StudentManagementController {\n  constructor(\n    private readonly studentManagementService: StudentManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  // Endpoint to apply for study\n  @Post()\n  async applyForStudy(@Body() data: createPotentialStudentDto) {\n    // Create a new CreatePotentialStudentCommand with the provided data\n    const command = new CreatePotentialStudentCommand(data);\n\n    // Execute the command using the command bus\n    const student = this.commandBus.execute(command);\n\n    // Return the student\n    return student;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentManagementModule.html":{"url":"modules/StudentManagementModule.html","title":"module - StudentManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/student-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentManagementRepository\n                        \n                        \n                            StudentManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            TeacherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { StudentManagementController } from './student-management.controller';\nimport { StudentManagementService } from './student-management.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialStudent, PotentialStudentSchema } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEventHandler } from './events/potentialStudent-registered.event.handler';\nimport { CreatePotentialStudentCommandHandler } from './commands/create-potentialStudent/create-potentialStudent.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from './teacher/teacher.module';\n\n// Define the StudentManagementModule class\n@Module({\n  // Configure the module imports\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    MongooseModule.forFeature([\n      { name: PotentialStudent.name, schema: PotentialStudentSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n    TeacherModule,\n  ],\n  // Configure the module controllers\n  controllers: [StudentManagementController],\n  // Configure the module providers\n  providers: [\n    StudentManagementService,\n    StudentManagementRepository,\n    PotentialStudentRegisteredEventHandler,\n    CreatePotentialStudentCommandHandler,\n  ],\n})\nexport class StudentManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementRepository.html":{"url":"injectables/StudentManagementRepository.html","title":"injectable - StudentManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialStudent } from \"./schemas/potentialStudent.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n// Define the StudentManagementRepository class\n@Injectable()\nexport class StudentManagementRepository extends AbstractRepository {\n  constructor(@InjectModel(PotentialStudent.name) applicationModel: Model) {\n    // Call the constructor of the AbstractRepository class and pass the applicationModel\n    super(applicationModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementService.html":{"url":"injectables/StudentManagementService.html","title":"injectable - StudentManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/student-management.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialStudent } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\n\n// Define the StudentManagementService class\n@Injectable()\nexport class StudentManagementService {\n  constructor(\n    @InjectModel(PotentialStudent.name)\n    private readonly studentManagementRepository: StudentManagementRepository,\n  ) {}\n\n  // Method to get all applications\n  async getApplications() {\n    return this.studentManagementRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudyProgramController.html":{"url":"controllers/StudyProgramController.html","title":"controller - StudyProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudyProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                study-program\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/study-program/src/study-program.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { StudyProgramService } from './study-program.service';\n\n@Controller('study-program')\nexport class StudyProgramController {\n  constructor(private readonly studyProgramService: StudyProgramService) {}\n\n  @Get()\n  getHello(): string {\n    return this.studyProgramService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudyProgramModule.html":{"url":"modules/StudyProgramModule.html","title":"module - StudyProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    StudyProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/study-program/src/study-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudyProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudyProgramController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudyProgramController } from './study-program.controller';\nimport { StudyProgramService } from './study-program.service';\n\n@Module({\n  imports: [],\n  controllers: [StudyProgramController],\n  providers: [StudyProgramService],\n})\nexport class StudyProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudyProgramService.html":{"url":"injectables/StudyProgramService.html","title":"injectable - StudyProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudyProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/study-program/src/study-program.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StudyProgramService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher.html":{"url":"classes/Teacher.html","title":"class - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/teacher.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/teacher.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n// Define the Teacher schema using @Schema decorator\n@Schema()\nexport class Teacher extends AbstractDocument {\n  // Define the name property with the required validation\n  @Prop({ required: true })\n  name: string;\n}\n\n// Create the Mongoose schema for the Teacher class using SchemaFactory\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher-1.html":{"url":"classes/Teacher-1.html","title":"class - Teacher-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the Teacher entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/teacher.schema.ts:13\n                        \n                    \n\n            \n                \n                    The name of the teacher.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * Mongoose schema for the Teacher entity.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * The name of the teacher.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * Mongoose schema definition for the Teacher entity.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                execute\n                            \n                            \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('teacher_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { RmqContext } from '@nestjs/microservices/ctx-host/rmq.context';\nimport { Ctx, MessagePattern, Payload } from '@nestjs/microservices';\n\n// Define the TeacherController class\n@Controller('teachers')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  // Handler for the POST /teachers endpoint\n  @Post()\n  async create(@Body() createTeacherDto: CreateTeacherDto) {\n    // Call the teacherService to create a teacher\n    await this.teacherService.create(createTeacherDto);\n\n    // Return a response object with status and message\n    return { status: 201, message: \"Created Teacher\" };\n  }\n\n  // Handler for the GET /teachers endpoint\n  @Get()\n  findAll() {\n    // Call the teacherService to find all teachers\n    return this.teacherService.findAll();\n  }\n\n  // Message handler for 'teacher_notifications' pattern\n  @MessagePattern('teacher_notifications')\n  public async execute(@Payload() data: any) {\n    // Log the received message\n    console.log('Message: ', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherRepository\n                        \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TeacherRepository } from './teacher.repository';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\n\n// Define the TeacherModule class\n@Module({\n  // Import required modules\n  imports: [\n    // Register RmqModule with the given name\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    // Register MongooseModule with the Teacher schema\n    MongooseModule.forFeature([{ name: Teacher.name, schema: TeacherSchema }])\n  ],\n  // Specify the controllers\n  controllers: [TeacherController],\n  // Specify the providers\n  providers: [TeacherService, TeacherRepository]\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherRepository.html":{"url":"injectables/TeacherRepository.html","title":"injectable - TeacherRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Teacher } from \"../schemas/teacher.schema\";\n\n// Define the TeacherRepository class\n@Injectable()\nexport class TeacherRepository extends AbstractRepository {\n    // Constructor for the TeacherRepository class\n    constructor(@InjectModel(Teacher.name) applicationModel: Model) {\n        // Call the constructor of the AbstractRepository class with the applicationModel\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: TeacherRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        TeacherRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { TeacherRepository } from './teacher.repository';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\n\n// Define the TeacherService class\n@Injectable()\nexport class TeacherService {\n  constructor(\n    @InjectModel(Teacher.name)\n    private readonly teacherRepository: TeacherRepository,\n  ) {}\n\n  // Method to create a teacher\n  async create(createTeacherDto: CreateTeacherDto) {\n    // Call the create method of teacherRepository\n    await this.teacherRepository.create(createTeacherDto);\n  }\n\n  // Method to find all teachers\n  async findAll() {\n    // Call the find method of teacherRepository\n    return this.teacherRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestProgramController.html":{"url":"controllers/TestProgramController.html","title":"controller - TestProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test-program\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing potential tests in the test-program module.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialTestDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialTestDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialTestDto(data: createPotentialTestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:34\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new potential test.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A Promise that resolves to the created potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:24\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential test by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential test to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the deleted potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential tests.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { TestProgramService } from './test-program.service';\nimport { createPotentialTestDto } from './dto/create-potentialTest.dto';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialTestCommand } from './commands/create-potentialTest.command';\n\n/**\n * Controller class for managing potential tests in the test-program module.\n */\n@Controller('test-program')\nexport class TestProgramController {\n  constructor(\n    private readonly testProgramService: TestProgramService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Endpoint for deleting a potential test by its ID.\n   * @param id The ID of the potential test to be deleted.\n   * @returns A Promise that resolves to the deleted potential test.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.testProgramService.deleteApplicationById(id);\n  }\n\n  /**\n   * Endpoint for creating a new potential test.\n   * @param data The data for creating the potential test.\n   * @returns A Promise that resolves to the created potential test.\n   */\n  @Post()\n  async createPotentialTestDto(@Body() data: createPotentialTestDto) {\n    const command = new CreatePotentialTestCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Endpoint for retrieving all potential tests.\n   * @returns A Promise that resolves to an array of potential tests.\n   */\n  @Get()\n  async getApplications() {\n    return this.testProgramService.getApplications();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestProgramModule.html":{"url":"modules/TestProgramModule.html","title":"module - TestProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    TestProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_imports\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/test-program/src/test-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestProgramRepository\n                        \n                        \n                            TestProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestProgramController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes from external packages\nimport { Module } from '@nestjs/common';\nimport { TestProgramController } from './test-program.controller';\nimport { TestProgramService } from './test-program.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialTest, PotentialTestSchema } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEventHandler } from './events/potentialTest-registered.event.handler';\nimport { CreatePotentialTestCommandHandler } from './commands/create-potentialTest.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from 'apps/student-management/src/teacher/teacher.module';\n\n@Module({\n  // Import and configure modules for the TestProgramModule\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    // Import MongooseModule and specify the schemas to be used\n    MongooseModule.forFeature([\n      { name: PotentialTest.name, schema: PotentialTestSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n  ],\n  // Specify the controllers to be included in the TestProgramModule\n  controllers: [TestProgramController],\n  // Specify the services and repositories to be included in the TestProgramModule\n  providers: [\n    TestProgramService,\n    TestProgramRepository,\n    PotentialTestRegisteredEventHandler,\n    CreatePotentialTestCommandHandler,\n  ],\n})\nexport class TestProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramRepository.html":{"url":"injectables/TestProgramRepository.html","title":"injectable - TestProgramRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramRepository class.\nThis class extends the AbstractRepository class from the \"@app/common\" package.\nIt provides data access methods for the \"PotentialTest\" entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.repository.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramRepository class.\n                        This model is used for executing database operations related to the \"PotentialTest\" entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose Model for the \"PotentialTest\" entity, injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialTest } from \"./schemas/potentialTest.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Injectable TestProgramRepository class.\n * This class extends the AbstractRepository class from the \"@app/common\" package.\n * It provides data access methods for the \"PotentialTest\" entity.\n */\n@Injectable()\nexport class TestProgramRepository extends AbstractRepository {\n    /**\n     * Constructor for the TestProgramRepository class.\n     * @param applicationModel The Mongoose Model for the \"PotentialTest\" entity, injected using @InjectModel decorator.\n     *                         This model is used for executing database operations related to the \"PotentialTest\" entity.\n     */\n    constructor(@InjectModel(PotentialTest.name) applicationModel: Model) {\n        // Call the constructor of the parent AbstractRepository class passing the injected \"applicationModel\".\n        // The parent class takes care of creating basic CRUD operations for the \"PotentialTest\" entity.\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramService.html":{"url":"injectables/TestProgramService.html","title":"injectable - TestProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramService class.\nThis class provides methods to interact with the test program data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramService class.\n                            This repository is used to execute database operations related to the test program.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TestProgramRepository instance injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes an application from the test program by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the result of the delete operation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:27\n                \n            \n\n\n            \n                \n                    Retrieves all applications from the test program.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests (applications).\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialTest } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\n\n/**\n * Injectable TestProgramService class.\n * This class provides methods to interact with the test program data.\n */\n@Injectable()\nexport class TestProgramService {\n  /**\n   * Constructor for the TestProgramService class.\n   * @param testProgramRepository The TestProgramRepository instance injected using @InjectModel decorator.\n   *                             This repository is used to execute database operations related to the test program.\n   */\n  constructor(\n    @InjectModel(PotentialTest.name)\n    private readonly testProgramRepository: TestProgramRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications from the test program.\n   * @returns A Promise that resolves to an array of potential tests (applications).\n   */\n  async getApplications() {\n    return this.testProgramRepository.find({});\n  }\n\n  /**\n   * Deletes an application from the test program by its ID.\n   * @param id The ID of the application to be deleted.\n   * @returns A Promise that resolves to the result of the delete operation.\n   */\n  async deleteApplicationById(id: string) {\n    return this.testProgramRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\n// Define the UpdateTeacherDto class extending PartialType(CreateTeacherDto)\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyClassDto.html":{"url":"classes/applyClassDto.html","title":"class - applyClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/applyClass.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:15\n                        \n                    \n\n            \n                \n                    The name of the class to apply for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:20\n                        \n                    \n\n            \n                \n                    The potential student applying for the class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { AbstractDocument } from \"@app/common\";\nimport { PotentialStudent } from \"apps/student-management/src/schemas/potentialStudent.schema\";\n\nexport class applyClassDto extends AbstractDocument {\n    /**\n     * The name of the class to apply for.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The potential student applying for the class.\n     */\n    student: PotentialStudent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyModuleDto.html":{"url":"classes/applyModuleDto.html","title":"class - applyModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/applyModule.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for applying a module.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:26\n                        \n                    \n\n            \n                \n                    Class associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:16\n                        \n                    \n\n            \n                \n                    Name of the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { PotentialClass } from \"apps/class-management/src/schemas/potentialClass.schema\";\nimport { Teacher } from \"apps/student-management/src/schemas/teacher.schema\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO (Data Transfer Object) for applying a module.\n * Extends the AbstractDocument class.\n */\nexport class applyModuleDto extends AbstractDocument {\n    /**\n     * Name of the module.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * Teacher associated with the module.\n     */\n    teacher: Teacher;\n\n    /**\n     * Class associated with the module.\n     */\n    class: PotentialClass;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/class-management/src/class-management.controller.ts\n            \n            controller\n            ClassManagementController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.repository.ts\n            \n            injectable\n            ClassManagementRepository\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.service.ts\n            \n            injectable\n            ClassManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.handler.ts\n            \n            class\n            CreatePotentialClassCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.ts\n            \n            class\n            CreatePotentialClassCommand\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/applyClass.dto.ts\n            \n            class\n            applyClassDto\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.handler.ts\n            \n            class\n            PotentialClassRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.ts\n            \n            class\n            PotentialClassRegisteredEvent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            class\n            PotentialClass\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            variable\n            PotentialClassSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.handler.ts\n            \n            class\n            CreatePotentialModuleCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.ts\n            \n            class\n            CreatePotentialModuleCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/constants/service.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/applyModule.dto.ts\n            \n            class\n            applyModuleDto\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.handler.ts\n            \n            class\n            PotentialModuleRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.ts\n            \n            class\n            PotentialModuleRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.controller.ts\n            \n            controller\n            ModuleManagementController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.repository.ts\n            \n            injectable\n            ModuleManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.service.ts\n            \n            injectable\n            ModuleManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            class\n            PotentialModule\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            variable\n            PotentialModuleSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n            \n            class\n            CreatePotentialStudentCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n            \n            class\n            CreatePotentialStudentCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/dto/create-potentialStudent.dto.ts\n            \n            class\n            createPotentialStudentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n            \n            class\n            PotentialStudentRegisteredEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.ts\n            \n            class\n            PotentialStudentRegisteredEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            class\n            PotentialStudent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            variable\n            PotentialStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.controller.ts\n            \n            controller\n            StudentManagementController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.repository.ts\n            \n            injectable\n            StudentManagementRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.service.ts\n            \n            injectable\n            StudentManagementService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.repository.ts\n            \n            injectable\n            TeacherRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/study-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.controller.ts\n            \n            controller\n            StudyProgramController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.service.ts\n            \n            injectable\n            StudyProgramService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.handler.ts\n            \n            class\n            CreatePotentialTestCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.ts\n            \n            class\n            CreatePotentialTestCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/dto/create-potentialTest.dto.ts\n            \n            class\n            createPotentialTestDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.handler.ts\n            \n            class\n            PotentialTestRegisteredEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.ts\n            \n            class\n            PotentialTestRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            class\n            PotentialTest\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            variable\n            PotentialTestSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.controller.ts\n            \n            controller\n            TestProgramController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.repository.ts\n            \n            injectable\n            TestProgramRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.service.ts\n            \n            injectable\n            TestProgramService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            injectable\n            AbstractRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.service.ts\n            \n            injectable\n            RabbitmqService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialStudentDto.html":{"url":"classes/createPotentialStudentDto.html","title":"class - createPotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/dto/create-potentialStudent.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from \"class-validator\";\n\n// Define the createPotentialStudentDto class extending AbstractDocument\nexport class createPotentialStudentDto extends AbstractDocument {\n    // The name property represents the name of the potential student\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    // The email property represents the email address of the potential student\n    @IsEmail()\n    email: string;\n\n    // The study property represents the field of study of the potential student\n    @IsString()\n    @IsNotEmpty()\n    study: string;\n  \n    // The phoneNumber property represents the phone number of the potential student\n    @IsPhoneNumber()\n    phoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialTestDto.html":{"url":"classes/createPotentialTestDto.html","title":"class - createPotentialTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/dto/create-potentialTest.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO class for creating a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                ec\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:50\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:27\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:34\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:20\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:42\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsArray, IsNotEmpty, IsString, IsNumber } from \"class-validator\";\n\n/**\n * DTO class for creating a potential test.\n */\nexport class createPotentialTestDto extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.4\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.4\n        \n            @nestjs/cqrs : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.0.4\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.4\n        \n            @nestjs/swagger : ^7.0.12\n        \n            amqp-connection-manager : ^4.1.13\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The NestJS application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/module-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger for API documentation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/student-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/study-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/test-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the Nest.js application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest.js application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ClassManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModuleManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudyProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../service.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            PotentialClassSchema   (apps/.../potentialClass.schema.ts)\n                        \n                        \n                            PotentialModuleSchema   (apps/.../potentialModule.schema.ts)\n                        \n                        \n                            PotentialStudentSchema   (apps/.../potentialStudent.schema.ts)\n                        \n                        \n                            PotentialTestSchema   (apps/.../potentialTest.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/constants/service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/student-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/class-management/src/schemas/potentialClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialClass)\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/schemas/potentialModule.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialModuleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialModule)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialModule entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/potentialStudent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialStudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialStudent)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/potentialTest.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialTestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialTest)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the PotentialTest entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the Teacher entity.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
