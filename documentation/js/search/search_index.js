var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.231,1,1.475]],["body/classes/AbstractDocument.html",[0,0.394,1,2.52,2,0.76,3,0.169,4,0.148,5,0.148,6,4.013,7,1.872,8,4.561,9,0.304,10,1.626,11,3.054,12,0.5,13,0.016,14,2.894,15,1.559,16,2.04,17,2.04,18,2.499,19,0.378,20,4.639,21,0.24,22,1.119,23,3.424,24,2.309,25,1.03,26,1.975,27,4.639,28,3.601,29,0.551,30,4.639,31,3.601,32,3.601,33,0.169,34,2.513,35,4.639,36,4.013,37,2.666,38,4.639,39,4.639,40,4.639,41,1.266,42,4.639,43,0.012,44,0.012]],["title/injectables/AbstractRepository.html",[45,0.892,46,1.872]],["body/injectables/AbstractRepository.html",[0,0.16,1,1.022,3,0.097,4,0.085,5,0.085,9,0.175,12,0.468,13,0.016,19,0.501,21,0.178,26,0.759,29,0.541,33,0.097,37,4.518,41,1.485,43,0.008,44,0.012,45,0.935,46,1.963,47,1.069,48,2.308,49,0.897,50,1.91,51,2.158,52,2.705,53,3.337,54,2.476,55,4.031,56,0.5,57,2.669,58,2.988,59,2.669,60,1.008,61,0.403,62,1.008,63,2.476,64,2.988,65,2.669,66,1.401,67,1.799,68,1.777,69,2.476,70,1.309,71,2.669,72,3.111,73,1.777,74,2.476,75,4.275,76,2.669,77,2.476,78,3.332,79,4.031,80,3.782,81,1.418,82,3.768,83,2.476,84,2.669,85,2.476,86,2.476,87,3.581,88,2.669,89,1.866,90,2.476,91,2.476,92,4.042,93,0.568,94,2.669,95,2.669,96,0.568,97,1.152,98,1.302,99,2.669,100,2.669,101,2.142,102,2.669,103,2.669,104,1.232,105,2.669,106,2.669,107,2.669,108,2.669,109,2.669,110,2.669,111,2.669]],["title/controllers/ClassManagementController.html",[112,1.616,113,2.735]],["body/controllers/ClassManagementController.html",[0,0.423,3,0.116,4,0.102,5,0.102,9,0.209,12,0.351,13,0.016,15,1.823,19,0.442,21,0.23,22,0.771,29,0.427,33,0.116,41,0.872,43,0.009,44,0.009,49,1.025,50,1.85,52,2.385,56,0.598,60,0.757,61,0.303,62,0.757,66,1.285,67,1.556,70,1.154,72,2.978,73,2.031,93,0.68,96,1.154,97,1.23,98,1.03,101,1.692,112,1.937,113,3.849,114,1.34,115,2.275,116,3.901,117,2.268,118,1.957,119,2.937,120,3.277,121,2.829,122,3.414,123,3.195,124,3.901,125,3.561,126,2.764,127,2.829,128,1.621,129,2.03,130,1.62,131,1.957,132,3.584,133,3.195,134,3.277,135,3.364,136,2.654,137,2.379,138,3.195,139,2.243,140,3.414,141,3.995,142,1.731,143,1.34,144,2.48,145,2.098,146,4.216,147,4.216,148,3.639,149,1.957,150,2.764,151,1.957,152,1.731,153,2.48,154,3.195,155,1.34,156,0.837,157,1.957,158,1.405,159,1.475,160,2.031,161,3.995,162,2.764,163,3.195,164,1.405,165,2.764,166,2.48,167,1.823,168,3.195,169,3.195,170,2.268,171,3.195,172,2.48,173,3.195]],["title/modules/ClassManagementModule.html",[174,0.786,175,2.735]],["body/modules/ClassManagementModule.html",[0,0.393,3,0.146,4,0.128,5,0.128,13,0.016,21,0.278,22,0.967,24,1.407,25,0.89,33,0.146,43,0.011,44,0.011,93,0.853,113,4.348,114,2.27,115,1.535,116,2.633,148,4.324,149,2.456,151,3.315,152,2.172,153,3.112,174,1.25,175,5.422,176,1.606,177,1.763,178,2.172,179,2.172,180,1.948,181,3.138,182,2.054,183,3.468,184,3.468,185,3.468,186,3.823,187,3.328,188,4.057,189,2.931,190,2.172,191,2.172,192,3.112,193,2.772,194,1.008,195,3.111,196,2.846,197,2.456,198,2.846,199,2.172,200,3.841,201,1.948,202,3.841,203,2.846,204,3.112,205,2.054,206,3.315,207,3.468,208,1.948,209,2.846,210,2.846,211,1.851,212,2.846,213,2.846,214,4.01,215,4.01,216,3.468]],["title/injectables/ClassManagementRepository.html",[45,0.892,188,2.215]],["body/injectables/ClassManagementRepository.html",[0,0.195,3,0.118,4,0.104,5,0.104,7,1.33,9,0.213,12,0.502,13,0.016,19,0.538,21,0.231,24,1.64,25,0.721,26,1.557,29,0.611,33,0.118,37,4.359,41,0.887,43,0.009,44,0.012,45,1.082,46,3.384,47,1.302,49,1.038,50,1.886,51,2.101,52,2.633,53,3.209,54,2.864,55,3.886,56,0.609,58,3.209,60,1.083,61,0.433,62,1.083,63,1.991,64,2.864,66,1.294,67,1.661,68,1.429,69,1.991,70,1.274,72,2.905,73,1.429,74,1.991,75,4.047,77,1.991,78,2.966,79,3.668,80,3.442,81,1.14,82,2.864,83,1.991,85,1.991,86,1.991,87,3.354,89,1.501,90,1.991,91,1.991,93,0.692,97,0.609,115,1.79,116,3.07,155,1.961,156,1.225,188,3.442,194,0.817,201,2.66,203,2.307,217,2.307,218,2.135,219,3.251,220,3.596,221,2.324,222,2.135,223,2.135,224,2.135,225,2.135,226,2.135,227,1.302,228,3.251,229,2.135]],["title/injectables/ClassManagementService.html",[45,0.892,148,2.36]],["body/injectables/ClassManagementService.html",[0,0.384,3,0.138,4,0.121,5,0.121,9,0.249,12,0.397,13,0.016,19,0.485,21,0.234,25,0.844,29,0.483,33,0.138,43,0.01,44,0.01,45,1.208,47,1.522,49,1.158,50,1.819,52,2.295,56,0.977,60,0.855,61,0.342,62,0.855,66,1.309,67,1.68,70,1.268,72,3.055,73,2.295,93,0.809,96,0.809,97,0.977,101,1.912,115,2.457,116,4.213,119,2.827,121,3.197,122,3.687,129,1.682,131,3.197,134,3.704,135,3.559,136,3,137,2.57,139,2.536,140,3.687,141,4.515,143,2.189,148,3.93,155,2.189,156,1.367,167,1.278,188,4.089,201,1.847,203,2.698,205,1.947,227,1.522,230,2.698,231,3.801,232,3.288,233,2.295,234,3.288,235,3.288,236,3.288,237,3.801,238,3.801]],["title/classes/CreatePotentialClassCommand.html",[0,0.231,151,2.36]],["body/classes/CreatePotentialClassCommand.html",[0,0.412,2,0.744,3,0.165,4,0.145,5,0.145,9,0.298,10,1.603,12,0.447,13,0.016,19,0.478,21,0.214,22,1.095,29,0.42,33,0.165,43,0.012,44,0.012,56,0.85,60,0.744,61,0.298,62,0.744,89,3.008,96,1.386,97,0.85,115,2.494,120,5.064,124,4.685,128,1.778,129,2.355,130,2.285,150,3.927,151,4.219,155,2.464,156,1.539,239,3.744,240,3.927,241,2.464,242,4.623,243,3.009,244,3.927,245,4.539,246,3.337,247,4.623,248,2.864,249,4.539,250,2.609]],["title/classes/CreatePotentialClassCommandHandler.html",[0,0.231,251,2.991]],["body/classes/CreatePotentialClassCommandHandler.html",[0,0.347,2,0.949,3,0.131,4,0.115,5,0.115,9,0.236,12,0.382,13,0.016,19,0.409,21,0.228,22,0.868,29,0.465,33,0.131,41,0.982,43,0.01,44,0.01,49,1.115,50,1.516,51,1.262,56,0.941,60,0.823,61,0.329,62,0.823,66,1.025,67,1.641,96,0.766,97,1.084,98,2.019,104,1.661,115,2.217,120,2.554,128,0.982,130,1.262,137,2.012,151,4.38,153,2.793,155,2.107,156,1.641,158,2.209,159,2.32,160,2.756,164,2.899,165,4.347,166,3.9,167,1.689,188,4.11,201,1.748,205,1.843,206,3.078,207,3.113,208,1.748,233,2.209,239,3.327,241,2.107,251,4.864,252,3.113,253,4.109,254,2.888,255,2.554,256,4.448,257,3.598,258,4.679,259,3.566,260,3.598,261,3.9,262,4.347,263,2.574,264,3.566,265,3.9,266,2.554,267,3.598,268,2.204,269,1.949,270,2.554,271,1.748,272,3.598,273,3.598,274,3.598,275,3.598,276,3.113,277,3.598,278,3.598,279,2.793]],["title/classes/CreatePotentialModuleCommand.html",[0,0.231,280,2.36]],["body/classes/CreatePotentialModuleCommand.html",[0,0.385,2,0.724,3,0.161,4,0.141,5,0.141,9,0.29,10,1.576,12,0.439,13,0.016,19,0.47,21,0.21,22,1.066,29,0.534,33,0.161,41,1.576,43,0.012,44,0.012,56,0.827,60,0.724,61,0.29,62,0.724,96,1.369,97,0.827,128,1.931,129,2.072,130,2.482,156,1.512,160,2.539,174,1.443,239,3.696,241,2.422,242,4.564,243,2.958,246,3.294,247,4.564,248,2.828,250,2.54,280,4.177,281,2.697,282,3.823,283,5.021,284,3.823,285,4.646,286,4.42,287,4.995,288,4.42,289,3.823]],["title/classes/CreatePotentialModuleCommandHandler.html",[0,0.231,290,2.991]],["body/classes/CreatePotentialModuleCommandHandler.html",[0,0.22,2,0.603,3,0.134,4,0.117,5,0.117,9,0.241,12,0.388,13,0.016,19,0.415,21,0.23,22,0.887,29,0.472,33,0.134,41,1.003,43,0.01,44,0.01,49,1.132,50,1.534,51,2.412,56,0.955,60,0.836,61,0.334,62,0.836,66,1.041,67,1.657,96,0.782,97,0.688,98,2.038,104,1.698,128,1.962,130,1.789,137,2.043,160,3.25,164,2.243,167,1.714,174,1.438,176,2.043,205,1.883,208,1.786,239,3.366,241,2.139,253,4.157,254,2.931,255,2.609,256,4.716,258,3.62,259,3.62,261,3.959,264,3.62,265,3.959,266,2.609,268,2.252,269,3.172,270,2.609,271,1.786,279,2.854,280,3.875,281,2.456,283,2.609,290,3.959,291,3.181,292,4.053,293,3.677,294,3.677,295,2.854,296,3.124,297,3.181,298,3.677,299,1.883,300,3.677,301,3.677,302,3.677,303,3.677,304,2.854,305,1.185,306,3.677]],["title/classes/CreatePotentialStudentCommand.html",[0,0.231,307,2.531]],["body/classes/CreatePotentialStudentCommand.html",[0,0.397,2,0.773,3,0.172,4,0.15,5,0.15,9,0.309,10,1.643,12,0.458,13,0.016,19,0.49,21,0.219,22,1.138,33,0.172,43,0.012,44,0.012,51,1.655,56,1.242,60,0.773,61,0.309,62,0.773,96,1.412,128,1.287,129,1.52,239,3.813,241,2.526,242,4.96,243,3.398,307,4.589,308,1.667,309,4.356,310,4.081,311,4.189,312,4.081,313,4.717,314,4.717,315,2.889,316,4.081,317,2.889,318,3.661,319,2.711,320,4.717,321,3.661,322,2.555,323,2.416]],["title/classes/CreatePotentialStudentCommandHandler.html",[0,0.231,324,2.735]],["body/classes/CreatePotentialStudentCommandHandler.html",[0,0.308,2,0.611,3,0.136,4,0.119,5,0.119,9,0.244,12,0.391,13,0.016,19,0.419,21,0.232,22,0.898,33,0.136,41,1.405,43,0.01,44,0.01,49,1.142,50,1.545,51,1.307,56,1.104,60,0.844,61,0.337,62,0.844,66,0.76,67,1.348,96,0.793,98,2.05,104,1.72,128,1.017,129,1.659,130,1.307,159,1.72,160,3.112,164,2.936,167,1.73,205,1.908,208,1.81,239,3.39,241,2.159,253,4.186,254,3.39,255,2.644,256,4.9,258,3.653,259,3.653,266,2.644,268,2.282,269,3.195,270,2.644,271,1.81,276,3.223,304,2.891,307,4.384,308,1.482,309,3.873,311,2.788,317,2.282,323,3.021,324,4.186,325,3.223,326,4.145,327,3.726,328,3.726,329,3.223,330,3.38,331,3.223,332,3.726,333,1.81,334,3.726,335,1.908,336,2.447,337,2.891,338,2.141,339,3.223,340,3.223,341,3.223,342,2.501,343,3.726,344,3.726,345,3.726,346,3.726,347,3.726,348,3.726,349,2.891,350,3.223,351,3.726]],["title/classes/CreatePotentialTestCommand.html",[0,0.231,352,2.531]],["body/classes/CreatePotentialTestCommand.html",[0,0.385,2,0.726,3,0.161,4,0.141,5,0.141,9,0.291,10,1.578,12,0.44,13,0.016,19,0.471,21,0.211,22,1.069,29,0.535,33,0.161,43,0.012,44,0.012,56,0.83,60,0.726,61,0.291,62,0.726,89,2.973,96,1.37,97,0.83,127,3.543,128,1.932,129,2.075,130,2.484,156,1.515,160,2.543,241,2.426,242,4.57,243,2.963,246,3.298,248,2.831,250,2.547,315,2.715,352,4.482,353,2.579,354,4.998,355,3.834,356,3.44,357,4.145,358,3.834,359,4.432,360,4.432,361,3.834]],["title/classes/CreatePotentialTestCommandHandler.html",[0,0.231,362,2.735]],["body/classes/CreatePotentialTestCommandHandler.html",[0,0.35,2,0.601,3,0.134,4,0.117,5,0.117,9,0.241,12,0.387,13,0.016,19,0.415,21,0.23,22,0.885,29,0.471,33,0.134,41,1.001,43,0.01,44,0.01,49,1.13,50,1.532,51,1.287,56,0.953,60,0.835,61,0.334,62,0.835,66,1.039,67,1.655,96,0.781,97,0.687,98,2.036,104,1.694,137,2.04,142,2.759,156,1.334,158,1.613,160,3.248,164,2.24,166,2.847,167,1.712,208,1.782,233,1.613,241,2.136,253,4.152,254,2.927,255,2.604,256,4.485,258,4.152,259,3.615,261,3.953,264,3.615,265,3.953,266,2.604,268,2.247,269,3.596,270,2.604,271,1.782,279,2.847,304,2.847,352,4.718,353,2.343,354,4.54,356,3.07,357,1.987,362,3.615,363,3.174,364,3.615,365,4.05,366,3.669,367,3.669,368,4.406,369,3.174,370,2.409,371,3.174,372,2.847,373,3.669,374,2.108,375,3.669,376,1.879,377,3.669,378,3.669,379,3.669]],["title/classes/CreateTeacherDto.html",[0,0.231,380,2.36]],["body/classes/CreateTeacherDto.html",[0,0.403,1,2.791,2,0.798,3,0.177,4,0.155,5,0.155,7,1.747,9,0.319,10,1.676,11,2.701,12,0.467,13,0.016,14,2.14,15,2.065,16,2.14,17,2.14,18,2.041,19,0.5,21,0.224,33,0.177,34,2.636,43,0.012,44,0.012,61,0.478,70,1.307,194,1.223,221,1.783,308,1.544,317,2.981,321,3.778,380,4.123,381,5.314,382,3.778,383,3.196,384,4.867,385,2.247,386,4.034,387,4.034,388,2.981,389,3.454,390,1.707]],["title/modules/DatabaseModule.html",[174,0.786,186,2.087]],["body/modules/DatabaseModule.html",[0,0.25,3,0.152,4,0.133,5,0.133,13,0.016,21,0.243,25,0.925,26,1.895,29,0.617,33,0.152,34,2.258,43,0.011,44,0.011,66,0.85,81,1.949,93,0.887,97,0.78,130,1.462,139,2.025,156,1.092,174,1.456,176,1.669,177,2.443,186,3.384,193,2.135,197,3.403,199,2.258,248,2.747,263,2.135,271,2.699,305,1.79,333,2.025,335,2.846,374,2.396,391,4.168,392,5.817,393,2.737,394,4.729,395,4.168,396,5.555,397,3.235,398,4.168,399,2.553,400,3.235,401,4.168,402,4.311,403,3.235,404,4.376,405,3.235,406,4.311,407,3.648,408,4.311,409,4.168,410,3.606,411,4.168,412,4.434,413,3.235]],["title/controllers/ModuleManagementController.html",[112,1.616,414,2.735]],["body/controllers/ModuleManagementController.html",[0,0.187,3,0.114,4,0.099,5,0.099,9,0.204,12,0.345,13,0.016,15,1.798,19,0.435,21,0.227,22,0.752,29,0.495,33,0.114,41,0.851,43,0.009,44,0.009,49,1.007,50,1.839,51,1.592,52,2.956,56,0.584,60,0.744,61,0.297,62,0.744,66,1.273,67,1.538,70,1.138,72,2.956,73,1.995,93,0.664,96,1.138,97,1.001,98,1.005,101,1.662,112,2.243,114,1.308,117,2.213,118,1.91,119,3.181,121,2.779,122,3.375,125,4.098,128,1.603,129,2.011,130,1.592,131,1.91,132,3.521,135,3.336,136,2.608,137,2.352,140,3.375,142,2.457,143,1.903,144,3.521,145,2.048,146,3.796,147,3.796,149,1.91,152,1.689,160,1.371,167,1.798,170,2.213,172,2.42,174,1.455,280,1.91,281,2.463,283,3.22,285,3.857,289,2.697,295,2.42,336,4.277,364,3.22,414,3.22,415,3.857,416,5.346,417,4.537,418,4.537,419,4.537,420,3.118,421,3.118,422,5.055,423,3.118,424,3.118,425,4.537,426,3.276,427,3.118,428,3.118,429,3.118,430,3.118,431,3.118]],["title/modules/ModuleManagementModule.html",[174,0.786,432,2.735]],["body/modules/ModuleManagementModule.html",[0,0.205,3,0.125,4,0.109,5,0.109,13,0.016,21,0.28,22,0.825,24,1.702,25,0.76,26,0.973,29,0.317,31,2.656,33,0.125,43,0.01,44,0.01,61,0.318,93,0.728,114,2.571,119,3.052,128,0.934,149,2.096,152,1.854,157,2.096,158,2.133,160,1.505,164,1.505,174,1.566,176,1.371,177,2.478,178,1.854,179,1.854,180,1.663,181,3.315,182,1.753,186,3.64,187,3.144,189,2.627,190,1.854,191,1.854,192,2.656,193,2.485,194,0.86,195,2.788,197,2.096,198,2.429,199,1.854,200,3.443,204,2.656,205,1.753,208,1.663,209,2.429,210,2.429,211,1.58,212,2.429,213,2.429,233,1.505,271,1.663,280,2.971,281,1.435,292,3.862,295,2.656,296,2.971,297,2.961,299,1.753,350,2.961,364,3.443,393,3.185,399,2.971,404,2.248,414,3.999,415,2.248,426,4.117,432,5.278,433,2.961,434,2.961,435,3.423,436,3.443,437,3.765,438,3.765,439,3.423,440,3.443,441,2.429,442,1.753,443,2.429,444,2.429,445,2.429,446,2.961]],["title/injectables/ModuleManagementRepository.html",[45,0.892,292,2.215]],["body/injectables/ModuleManagementRepository.html",[0,0.369,3,0.111,4,0.097,5,0.097,7,1.649,9,0.199,12,0.49,13,0.016,19,0.525,21,0.225,24,1.56,25,0.673,26,1.497,29,0.617,33,0.111,37,4.314,41,0.828,43,0.009,44,0.012,45,1.029,46,3.32,47,1.215,49,0.987,50,1.856,51,2.034,52,2.549,53,3.133,54,2.724,55,3.781,56,0.568,58,3.133,60,1.057,61,0.423,62,1.057,63,1.858,64,2.724,66,1.259,67,1.616,68,1.334,69,1.858,70,1.234,72,2.836,73,1.334,74,1.858,75,3.951,77,1.858,78,2.852,79,3.551,80,3.332,81,1.064,82,2.724,83,1.858,85,1.858,86,1.858,87,3.225,89,1.401,90,1.858,91,1.858,93,0.646,97,0.568,142,2.409,143,1.865,155,1.865,156,1.165,159,2.054,174,0.907,194,0.762,217,2.153,218,1.992,220,3.457,221,2.261,222,1.992,223,1.992,224,1.992,225,1.992,226,1.992,227,1.215,229,1.992,233,2.549,271,2.16,281,1.865,292,3.332,299,3.162,415,2.92,441,2.153,447,2.724,448,4.447,449,3.156,450,4.447,451,3.034,452,2.724,453,3.034]],["title/injectables/ModuleManagementService.html",[45,0.892,426,2.36]],["body/injectables/ModuleManagementService.html",[0,0.351,3,0.134,4,0.117,5,0.117,9,0.241,12,0.388,13,0.016,19,0.477,21,0.23,25,0.816,29,0.472,33,0.134,43,0.01,44,0.01,45,1.18,47,1.473,49,1.132,50,1.801,52,2.243,56,0.955,60,0.836,61,0.334,62,0.836,66,1.29,67,1.657,70,1.246,72,3.024,73,2.243,81,1.789,93,0.782,96,0.782,97,0.955,101,1.869,119,3.426,121,3.124,122,3.635,131,3.124,134,3.62,135,3.522,136,2.931,137,2.533,139,2.478,140,3.635,142,2.763,143,2.139,157,3.124,167,1.236,174,1.356,205,1.883,227,1.473,230,2.609,232,3.181,233,2.243,234,3.181,235,3.181,281,2.653,292,4.053,299,1.883,333,1.786,368,4.412,415,4.154,426,3.124,437,3.959,441,2.609,452,2.252,454,5.101,455,3.677,456,4.412,457,3.181,458,3.677,459,3.677]],["title/classes/PotentialClass.html",[0,0.231,201,1.872]],["body/classes/PotentialClass.html",[0,0.276,1,2.654,2,0.756,3,0.168,4,0.147,5,0.147,7,1.688,9,0.302,10,1.62,11,2.611,12,0.499,13,0.016,14,2.029,15,2.207,16,2.029,17,2.029,18,1.935,19,0.534,21,0.239,23,3.773,24,2.083,25,1.024,33,0.216,43,0.012,44,0.012,61,0.43,70,1.263,98,1.487,115,2.513,194,1.16,201,2.884,202,3.274,211,3.2,221,1.69,308,1.16,322,3.216,323,3.363,342,3.189,385,2.13,460,3.581,461,3.637,462,4.614,463,4.614,464,2.826,465,3.991,466,3.991]],["title/classes/PotentialClassRegisteredEvent.html",[0,0.231,206,2.36]],["body/classes/PotentialClassRegisteredEvent.html",[0,0.419,2,0.777,3,0.173,4,0.151,5,0.151,7,1.719,8,4.368,9,0.311,10,1.649,12,0.459,13,0.016,19,0.492,21,0.173,22,1.144,29,0.439,33,0.173,43,0.012,44,0.012,56,0.888,60,0.777,61,0.311,62,0.777,96,1.415,97,0.888,115,2.547,120,5.133,128,1.815,129,2.143,143,2.789,155,2.535,156,1.583,206,4.29,243,3.096,244,4.104,250,2.726,349,5.162,467,5.162,468,3.115,469,3.682,470,6.651,471,4.104,472,3.367]],["title/classes/PotentialClassRegisteredEventHandler.html",[0,0.231,473,2.991]],["body/classes/PotentialClassRegisteredEventHandler.html",[0,0.311,2,0.619,3,0.138,4,0.12,5,0.12,9,0.248,12,0.395,13,0.016,19,0.423,21,0.253,22,0.91,25,0.838,26,1.689,29,0.481,33,0.138,41,1.03,43,0.01,44,0.01,46,1.834,49,1.153,50,1.555,56,0.973,58,3.368,60,0.851,61,0.341,62,0.851,66,0.77,67,1.361,96,1.106,97,1.112,98,1.217,104,1.743,115,2.274,155,2.179,156,1.675,159,2.399,164,2.284,167,1.746,194,0.949,201,3.45,203,2.68,206,4.432,208,1.834,216,3.266,227,1.512,236,3.266,241,2.179,262,4.494,263,2.661,305,1.217,336,3.412,338,2.986,442,1.934,467,4.61,473,4.965,474,2.479,475,4.215,476,3.687,477,3.776,478,3.609,479,3.266,480,5.195,481,4.494,482,3.687,483,3.776,484,2.68,485,3.776,486,2.68,487,3.687,488,2.17,489,3.266,490,3.266,491,3.266]],["title/classes/PotentialModule.html",[0,0.231,299,1.974]],["body/classes/PotentialModule.html",[0,0.417,1,2.468,2,0.63,3,0.14,4,0.123,5,0.123,7,1.496,9,0.252,10,1.435,11,2.313,12,0.49,13,0.016,14,1.691,15,2.167,16,1.691,17,1.691,18,1.612,19,0.525,21,0.235,23,3.705,24,2.368,25,0.853,26,1.705,29,0.356,33,0.192,43,0.011,44,0.011,61,0.443,70,1.119,98,1.239,115,1.472,128,1.902,174,1.422,194,0.966,201,2.913,211,3.219,221,1.409,281,2.704,299,3.458,308,0.966,322,3.248,385,1.775,390,2.549,440,2.729,447,3.673,461,3.673,464,2.355,492,2.984,493,3.845,494,4.575,495,3.845,496,3.845,497,3.326,498,3.326,499,3.326]],["title/classes/PotentialModuleRegisteredEvent.html",[0,0.231,296,2.36]],["body/classes/PotentialModuleRegisteredEvent.html",[0,0.423,2,0.721,3,0.16,4,0.14,5,0.14,7,1.935,8,4.638,9,0.288,10,1.57,12,0.437,13,0.016,19,0.469,21,0.16,22,1.06,29,0.533,33,0.16,41,1.57,43,0.012,44,0.012,56,0.823,60,0.721,61,0.288,62,0.721,96,1.365,97,0.823,128,1.927,129,2.067,130,2.25,156,1.507,164,2.53,174,1.441,243,2.948,246,3.286,247,4.553,248,2.821,250,2.527,281,2.69,283,5.013,284,3.804,287,4.978,296,4.168,468,2.887,469,3.413,471,3.804,472,3.121,500,4.979,501,4.466,502,4.978]],["title/classes/PotentialModuleRegisteredEventHandler.html",[0,0.231,503,2.991]],["body/classes/PotentialModuleRegisteredEventHandler.html",[0,0.236,2,0.645,3,0.143,4,0.125,5,0.125,9,0.258,12,0.406,13,0.016,19,0.435,21,0.256,22,0.949,25,0.873,26,1.119,29,0.495,33,0.143,41,1.074,43,0.011,44,0.011,46,1.911,49,1.186,50,1.589,56,1,58,3.162,60,0.876,61,0.35,62,0.876,66,1.09,67,1.705,96,1.137,97,0.737,98,1.268,104,1.817,137,2.14,142,2.894,156,1.399,164,3.087,167,1.796,174,0.803,194,0.989,208,1.911,227,1.576,241,2.241,269,2.894,281,2.545,296,4.587,299,3.334,336,3.509,338,3.071,441,2.792,446,3.404,457,3.404,474,2.584,475,4.306,476,3.792,478,3.488,482,3.792,484,2.792,487,2.792,489,3.404,490,3.404,491,3.404,500,4.709,503,4.147,504,3.935,505,3.935,506,3.935,507,5.344,508,3.935]],["title/classes/PotentialStudent.html",[0,0.231,342,1.872]],["body/classes/PotentialStudent.html",[0,0.389,1,2.582,2,0.567,3,0.126,4,0.11,5,0.11,7,1.39,9,0.227,10,1.333,11,2.149,12,0.494,13,0.016,14,1.52,15,2.183,16,1.52,17,1.52,18,1.45,19,0.529,21,0.178,23,3.733,24,2.16,25,0.767,26,1.39,29,0.641,33,0.178,34,3.335,43,0.01,44,0.01,61,0.404,68,1.52,70,1.507,98,1.114,128,1.68,194,0.869,211,3.269,221,1.267,305,1.114,308,1.633,322,4.036,323,3.154,342,2.992,385,1.597,461,3.772,464,2.993,488,3.539,501,4.779,509,2.684,510,4.227,511,5.327,512,4.902,513,3.458,514,6.124,515,5.494,516,3.458,517,3.458,518,3.458,519,2.991,520,2.454,521,2.454,522,2.991]],["title/classes/PotentialStudentRegisteredEvent.html",[0,0.231,330,2.531]],["body/classes/PotentialStudentRegisteredEvent.html",[0,0.406,2,0.809,3,0.18,4,0.157,5,0.157,7,1.763,8,4.667,9,0.324,10,1.692,12,0.471,13,0.016,19,0.505,21,0.18,22,1.191,33,0.18,43,0.012,44,0.012,56,1.161,60,0.809,61,0.324,62,0.809,96,1.442,241,2.6,243,3.176,250,2.838,308,1.703,311,3.849,312,4.272,317,3.025,318,3.833,330,4.667,389,3.505,468,3.243,469,3.833,472,3.505,523,5.259,524,7.107,525,4.939]],["title/classes/PotentialStudentRegisteredEventHandler.html",[0,0.231,526,2.735]],["body/classes/PotentialStudentRegisteredEventHandler.html",[0,0.215,2,0.59,3,0.131,4,0.115,5,0.115,9,0.236,12,0.382,13,0.016,19,0.409,21,0.249,22,0.868,25,0.799,26,1.023,29,0.58,33,0.131,43,0.01,44,0.01,49,1.115,50,1.516,51,1.262,53,1.748,56,0.941,58,3.044,60,0.823,61,0.329,62,0.823,66,0.734,67,1.316,96,1.069,97,0.674,98,1.865,104,2.32,164,3.194,167,1.689,194,0.904,208,1.748,227,1.441,241,2.628,248,2.546,268,2.204,269,3.136,305,1.159,308,1.455,311,2.722,319,2.888,330,4.696,335,1.843,337,2.793,338,3.789,339,3.113,340,3.113,341,3.113,342,1.748,390,2.459,442,1.843,474,2.363,475,4.679,476,4.109,478,3.405,482,3.566,484,2.554,486,2.554,487,3.566,488,2.068,515,2.793,523,4.494,526,3.566,527,3.113,528,3.598,529,3.598,530,2.068,531,3.598,532,3.113,533,3.598,534,3.598,535,3.113,536,2.793,537,2.363,538,3.598,539,3.598,540,3.598,541,3.598,542,3.598,543,3.113]],["title/classes/PotentialTest.html",[0,0.231,376,1.974]],["body/classes/PotentialTest.html",[0,0.19,1,2.267,2,0.52,3,0.116,4,0.101,5,0.101,7,1.306,9,0.208,10,1.253,11,2.02,12,0.551,13,0.016,14,1.394,15,2.271,16,1.394,17,2.374,18,1.33,19,0.55,21,0.167,23,3.883,24,2.204,25,0.704,26,1.536,29,0.293,33,0.167,43,0.009,44,0.009,61,0.412,70,1.524,81,2.077,98,1.022,128,2.001,174,1.282,194,0.797,211,3.386,221,1.162,322,3.548,353,2.706,356,3.562,376,3.218,385,1.464,447,3.308,461,4.012,464,1.942,494,4.201,520,4.201,544,2.461,545,5.435,546,4.876,547,5.435,548,5.845,549,3.171,550,3.973,551,3.171,552,3.565,553,3.171,554,3.973,555,3.973,556,3.171,557,3.171,558,3.171,559,2.461,560,2.251,561,2.743]],["title/classes/PotentialTestRegisteredEvent.html",[0,0.231,370,2.531]],["body/classes/PotentialTestRegisteredEvent.html",[0,0.388,2,0.738,3,0.164,4,0.144,5,0.144,7,1.662,8,4.261,9,0.295,10,1.595,12,0.444,13,0.016,19,0.476,21,0.164,22,1.086,29,0.541,33,0.164,43,0.012,44,0.012,56,0.843,60,0.738,61,0.295,62,0.738,89,2.996,96,1.381,97,0.843,127,3.58,128,1.942,129,2.091,156,1.531,164,2.57,243,2.994,246,3.324,248,2.853,250,2.588,349,5.036,353,2.599,356,3.457,357,3.855,358,3.895,370,4.51,468,2.957,472,3.196,502,5.056,562,5.036,563,5.845,564,4.503,565,4.503]],["title/classes/PotentialTestRegisteredEventHandler.html",[0,0.231,566,2.735]],["body/classes/PotentialTestRegisteredEventHandler.html",[0,0.233,2,0.639,3,0.142,4,0.124,5,0.124,9,0.256,12,0.404,13,0.016,19,0.432,21,0.255,22,0.94,25,0.865,26,1.109,33,0.142,41,1.064,43,0.011,44,0.011,49,1.178,50,1.581,56,0.73,58,3.296,60,0.87,61,0.348,62,0.87,66,0.795,67,1.391,96,1.38,98,1.946,104,2.452,164,2.655,167,2.179,194,0.98,208,1.894,227,1.561,241,2.227,268,2.388,269,2.111,305,1.256,338,3.052,353,2.419,356,2.58,357,2.111,370,4.258,376,2.72,390,2.275,442,1.997,474,2.56,475,4.286,476,3.768,478,3.591,479,3.372,482,3.768,484,2.767,486,2.767,487,2.767,527,3.372,530,2.24,535,3.372,536,3.025,537,2.56,543,3.372,546,3.025,552,3.025,562,4.687,566,3.768,567,3.898,568,3.898,569,3.372,570,3.372,571,3.372,572,3.898,573,3.898,574,3.898,575,3.898,576,3.898,577,3.898,578,3.372,579,3.898,580,3.898,581,3.898]],["title/injectables/RabbitmqService.html",[45,0.892,478,1.872]],["body/injectables/RabbitmqService.html",[0,0.303,3,0.133,4,0.116,5,0.116,9,0.238,12,0.385,13,0.016,19,0.412,21,0.212,29,0.613,33,0.133,43,0.01,44,0.01,45,1.171,47,1.457,49,1.123,56,1.09,60,0.83,61,0.413,62,0.83,66,1.284,67,1.841,70,1.526,93,0.774,96,0.774,97,1.09,101,1.332,137,2.522,155,1.525,156,1.525,157,3.567,167,1.222,305,1.172,333,2.459,335,1.863,338,4.428,412,2.581,442,3.51,456,4.379,478,3.059,486,3.593,582,3.146,583,5.823,584,3.637,585,7.17,586,3.637,587,4.863,588,6.619,589,5.063,590,3.637,591,5.063,592,4.519,593,5.456,594,6.853,595,2.388,596,3.637,597,3.146,598,3.146,599,2.388,600,3.637,601,3.637,602,3.637]],["title/modules/RmqModule.html",[174,0.786,187,1.872]],["body/modules/RmqModule.html",[0,0.181,3,0.11,4,0.097,5,0.097,12,0.23,13,0.016,19,0.247,21,0.225,29,0.597,33,0.11,34,1.64,43,0.009,44,0.009,49,0.672,60,0.496,61,0.404,62,0.496,66,1.258,70,0.644,81,1.558,93,0.644,97,0.831,101,1.11,130,1.558,139,1.471,156,0.793,174,1.54,176,1.213,177,2.313,178,1.64,179,1.64,180,1.471,181,2.694,182,2.967,187,3.386,189,2.406,190,1.64,191,1.64,193,1.551,199,1.64,248,2.313,263,1.551,305,0.976,319,3.023,333,1.471,335,2.694,374,3.023,392,5.41,393,3.454,397,2.351,399,1.855,400,2.351,402,3.447,403,2.351,404,4.486,405,2.351,406,3.447,407,2.917,408,2.351,412,3.732,413,2.351,438,3.447,442,3.499,444,3.732,478,3.53,587,4.111,592,2.351,593,3.447,595,1.989,599,2.917,603,2.62,604,2.62,605,2.62,606,2.351,607,3.842,608,3.029,609,4.575,610,3.029,611,5.011,612,5.011,613,5.011,614,4.549,615,3.842,616,2.62,617,2.62,618,5.335,619,2.351,620,2.62,621,2.62,622,2.62,623,2.62,624,2.62,625,2.62,626,2.62,627,2.62]],["title/interfaces/RmqModuleOptions.html",[319,2.215,609,2.735]],["body/interfaces/RmqModuleOptions.html",[0,0.201,3,0.122,4,0.107,5,0.107,9,0.22,10,1.305,12,0.255,13,0.016,21,0.221,29,0.618,33,0.122,34,1.817,43,0.01,44,0.01,61,0.45,66,1.137,70,1.186,81,1.678,93,0.714,97,0.895,101,1.229,130,1.678,139,1.63,156,0.878,174,1.524,177,1.475,181,1.718,182,2.45,187,2.707,193,1.718,199,1.817,248,2.45,305,1.081,319,3.203,333,1.63,335,2.854,374,2.748,392,5.548,393,3.659,397,2.603,399,2.055,400,2.603,402,3.711,403,2.603,404,4.384,405,2.603,406,3.711,407,3.14,408,2.603,412,3.955,413,2.603,438,2.603,442,3.598,444,3.394,478,2.707,587,4.311,592,2.603,593,3.711,595,2.203,599,3.14,606,2.603,607,2.902,609,4.558,611,4.137,612,4.137,613,4.82,614,4.82,615,4.137,616,2.902,617,2.902,618,5.555,619,2.603,620,2.902,621,2.902,622,2.902,623,2.902,624,2.902,625,2.902,626,2.902,627,2.902,628,3.355]],["title/controllers/StudentManagementController.html",[112,1.616,629,2.735]],["body/controllers/StudentManagementController.html",[0,0.296,2,0.577,3,0.128,4,0.112,5,0.112,9,0.231,12,0.268,13,0.016,15,1.184,19,0.287,21,0.247,22,0.85,29,0.575,33,0.128,41,1.351,43,0.01,44,0.01,49,1.099,50,1.499,51,1.236,56,0.66,60,0.577,61,0.231,62,0.577,66,1.01,67,1.713,68,2.177,93,0.75,96,1.218,97,0.66,98,1.595,101,1.814,112,2.076,114,1.477,117,2.5,118,2.158,119,3.363,125,4.296,126,3.047,127,3.032,128,1.694,129,2.292,130,1.737,137,1.983,143,2.401,145,2.313,146,4.062,147,4.062,149,2.158,152,1.908,158,1.549,159,1.627,160,2.517,161,3.047,167,1.924,170,2.5,176,1.411,254,2.025,263,1.805,305,1.844,307,3.251,308,1.244,309,2.313,311,3.543,315,2.158,316,3.047,323,3.886,329,3.047,335,1.805,336,3.251,416,3.842,422,3.842,449,4.062,488,2.025,629,4.062,630,3.251,631,5.724,632,3.523,633,4.951,634,4.951,635,3.506,636,3.523,637,2.734,638,2.734,639,3.523,640,3.523]],["title/modules/StudentManagementModule.html",[174,0.786,641,2.735]],["body/modules/StudentManagementModule.html",[0,0.163,2,0.447,3,0.099,4,0.087,5,0.131,13,0.016,21,0.267,22,0.657,24,1.44,25,0.605,26,1.405,29,0.613,31,3.186,33,0.099,43,0.008,44,0.008,61,0.361,80,1.566,93,0.58,114,2.601,135,2.103,142,1.476,143,2.072,149,1.669,152,1.476,158,1.805,160,1.198,174,1.559,176,1.644,177,2.172,178,1.476,179,1.476,180,1.324,181,3.022,182,1.396,186,3.486,187,3.012,189,2.224,190,1.476,191,1.476,192,2.115,193,3.022,194,0.685,195,2.839,196,1.934,197,2.515,198,2.914,199,1.476,200,3.506,204,2.115,205,1.396,209,1.934,210,1.934,211,1.258,212,1.934,213,2.914,263,2.531,271,1.995,305,0.878,308,0.685,309,1.789,318,2.115,323,2.817,324,2.914,326,3.564,331,2.357,342,1.324,364,1.934,390,1.733,393,2.696,394,2.914,399,3.026,404,1.789,436,1.934,442,1.396,443,1.934,445,1.934,449,1.934,521,2.914,526,2.914,530,1.566,537,1.789,587,1.934,599,1.789,619,2.115,629,3.506,630,1.789,635,3.798,641,5.196,642,2.357,643,2.357,644,2.357,645,3.942,646,3.552,647,2.515,648,4.274,649,2.115,650,2.357,651,2.725,652,2.36,653,2.725,654,4.106,655,2.725,656,4.106,657,2.725,658,2.725,659,2.725,660,2.725,661,2.115,662,2.725,663,2.725,664,2.725,665,3.552,666,2.725,667,2.725,668,2.725,669,2.725,670,2.725,671,2.357,672,2.725,673,2.725,674,2.725]],["title/injectables/StudentManagementRepository.html",[45,0.892,326,2.215]],["body/injectables/StudentManagementRepository.html",[0,0.404,3,0.105,4,0.092,5,0.092,7,1.611,9,0.19,12,0.482,13,0.016,19,0.516,21,0.221,24,1.506,25,0.642,26,1.456,29,0.637,33,0.105,37,4.282,41,0.79,43,0.009,44,0.011,45,0.993,46,3.534,47,1.159,49,1.257,50,1.836,51,1.988,52,2.491,53,3.08,54,2.63,55,3.707,56,1.133,58,3.534,60,1.039,61,0.416,62,1.039,63,1.772,64,2.63,66,1.235,67,1.585,68,1.272,69,1.772,70,1.206,72,2.788,73,1.272,74,1.772,75,3.884,77,1.772,78,2.773,79,3.47,80,3.256,81,1.015,82,2.63,83,1.772,85,1.772,86,1.772,87,3.137,89,1.336,90,1.772,91,1.772,93,0.616,97,0.542,128,0.79,155,1.213,156,0.758,158,1.272,194,0.727,217,2.053,218,1.9,220,3.721,221,2.217,222,1.9,223,1.9,224,1.9,225,1.9,226,1.9,227,2.051,229,1.9,233,1.272,305,1.384,308,1.079,326,3.256,333,2.086,342,3.189,452,2.63,571,2.503,598,3.715,630,2.82,647,2.63,649,2.246,675,2.893,676,2.63,677,3.715,678,2.893,679,2.246,680,2.893]],["title/injectables/StudentManagementService.html",[45,0.892,635,2.36]],["body/injectables/StudentManagementService.html",[0,0.358,3,0.139,4,0.122,5,0.122,9,0.251,12,0.291,13,0.016,19,0.427,21,0.234,25,0.849,29,0.624,33,0.139,43,0.011,44,0.011,45,1.213,47,1.533,49,1.164,50,1.567,53,2.547,56,1.12,60,0.627,61,0.251,62,0.627,66,1.07,67,1.765,78,3.485,81,1.84,93,0.814,96,0.814,97,0.716,101,1.402,119,2.84,122,3.874,135,3.566,137,2.1,139,1.859,140,3.014,143,2.199,155,1.605,156,1.002,157,2.344,158,1.683,159,2.421,167,1.286,205,1.96,227,2.396,230,2.716,233,2.306,305,1.69,308,1.503,323,3.296,326,4.414,333,2.547,335,3.064,342,1.859,630,3.928,635,3.941,649,2.97,676,3.212,681,4.536,682,4.536,683,3.827,684,3.827,685,3.827,686,4.536,687,3.827,688,3.827]],["title/controllers/StudyProgramController.html",[112,1.616,689,2.735]],["body/controllers/StudyProgramController.html",[0,0.311,3,0.189,4,0.166,5,0.166,9,0.341,13,0.016,15,1.747,19,0.423,21,0.233,33,0.189,43,0.013,44,0.013,49,1.42,66,1.06,70,1.362,93,1.106,96,1.106,101,1.904,112,2.18,114,2.18,118,3.184,488,3.678,689,4.542,690,4.203,691,4.542,692,4.034,693,4.967,694,6.26,695,5.198,696,4.247,697,3.689,698,5.198,699,4.496,700,5.198]],["title/modules/StudyProgramModule.html",[174,0.786,701,2.735]],["body/modules/StudyProgramModule.html",[0,0.305,3,0.185,4,0.162,5,0.162,13,0.016,21,0.25,33,0.185,43,0.013,44,0.013,93,1.083,114,2.649,174,1.401,176,2.038,177,2.237,178,2.756,179,2.756,180,2.472,181,3.518,182,2.606,189,3.421,190,2.756,191,2.756,193,2.606,488,3.63,689,4.874,690,3.341,691,3.611,696,4.61,697,3.611,701,5.342,702,4.401,703,4.401,704,4.401,705,4.401]],["title/injectables/StudyProgramService.html",[45,0.892,696,2.36]],["body/injectables/StudyProgramService.html",[0,0.327,3,0.199,4,0.174,5,0.174,9,0.358,13,0.016,19,0.445,21,0.199,33,0.199,43,0.013,44,0.013,45,1.527,47,2.19,49,1.465,66,1.115,70,1.405,93,1.164,101,2.003,536,4.244,690,4.334,691,4.684,694,6.369,696,4.043,706,4.244,707,5.468,708,5.468]],["title/classes/Teacher.html",[0,0.231,390,1.352]],["body/classes/Teacher.html",[0,0.423,1,2.774,2,0.721,3,0.16,4,0.14,5,0.14,7,1.637,9,0.288,10,1.57,11,2.53,12,0.437,13,0.016,14,1.933,15,1.934,16,1.933,17,1.933,18,1.844,19,0.469,21,0.21,23,3.307,24,2.387,25,0.976,26,1.637,29,0.63,33,0.21,34,2.382,43,0.012,44,0.012,61,0.446,68,1.933,70,1.225,98,1.417,194,1.105,211,2.657,221,1.611,305,1.417,308,1.446,322,3.474,385,2.03,390,2.478,461,2.693,464,3.525,501,3.413,510,4.978,514,4.978,515,4.466,652,2.527,709,3.413,710,4.397,711,3.413]],["title/classes/Teacher-1.html",[0,0.192,390,1.127,712,2.78]],["body/classes/Teacher-1.html",[0,0.274,1,2.646,2,0.75,3,0.167,4,0.146,5,0.146,7,1.68,9,0.3,10,1.612,11,2.597,12,0.449,13,0.016,14,2.012,15,1.985,16,2.012,17,2.012,18,1.919,19,0.481,21,0.215,23,3.394,24,2.509,25,1.016,26,1.86,29,0.424,33,0.215,43,0.012,44,0.012,61,0.469,70,1.257,98,1.474,194,1.15,211,2.727,221,1.676,322,2.479,353,2.365,385,2.113,390,2.614,447,4.006,461,2.803,464,2.803,559,3.552,652,2.63,711,3.552,713,3.552,714,4.576]],["title/controllers/TeacherController.html",[112,1.616,715,2.735]],["body/controllers/TeacherController.html",[0,0.264,2,0.493,3,0.11,4,0.096,5,0.096,9,0.197,12,0.336,13,0.016,15,1.76,19,0.426,21,0.234,29,0.615,33,0.11,41,1.206,43,0.009,44,0.009,49,0.98,50,1.684,51,1.837,53,1.461,60,0.724,61,0.29,62,0.724,66,1.255,68,1.322,81,1.55,89,2.04,93,0.64,96,0.64,97,0.827,101,1.919,104,1.388,112,1.853,114,1.261,118,1.842,125,3.791,127,2.706,129,2.279,130,1.55,136,1.728,139,2.146,142,2.837,143,1.261,144,3.429,145,1.975,176,1.204,243,2.683,246,2.263,248,2.704,254,2.539,263,1.54,269,2.837,305,1.424,308,1.451,315,1.842,337,2.334,338,4.122,380,4.071,390,2.516,416,2.334,422,2.334,449,3.136,481,3.822,595,1.975,637,3.429,665,2.601,679,3.429,699,2.601,715,3.136,716,2.601,717,5.02,718,4.418,719,4.418,720,4.994,721,2.601,722,3.007,723,5.238,724,5.773,725,3.007,726,4.418,727,3.007,728,4.418,729,6.15,730,5.238,731,3.007,732,4.071,733,4.418,734,2.601,735,2.334,736,3.007,737,3.007,738,3.007,739,3.007,740,3.007,741,3.007,742,3.007,743,3.007,744,3.007,745,3.007,746,3.007,747,3.007,748,3.007,749,3.007]],["title/modules/TeacherModule.html",[174,0.786,645,2.36]],["body/modules/TeacherModule.html",[0,0.223,2,0.609,3,0.135,4,0.119,5,0.119,13,0.016,21,0.27,24,1.803,25,0.825,26,1.057,29,0.588,33,0.135,43,0.01,44,0.01,61,0.386,93,0.791,114,2.798,158,1.635,174,1.361,176,2.672,177,1.635,178,2.013,179,2.013,180,1.806,181,3.534,182,1.904,187,3.352,189,2.784,190,2.013,191,2.013,193,3.256,194,0.934,195,2.954,196,2.638,197,3.148,263,1.904,308,0.934,322,3.191,390,2.34,394,2.638,437,3.989,442,1.904,443,2.638,444,3.648,445,2.638,530,2.136,537,2.441,599,2.441,645,4.583,647,2.277,652,2.954,715,4.181,717,2.638,732,4.226,734,3.216,750,3.216,751,3.717,752,3.216,753,4.226,754,3.717,755,5.14,756,3.717,757,3.216,758,3.717,759,3.717,760,3.717,761,3.216,762,3.717,763,4.446]],["title/injectables/TeacherRepository.html",[45,0.892,753,2.36]],["body/injectables/TeacherRepository.html",[0,0.395,3,0.107,4,0.093,5,0.093,7,1.621,9,0.192,12,0.484,13,0.016,19,0.519,21,0.222,24,1.999,25,0.65,26,1.73,29,0.64,33,0.107,37,4.29,41,0.799,43,0.009,44,0.011,45,1.002,46,3.506,47,1.173,49,0.962,50,1.841,51,1.999,52,2.506,53,3.094,54,2.654,55,3.726,56,1.067,58,3.464,60,1.044,61,0.418,62,1.044,63,1.794,64,2.654,66,1.241,67,1.593,68,1.288,69,1.794,70,1.213,72,2.801,73,1.288,74,1.794,75,3.901,77,1.794,78,2.793,79,3.491,80,3.275,81,1.027,82,2.654,83,1.794,85,1.794,86,1.794,87,3.159,89,1.352,90,1.794,91,1.794,93,0.623,97,0.548,129,0.944,155,1.228,156,0.767,158,1.288,159,2.001,194,0.736,218,1.923,220,3.387,221,2.229,222,1.923,223,1.923,224,1.923,225,1.923,226,1.923,227,2.065,229,1.923,233,1.288,305,1.396,308,1.089,333,2.105,390,2.234,452,2.654,530,1.683,570,2.533,647,2.654,676,2.654,677,3.748,717,3.075,753,3.491,764,2.533,765,3.748,766,2.929]],["title/injectables/TeacherService.html",[45,0.892,732,2.36]],["body/injectables/TeacherService.html",[0,0.328,3,0.119,4,0.104,5,0.104,9,0.214,12,0.356,13,0.016,19,0.446,21,0.231,25,0.723,29,0.63,33,0.119,41,0.889,43,0.009,44,0.009,45,1.083,47,1.304,49,1.039,50,1.731,51,2.227,53,2.275,56,1.026,60,0.767,61,0.307,62,0.767,66,1.223,67,1.887,68,2.059,78,3.246,81,1.643,89,2.162,93,0.693,96,0.693,97,0.877,101,1.193,104,1.504,119,2.536,127,1.995,129,1.509,137,2.4,139,1.582,143,1.964,155,1.366,156,0.853,157,1.995,158,1.432,159,2.162,167,1.095,227,2.195,233,2.059,246,2.398,248,2.059,305,1.509,308,1.506,315,1.995,333,2.275,335,3.386,380,4.348,390,2.628,530,1.872,532,2.818,676,2.868,681,4.05,682,4.05,686,5.185,717,3.323,720,5.492,721,4.05,732,3.671,735,2.528,753,4.647,757,2.818,767,2.818,768,3.257,769,3.257,770,3.257,771,4.682,772,3.257,773,3.257,774,3.257]],["title/controllers/TestProgramController.html",[112,1.616,775,2.735]],["body/controllers/TestProgramController.html",[0,0.319,3,0.113,4,0.099,5,0.099,9,0.204,12,0.344,13,0.016,15,1.794,19,0.435,21,0.227,22,0.749,29,0.494,33,0.113,41,1.456,43,0.009,44,0.009,49,1.004,50,1.837,52,1.366,56,0.582,60,0.742,61,0.297,62,0.742,66,1.327,67,1.703,68,1.99,70,1.136,72,2.952,73,2.578,81,1.587,93,0.661,96,1.136,97,0.999,98,1.001,101,1.658,112,2.238,114,1.303,118,1.903,121,2.772,122,3.37,125,3.505,128,2.078,129,2.008,130,2.057,131,1.903,132,3.512,136,2.601,137,2.605,145,2.04,146,3.788,147,3.788,152,1.683,158,1.99,160,1.366,167,1.794,170,2.205,172,2.411,174,0.923,315,1.903,352,2.04,353,2.348,356,3.66,357,3.523,361,2.688,369,2.688,637,5.048,692,2.411,693,4.55,697,2.205,775,3.211,776,3.85,777,5.048,778,3.107,779,3.107,780,3.107,781,4.525,782,3.107,783,4.525,784,3.269,785,3.107,786,3.107,787,3.107,788,3.107,789,3.107]],["title/modules/TestProgramModule.html",[174,0.786,790,2.735]],["body/modules/TestProgramModule.html",[0,0.211,2,0.579,3,0.129,4,0.113,5,0.113,13,0.016,21,0.281,22,0.851,24,1.739,25,0.783,33,0.129,43,0.01,44,0.01,61,0.376,93,0.751,114,2.403,152,1.912,174,1.169,176,2.295,177,1.552,178,1.912,179,1.912,180,1.715,181,2.935,182,1.808,186,3.677,187,3.18,189,2.685,190,1.912,191,1.912,193,2.54,194,0.887,195,2.849,196,2.505,197,3.037,198,2.505,199,1.912,200,3.519,209,2.505,210,2.505,211,1.63,212,2.505,213,2.505,263,1.808,308,0.887,353,1.414,356,2.784,362,3.519,365,3.901,371,3.054,372,2.74,374,2.029,376,1.808,390,1.238,399,2.162,443,2.505,445,2.505,530,2.029,537,2.318,560,3.519,566,3.519,645,2.162,648,3.054,650,3.054,652,2.849,671,3.054,697,2.505,704,3.054,705,3.054,763,4.957,775,4.067,776,2.318,784,4.158,790,5.418,791,3.054,792,3.53,793,3.054,794,3.53,795,3.53,796,2.74,797,3.53,798,3.53,799,3.53,800,4.958,801,3.53]],["title/injectables/TestProgramRepository.html",[45,0.892,365,2.215]],["body/injectables/TestProgramRepository.html",[0,0.423,3,0.103,4,0.09,5,0.09,7,1.591,9,0.185,12,0.478,13,0.016,19,0.511,21,0.218,25,0.626,26,1.434,29,0.602,33,0.103,37,4.264,41,0.77,43,0.008,44,0.011,45,1.294,46,3.435,47,1.13,49,1.242,50,1.824,51,1.963,52,2.46,53,3.052,54,2.581,55,3.668,56,1.047,58,3.251,60,1.029,61,0.412,62,1.029,63,1.728,64,2.581,66,1.221,67,1.568,68,1.24,69,1.728,70,1.191,72,2.762,73,1.24,74,1.728,75,3.848,77,1.728,78,2.732,79,3.427,80,3.216,81,0.989,82,2.581,83,1.728,85,1.728,86,1.728,87,3.09,89,1.302,90,1.728,91,1.728,93,0.6,97,0.528,129,1.358,130,0.989,143,1.767,159,2.329,162,3.645,194,1.268,218,1.852,220,3.674,221,2.194,222,1.852,223,1.852,224,1.852,225,1.852,226,1.852,227,1.688,229,1.852,271,2.047,305,1.358,353,1.688,365,3.61,374,2.422,376,3.428,447,3.988,452,3.09,569,2.44,578,2.44,647,2.581,676,1.728,679,2.189,761,3.645,765,2.44,776,2.767,796,2.189,802,2.44,803,3.27,804,2.821,805,4.214,806,2.821,807,2.821,808,2.821]],["title/injectables/TestProgramService.html",[45,0.892,784,2.36]],["body/injectables/TestProgramService.html",[0,0.412,3,0.123,4,0.108,5,0.108,9,0.221,12,0.365,13,0.016,19,0.455,21,0.222,25,0.749,29,0.517,33,0.123,43,0.01,44,0.01,45,1.409,47,1.352,49,1.352,50,1.752,52,2.112,56,1.14,60,0.787,61,0.315,62,0.787,66,1.243,67,1.595,70,1.19,72,2.941,73,2.112,81,1.685,93,0.718,96,0.718,97,0.899,101,1.759,121,2.942,122,3.501,128,1.311,129,1.547,131,2.942,134,3.408,135,3.12,136,2.76,137,2.439,139,2.333,140,3.501,143,2.014,156,1.258,159,2.218,167,1.134,227,1.923,233,2.112,254,2.76,264,3.408,271,2.333,305,1.547,353,2.439,356,3.477,365,4.114,372,2.619,374,2.76,376,1.729,452,2.942,647,2.942,676,2.067,693,5.46,706,2.619,776,4,777,3.727,784,4.097,796,2.619,809,4.803,810,3.375,811,3.375,812,3.375,813,4.803,814,3.375,815,3.375,816,3.375,817,3.375]],["title/classes/UpdateTeacherDto.html",[0,0.231,818,2.991]],["body/classes/UpdateTeacherDto.html",[0,0.401,2,0.917,3,0.204,4,0.178,5,0.178,7,1.591,13,0.016,21,0.244,28,4.342,33,0.204,43,0.013,44,0.013,51,1.963,308,1.406,317,3.427,380,3.427,382,4.342,389,3.971,735,4.342,818,5.557,819,4.84,820,5.595,821,4.84,822,6.693]],["title/classes/applyClassDto.html",[0,0.231,124,2.531]],["body/classes/applyClassDto.html",[0,0.438,1,2.646,2,0.75,3,0.167,4,0.146,5,0.146,7,1.68,9,0.3,10,1.612,11,2.597,12,0.497,13,0.016,14,2.012,15,1.985,16,2.012,17,2.012,18,1.919,19,0.532,21,0.238,33,0.167,43,0.012,44,0.012,61,0.469,70,1.257,115,2.504,124,3.878,128,1.612,194,1.15,221,1.676,308,1.15,323,3.664,342,3.177,383,3.005,385,2.113,386,3.878,387,3.878,388,2.803,465,3.959,638,4.584,823,3.959,824,4.576,825,5.906,826,4.576]],["title/classes/applyModuleDto.html",[0,0.231,285,2.531]],["body/classes/applyModuleDto.html",[0,0.447,1,2.718,2,0.67,3,0.149,4,0.13,5,0.13,7,1.88,9,0.268,10,1.496,11,2.411,12,0.503,13,0.016,14,1.797,15,1.843,16,1.797,17,1.797,18,1.714,19,0.538,21,0.241,29,0.378,33,0.149,43,0.011,44,0.011,61,0.452,70,1.167,115,1.565,129,1.767,174,1.503,194,1.027,201,3.006,221,1.497,246,2.809,247,3.891,248,2.411,281,2.773,285,3.6,308,1.027,383,2.684,385,1.887,386,3.6,387,3.6,388,2.504,390,2.585,494,4.692,497,3.536,498,3.536,638,4.255,827,3.536,828,4.087,829,4.087,830,4.087]],["title/coverage.html",[831,4.089]],["body/coverage.html",[0,0.453,1,0.82,5,0.068,6,1.853,12,0.163,13,0.016,36,1.853,41,0.585,43,0.007,44,0.007,45,1.576,46,1.041,48,1.853,112,2.357,113,1.52,115,2.608,116,2.786,117,3.011,124,1.407,148,1.312,151,1.312,180,2.564,188,1.231,195,2.779,201,1.041,202,1.52,206,1.312,217,3.011,230,3.011,239,3.231,240,1.853,251,1.663,252,1.853,280,1.312,281,2.857,282,1.853,285,1.407,290,1.663,291,1.853,292,1.231,296,1.312,299,1.097,307,1.407,308,1.828,309,2.238,310,1.853,311,1.16,319,1.231,324,1.52,325,1.853,326,1.231,330,1.407,342,1.041,352,1.407,353,2.796,354,2.645,355,1.853,357,1.16,362,1.52,363,1.853,365,1.231,370,1.407,376,1.097,380,1.312,381,1.853,382,2.645,390,1.195,407,4.139,414,1.52,415,2.786,426,1.312,440,1.52,460,2.645,467,2.645,468,3.176,473,1.663,474,3.176,478,1.041,492,2.645,500,2.645,503,1.663,509,2.645,521,1.52,523,2.645,526,1.52,544,2.645,560,1.52,562,2.645,566,1.52,582,1.853,606,1.663,609,1.52,629,1.52,630,2.786,635,1.312,652,1.958,689,1.52,690,2.786,691,2.418,692,2.645,696,1.312,706,2.645,709,2.645,713,2.645,715,1.52,716,1.853,732,1.312,753,1.312,764,1.853,767,1.853,775,1.52,776,2.786,784,1.312,802,1.853,818,1.663,819,1.853,823,1.853,827,1.853,831,1.663,832,1.853,833,2.142,834,4.243,835,4.243,836,2.142,837,2.142,838,6.461,839,6.461,840,2.948,841,6.461,842,7.397,843,6.711,844,2.142,845,2.142,846,4.863,847,7.397,848,6.118,849,4.183,850,2.142,851,5.278,852,1.853,853,3.408,854,3.408,855,5.278,856,4.836,857,5.278,858,1.853,859,1.853,860,2.142,861,2.142,862,2.142,863,2.142,864,2.142,865,2.142,866,3.67,867,4.836,868,1.853,869,1.853,870,1.853,871,3.408,872,3.408,873,2.142,874,2.142,875,2.142,876,2.142]],["title/classes/createPotentialStudentDto.html",[0,0.231,311,2.087]],["body/classes/createPotentialStudentDto.html",[0,0.367,1,2.625,2,0.659,3,0.146,4,0.128,5,0.128,7,1.542,9,0.263,10,1.479,11,2.384,12,0.521,13,0.016,14,1.767,15,2.304,16,1.767,17,1.767,18,1.686,19,0.558,21,0.198,33,0.146,34,3.557,43,0.011,44,0.011,61,0.449,70,1.562,128,1.792,194,1.01,221,1.472,308,1.723,311,3.323,317,2.462,321,5.096,323,3.364,383,3.56,385,1.856,386,4.028,387,4.028,388,2.462,389,2.852,488,3.94,511,5.931,512,5.68,519,3.477,520,2.852,858,5.931,859,3.477,877,6.134,878,4.019,879,4.019,880,6.134,881,4.019,882,4.019,883,4.019,884,4.019]],["title/classes/createPotentialTestDto.html",[0,0.231,357,2.087]],["body/classes/createPotentialTestDto.html",[0,0.358,1,2.289,2,0.531,3,0.118,4,0.103,5,0.103,7,1.326,9,0.212,10,1.272,11,2.05,12,0.517,13,0.016,14,1.424,15,2.285,16,1.424,17,1.424,18,1.358,19,0.554,21,0.17,29,0.3,33,0.118,43,0.009,44,0.009,61,0.415,70,1.481,81,2.097,128,2.043,130,1.636,174,1.292,194,0.814,211,3.047,221,1.186,246,2.389,353,2.723,356,3.636,357,2.526,383,3.062,385,1.495,386,4.465,387,4.16,388,1.984,494,4.242,520,4.242,545,5.48,546,4.917,547,5.48,548,5.882,550,4.034,552,3.619,554,4.034,555,4.034,869,5.882,870,2.801,885,4.663,886,4.663,887,3.238,888,4.663,889,3.238,890,3.238,891,3.238,892,3.238,893,3.238,894,5.464,895,5.464,896,5.978]],["title/dependencies.html",[177,2.039,803,2.494]],["body/dependencies.html",[0,0.314,13,0.016,22,1.265,25,1.164,26,1.492,28,4.072,43,0.013,44,0.013,93,1.116,177,2.307,199,2.842,388,3.214,394,3.723,595,3.445,597,4.538,821,4.538,897,7.26,898,5.247,899,5.247,900,5.247,901,5.247,902,5.247,903,5.247,904,5.247,905,5.247,906,5.247,907,5.247,908,5.247,909,5.247,910,5.247,911,5.247,912,5.247,913,5.247,914,5.247,915,5.247,916,5.247]],["title/miscellaneous/functions.html",[917,2.281,918,4.011]],["body/miscellaneous/functions.html",[9,0.294,13,0.015,29,0.635,43,0.012,44,0.012,60,1.124,61,0.45,62,1.124,115,1.719,135,3.853,156,1.797,180,3.851,281,1.883,308,1.129,353,1.799,407,3.831,436,4.141,646,5.606,690,2.949,832,5.606,846,5.606,849,6.507,866,5.047,917,3.187,918,3.885,919,7.604,920,5.047,921,6.861,922,6.481,923,5.935,924,4.491,925,4.491,926,5.834]],["title/index.html",[9,0.211,927,3.214,928,3.214]],["body/index.html",[4,0.149,13,0.016,29,0.432,32,3.621,43,0.012,44,0.012,140,2.681,233,2.051,356,2.905,436,4.683,777,4.641,831,3.621,920,4.035,923,4.035,929,4.665,930,4.665,931,5.98,932,4.665,933,4.665,934,4.665,935,4.665,936,4.665,937,4.665,938,4.665,939,4.665,940,7.486,941,4.665,942,4.665,943,7.362,944,4.665,945,5.98,946,4.665,947,4.665,948,4.665,949,4.665,950,4.665,951,4.665,952,4.665,953,5.98,954,5.98,955,4.665,956,4.665,957,4.665,958,4.665,959,4.665,960,4.665,961,4.665,962,4.665,963,4.665,964,4.665,965,4.665,966,4.665,967,4.665,968,4.665,969,4.665,970,4.035,971,4.665,972,4.665,973,4.665,974,4.665,975,4.665,976,4.665,977,4.035]],["title/modules.html",[176,2.11]],["body/modules.html",[13,0.013,32,6.008,43,0.013,44,0.013,175,3.868,176,2.183,186,2.952,187,2.648,432,3.868,641,3.868,645,3.338,701,3.868,790,3.868,978,7.742,979,7.742,980,7.81,981,5.45,982,5.45]],["title/overview.html",[983,4.557]],["body/overview.html",[2,0.624,13,0.016,43,0.011,44,0.011,47,1.526,114,1.598,148,3.655,174,0.777,175,5.282,176,1.526,177,1.675,178,2.064,179,2.064,180,1.851,181,1.952,182,1.952,183,3.296,184,3.296,185,3.296,186,3.765,187,3.616,188,3.43,189,2.831,190,2.064,191,2.064,292,3.43,319,2.19,326,3.43,365,3.43,426,3.655,432,5.282,433,3.296,434,3.296,478,3.459,603,3.296,604,3.296,605,3.296,635,3.655,641,5.377,642,3.296,643,3.296,644,3.296,645,4.506,696,3.655,701,4.558,702,3.296,703,3.296,712,3.296,732,3.655,750,3.296,752,3.296,753,3.655,784,3.655,790,5.282,791,3.296,793,3.296,983,3.296,984,3.81,985,3.81,986,3.81,987,3.81]],["title/properties.html",[10,1.265,803,2.494]],["body/properties.html",[10,1.641,13,0.016,29,0.557,43,0.014,44,0.014,970,5.203,977,5.203,988,6.015,989,6.015,990,6.015]],["title/miscellaneous/variables.html",[661,3.599,917,2.281]],["body/miscellaneous/variables.html",[9,0.285,12,0.515,13,0.016,18,3.198,24,2.236,26,1.813,43,0.011,44,0.011,70,1.441,115,2.185,135,3.468,195,4.292,202,4.049,281,2.393,299,2.223,308,1.602,353,2.553,376,2.223,390,1.523,410,6.596,440,4.049,447,3.904,460,3.369,466,3.754,492,3.369,499,3.754,509,3.369,521,4.049,522,3.754,544,3.369,559,4.428,560,4.049,561,3.754,652,3.891,661,3.369,709,3.369,711,4.428,713,3.369,840,4.936,852,3.754,868,3.754,917,3.08,991,6.374,992,4.34,993,4.34,994,4.34,995,4.34,996,4.34,997,5.706]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":989,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":712,"title":{"classes/Teacher-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["10.0.4",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":986,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":745,"title":{},"body":{"controllers/TeacherController.html":{}}}],["29",{"_index":987,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["4.1.13",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":985,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["7.0.12",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":984,"title":{},"body":{"overview.html":{}}}],["80",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstract",{"_index":448,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["abstract.schema",{"_index":94,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractdocument:19",{"_index":385,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["abstractrepository",{"_index":46,"title":{"injectables/AbstractRepository.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["abstractrepository:14",{"_index":222,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:25",{"_index":225,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:40",{"_index":224,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:50",{"_index":226,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["abstractrepository:59",{"_index":223,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["access",{"_index":761,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TestProgramRepository.html":{}}}],["accessing",{"_index":403,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["added",{"_index":573,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["address",{"_index":883,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["allows",{"_index":759,"title":{},"body":{"modules/TeacherModule.html":{}}}],["amazing",{"_index":960,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":545,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["api",{"_index":925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":923,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/common",{"_index":194,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["application",{"_index":135,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["application_service",{"_index":195,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationmodel",{"_index":220,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["applications",{"_index":140,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["applied",{"_index":515,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/Teacher.html":{}}}],["apply",{"_index":825,"title":{},"body":{"classes/applyClassDto.html":{}}}],["applyclassdto",{"_index":124,"title":{"classes/applyClassDto.html":{}},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["applyforstudy",{"_index":631,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(@body",{"_index":639,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applyforstudy(data",{"_index":632,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["applying",{"_index":638,"title":{},"body":{"controllers/StudentManagementController.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{}}}],["applymoduledto",{"_index":285,"title":{"classes/applyModuleDto.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["apps/.../main.ts",{"_index":919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../potentialclass.schema.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialmodule.schema.ts",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialstudent.schema.ts",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../potentialtest.schema.ts",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../service.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../teacher.schema.ts",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/class",{"_index":115,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/module",{"_index":281,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/student",{"_index":308,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/study",{"_index":690,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/test",{"_index":353,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":81,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{}}}],["associated",{"_index":494,"title":{},"body":{"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{}}}],["async",{"_index":50,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["asynchronously",{"_index":400,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["author",{"_index":970,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":982,"title":{},"body":{"modules.html":{}}}],["await",{"_index":104,"title":{},"body":{"injectables/AbstractRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["backers",{"_index":961,"title":{},"body":{"index.html":{}}}],["base",{"_index":30,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["basic",{"_index":808,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["being",{"_index":470,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["bootstrap",{"_index":180,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":980,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":978,"title":{},"body":{"modules.html":{}}}],["building",{"_index":932,"title":{},"body":{"index.html":{}}}],["bus",{"_index":161,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/StudentManagementController.html":{}}}],["business",{"_index":454,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["call",{"_index":679,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramRepository.html":{}}}],["calls",{"_index":686,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["care",{"_index":807,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["case",{"_index":413,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["classmanagement",{"_index":273,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["classmanagementcontroller",{"_index":113,"title":{"controllers/ClassManagementController.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"coverage.html":{}}}],["classmanagementmodule",{"_index":175,"title":{"modules/ClassManagementModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["classmanagementrepository",{"_index":188,"title":{"injectables/ClassManagementRepository.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{},"overview.html":{}}}],["classmanagementservice",{"_index":148,"title":{"injectables/ClassManagementService.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":587,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["clientproxy",{"_index":585,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["clients",{"_index":620,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule",{"_index":614,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":622,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_classmanagementmodule",{"_index":183,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_imports",{"_index":184,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_classmanagementmodule_providers",{"_index":185,"title":{},"body":{"modules/ClassManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule",{"_index":433,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_modulemanagementmodule_imports",{"_index":435,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["cluster_modulemanagementmodule_providers",{"_index":434,"title":{},"body":{"modules/ModuleManagementModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":603,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":604,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":605,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule",{"_index":642,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_imports",{"_index":643,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studentmanagementmodule_providers",{"_index":644,"title":{},"body":{"modules/StudentManagementModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule",{"_index":702,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_studyprogrammodule_providers",{"_index":703,"title":{},"body":{"modules/StudyProgramModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":750,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":751,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":752,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule",{"_index":791,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["cluster_testprogrammodule_imports",{"_index":792,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["cluster_testprogrammodule_providers",{"_index":793,"title":{},"body":{"modules/TestProgramModule.html":{},"overview.html":{}}}],["collection",{"_index":762,"title":{},"body":{"modules/TeacherModule.html":{}}}],["command",{"_index":160,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{}}}],["commandbus",{"_index":146,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["commandhandler",{"_index":266,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["commandhandler(createpotentialclasscommand",{"_index":267,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["commandhandler(createpotentialmodulecommand",{"_index":298,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["commandhandler(createpotentialstudentcommand",{"_index":332,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["commandhandler(createpotentialtestcommand",{"_index":373,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["commands",{"_index":163,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["commands/create",{"_index":152,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["committing",{"_index":277,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["common",{"_index":450,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["communication",{"_index":760,"title":{},"body":{"modules/TeacherModule.html":{}}}],["complete",{"_index":507,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["configmodule",{"_index":198,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configmodule.forroot",{"_index":209,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configservice",{"_index":392,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('mongodb_uri",{"_index":411,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":626,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":627,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":404,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["configure",{"_index":399,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["configures",{"_index":646,"title":{},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{}}}],["configureswagger",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configureswagger(app",{"_index":921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":393,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["connecting",{"_index":395,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection",{"_index":394,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"dependencies.html":{}}}],["console.log(\"triggered",{"_index":268,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["console.log('message",{"_index":749,"title":{},"body":{"controllers/TeacherController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TestProgramController.html":{}}}],["constants/service",{"_index":439,"title":{},"body":{"modules/ModuleManagementModule.html":{}}}],["constants/services",{"_index":196,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["constructor(@injectmodel(potentialclass.name",{"_index":228,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["constructor(@injectmodel(potentialmodule.name",{"_index":453,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["constructor(@injectmodel(potentialstudent.name",{"_index":678,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["constructor(@injectmodel(potentialtest.name",{"_index":569,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(@injectmodel(teacher.name",{"_index":570,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TeacherRepository.html":{}}}],["constructor(applicationmodel",{"_index":218,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["constructor(classmanagementrepository",{"_index":231,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["constructor(clientproxy",{"_index":584,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["constructor(createpotentialclassdto",{"_index":244,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["constructor(createpotentialmoduledto",{"_index":284,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["constructor(createpotentialstudentdto",{"_index":312,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["constructor(createpotentialtestdto",{"_index":358,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(model",{"_index":57,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(modulemanagementrepository",{"_index":455,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["constructor(potentialclass",{"_index":477,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["constructor(potentialmodule",{"_index":504,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["constructor(private",{"_index":699,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{}}}],["constructor(protected",{"_index":95,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["constructor(public",{"_index":250,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["constructor(publisher",{"_index":255,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["constructor(studentmanagementrepository",{"_index":683,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["constructor(teacher",{"_index":527,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["constructor(teacherrepository",{"_index":768,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(testprogramrepository",{"_index":810,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["constructs",{"_index":155,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["contact",{"_index":540,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["containing",{"_index":89,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["context",{"_index":276,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{}}}],["controller",{"_index":112,"title":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["controller('class",{"_index":154,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["controller('module",{"_index":427,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["controller('student",{"_index":636,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["controller('study",{"_index":698,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["controller('teachers",{"_index":742,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('test",{"_index":785,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["controllers",{"_index":114,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["convert",{"_index":534,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["corresponding",{"_index":550,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["coverage",{"_index":831,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":31,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["cqrsmodule",{"_index":200,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["create",{"_index":51,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{}}}],["create(@body",{"_index":743,"title":{},"body":{"controllers/TeacherController.html":{}}}],["create(createteacherdto",{"_index":721,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(document",{"_index":63,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["created",{"_index":68,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{}}}],["createddocument",{"_index":99,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createddocument.save",{"_index":102,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["createpotentialclasscommand",{"_index":151,"title":{"classes/CreatePotentialClassCommand.html":{}},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclasscommand(data",{"_index":169,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclasscommandhandler",{"_index":251,"title":{"classes/CreatePotentialClassCommandHandler.html":{}},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["createpotentialclassdto",{"_index":120,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{}}}],["createpotentialclassdto(@body",{"_index":168,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialclassdto(data",{"_index":123,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["createpotentialmodulecommand",{"_index":280,"title":{"classes/CreatePotentialModuleCommand.html":{}},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["createpotentialmodulecommand(data",{"_index":429,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmodulecommandhandler",{"_index":290,"title":{"classes/CreatePotentialModuleCommandHandler.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["createpotentialmoduledto",{"_index":283,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["createpotentialmoduledto(@body",{"_index":428,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialmoduledto(data",{"_index":420,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["createpotentialstudentcommand",{"_index":307,"title":{"classes/CreatePotentialStudentCommand.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["createpotentialstudentcommand(data",{"_index":640,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["createpotentialstudentcommandhandler",{"_index":324,"title":{"classes/CreatePotentialStudentCommandHandler.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["createpotentialstudentdto",{"_index":311,"title":{"classes/createPotentialStudentDto.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["createpotentialstudentdto.email",{"_index":541,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.name",{"_index":538,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.phonenumber",{"_index":542,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialstudentdto.study",{"_index":539,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["createpotentialtestcommand",{"_index":352,"title":{"classes/CreatePotentialTestCommand.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["createpotentialtestcommand(data",{"_index":788,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestcommandhandler",{"_index":362,"title":{"classes/CreatePotentialTestCommandHandler.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["createpotentialtestdto",{"_index":357,"title":{"classes/createPotentialTestDto.html":{}},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["createpotentialtestdto(@body",{"_index":787,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto(data",{"_index":778,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["createpotentialtestdto.duration",{"_index":577,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.ec",{"_index":580,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.module",{"_index":574,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["createpotentialtestdto.name",{"_index":576,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["creates",{"_index":127,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["createteacherdto",{"_index":380,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["creating",{"_index":130,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"classes/createPotentialTestDto.html":{}}}],["creation",{"_index":417,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["credits",{"_index":555,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["crud",{"_index":765,"title":{},"body":{"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["ctx",{"_index":739,"title":{},"body":{"controllers/TeacherController.html":{}}}],["data",{"_index":129,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{}}}],["database",{"_index":271,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"modules/StudentManagementModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["databasemodule",{"_index":186,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["declarations",{"_index":179,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["decorator",{"_index":676,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":317,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["defines",{"_index":718,"title":{},"body":{"controllers/TeacherController.html":{}}}],["defining",{"_index":617,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["definition",{"_index":559,"title":{},"body":{"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":52,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["delete(':id",{"_index":132,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["delete(id",{"_index":69,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["deleteapplicationbyid",{"_index":121,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleteapplicationbyid(@param('id",{"_index":172,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TestProgramController.html":{}}}],["deleteapplicationbyid(id",{"_index":131,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["deleted",{"_index":73,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["deletes",{"_index":134,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/TestProgramService.html":{}}}],["deleting",{"_index":781,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["deletion",{"_index":419,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["dependencies",{"_index":177,"title":{"dependencies.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":942,"title":{},"body":{"index.html":{}}}],["document",{"_index":37,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["document).exec",{"_index":110,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["documentation",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["documents",{"_index":78,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["dto",{"_index":246,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{}}}],["dto/applyclass.dto",{"_index":150,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{}}}],["dto/applymodule.dto",{"_index":289,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"controllers/ModuleManagementController.html":{}}}],["dto/create",{"_index":315,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["duration",{"_index":546,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["dynamically",{"_index":611,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["dynamicmodule",{"_index":613,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e2e",{"_index":950,"title":{},"body":{"index.html":{}}}],["each",{"_index":896,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["ec",{"_index":547,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["ecs",{"_index":581,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["educational",{"_index":554,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["efficient",{"_index":933,"title":{},"body":{"index.html":{}}}],["email",{"_index":511,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["emits",{"_index":591,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["enables",{"_index":666,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["encapsulates",{"_index":674,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["endpoint",{"_index":637,"title":{},"body":{"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["endpoints",{"_index":144,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/TeacherController.html":{}}}],["entity",{"_index":447,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"classes/PotentialModule.html":{},"classes/PotentialTest.html":{},"classes/Teacher-1.html":{},"injectables/TestProgramRepository.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":213,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["envfilepath",{"_index":212,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["environment",{"_index":660,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["event",{"_index":164,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["event.commit",{"_index":279,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["event.publish(event",{"_index":351,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["event/potentialclass",{"_index":207,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["eventbus",{"_index":147,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["eventpublisher",{"_index":256,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events",{"_index":166,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["events/potentialmodule",{"_index":297,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["events/potentialstudent",{"_index":331,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{}}}],["events/potentialtest",{"_index":371,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{}}}],["eventshandler",{"_index":484,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["eventshandler(potentialclassregisteredevent",{"_index":485,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["eventshandler(potentialmoduleregisteredevent",{"_index":508,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["eventshandler(potentialstudentregisteredevent",{"_index":531,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["eventshandler(potentialtestregisteredevent",{"_index":568,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["everyone",{"_index":572,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["execute",{"_index":254,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"injectables/TestProgramService.html":{}}}],["execute(@payload",{"_index":748,"title":{},"body":{"controllers/TeacherController.html":{}}}],["execute(command",{"_index":259,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["execute(data",{"_index":725,"title":{},"body":{"controllers/TeacherController.html":{}}}],["executes",{"_index":261,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["executing",{"_index":162,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/TestProgramRepository.html":{}}}],["execution",{"_index":265,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["exports",{"_index":182,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["express",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":389,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/UpdateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["external",{"_index":794,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["extract",{"_index":341,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["factory",{"_index":406,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["feature",{"_index":437,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/TeacherModule.html":{}}}],["features",{"_index":672,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["field",{"_index":884,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["fields",{"_index":90,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["files",{"_index":655,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["filter",{"_index":79,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["filterquery",{"_index":75,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["find",{"_index":53,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{}}}],["find(filterquery",{"_index":74,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findall",{"_index":720,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["finding",{"_index":719,"title":{},"body":{"controllers/TeacherController.html":{}}}],["findone",{"_index":54,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["findone(filterquery",{"_index":83,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["forrootasync",{"_index":398,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["found",{"_index":82,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["framework",{"_index":931,"title":{},"body":{"index.html":{}}}],["function",{"_index":407,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":654,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["functions",{"_index":918,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":612,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["getapplications",{"_index":122,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["gethello",{"_index":694,"title":{},"body":{"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{}}}],["getting",{"_index":927,"title":{"index.html":{}},"body":{}}],["give",{"_index":579,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["given",{"_index":758,"title":{},"body":{"modules/TeacherModule.html":{}}}],["global",{"_index":657,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["graph",{"_index":981,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":957,"title":{},"body":{"index.html":{}}}],["handle",{"_index":476,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handle(event",{"_index":482,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["handler",{"_index":269,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["handlers",{"_index":350,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{}}}],["handles",{"_index":336,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{}}}],["handling",{"_index":142,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["hello",{"_index":536,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudyProgramService.html":{}}}],["here",{"_index":967,"title":{},"body":{"index.html":{}}}],["host/rmq.context",{"_index":738,"title":{},"body":{"controllers/TeacherController.html":{}}}],["http",{"_index":416,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["https://nestjs.com",{"_index":974,"title":{},"body":{"index.html":{}}}],["icommand",{"_index":242,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{}}}],["icommandhandler",{"_index":253,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["identifier",{"_index":36,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["ievent",{"_index":524,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["ieventhandler",{"_index":475,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["implementing",{"_index":318,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"modules/StudentManagementModule.html":{}}}],["implements",{"_index":241,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["imported",{"_index":656,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["importing",{"_index":438,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["imports",{"_index":193,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["included",{"_index":800,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":339,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["indicating",{"_index":563,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["inherited",{"_index":221,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"classes/CreateTeacherDto.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["inherits",{"_index":510,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["initializes",{"_index":287,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["inject",{"_index":412,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject('rabbitmq_client",{"_index":600,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/StudyProgramService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"overview.html":{}}}],["injected",{"_index":452,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel",{"_index":227,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["injectmodel(potentialclass.name",{"_index":236,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["injectmodel(potentialmodule.name",{"_index":457,"title":{},"body":{"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["injectmodel(potentialstudent.name",{"_index":687,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["injectmodel(potentialtest.name",{"_index":815,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["injectmodel(teacher.name",{"_index":532,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/TeacherService.html":{}}}],["injects",{"_index":333,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["installation",{"_index":939,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":941,"title":{},"body":{"index.html":{}}}],["instance",{"_index":156,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["instances",{"_index":334,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["integrating",{"_index":669,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["interact",{"_index":809,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["interacting",{"_index":598,"title":{},"body":{"injectables/RabbitmqService.html":{},"injectables/StudentManagementRepository.html":{}}}],["interacts",{"_index":681,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["interface",{"_index":319,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":628,"title":{},"body":{"interfaces/RmqModuleOptions.html":{}}}],["isarray",{"_index":894,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isarray()@isstring({each",{"_index":885,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isemail",{"_index":877,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isglobal",{"_index":210,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["isnotempty",{"_index":386,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isnumber",{"_index":895,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isnumber()@isnotempty",{"_index":888,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["isphonenumber",{"_index":880,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["isstring",{"_index":387,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["isstring()@isnotempty",{"_index":383,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["it's",{"_index":575,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["join",{"_index":963,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":971,"title":{},"body":{"index.html":{}}}],["lastvaluefrom",{"_index":596,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["lastvaluefrom(this.clientproxy.emit(queue",{"_index":602,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["legend",{"_index":178,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":48,"title":{},"body":{"injectables/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":65,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:25",{"_index":84,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:40",{"_index":76,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:50",{"_index":88,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:59",{"_index":71,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:6",{"_index":59,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:19",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":391,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts",{"_index":606,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.module.ts:31",{"_index":610,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts",{"_index":582,"title":{},"body":{"injectables/RabbitmqService.html":{},"coverage.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:11",{"_index":586,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["libs/common/src/rabbitmq/rabbitmq.service.ts:31",{"_index":590,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["license",{"_index":977,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":954,"title":{},"body":{"index.html":{}}}],["list",{"_index":141,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{}}}],["loads",{"_index":659,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["log",{"_index":337,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["logic",{"_index":368,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"injectables/ModuleManagementService.html":{}}}],["logs",{"_index":728,"title":{},"body":{"controllers/TeacherController.html":{}}}],["made",{"_index":490,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["management",{"_index":119,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["management.controller",{"_index":204,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.controller.ts",{"_index":117,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"coverage.html":{}}}],["management.controller.ts:24",{"_index":421,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:29",{"_index":126,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/StudentManagementController.html":{}}}],["management.controller.ts:34",{"_index":424,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:39",{"_index":138,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.controller.ts:44",{"_index":423,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["management.controller.ts:49",{"_index":133,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["management.module.ts",{"_index":192,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["management.repository",{"_index":205,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{}}}],["management.repository.ts",{"_index":217,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"coverage.html":{}}}],["management.repository.ts:11",{"_index":219,"title":{},"body":{"injectables/ClassManagementRepository.html":{}}}],["management.repository.ts:12",{"_index":451,"title":{},"body":{"injectables/ModuleManagementRepository.html":{}}}],["management.repository.ts:14",{"_index":675,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["management.service",{"_index":149,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{}}}],["management.service.ts",{"_index":230,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management.service.ts:10",{"_index":232,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:13",{"_index":684,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management.service.ts:24",{"_index":235,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management.service.ts:31",{"_index":685,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["management.service.ts:33",{"_index":234,"title":{},"body":{"injectables/ClassManagementService.html":{},"injectables/ModuleManagementService.html":{}}}],["management/src/class",{"_index":116,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"coverage.html":{}}}],["management/src/commands/create",{"_index":239,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["management/src/constants/service.ts",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/constants/services.ts",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/dto/applyclass.dto.ts",{"_index":823,"title":{},"body":{"classes/applyClassDto.html":{},"coverage.html":{}}}],["management/src/dto/applyclass.dto.ts:15",{"_index":824,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applyclass.dto.ts:20",{"_index":826,"title":{},"body":{"classes/applyClassDto.html":{}}}],["management/src/dto/applymodule.dto.ts",{"_index":827,"title":{},"body":{"classes/applyModuleDto.html":{},"coverage.html":{}}}],["management/src/dto/applymodule.dto.ts:16",{"_index":829,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:21",{"_index":830,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/applymodule.dto.ts:26",{"_index":828,"title":{},"body":{"classes/applyModuleDto.html":{}}}],["management/src/dto/create",{"_index":858,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["management/src/event/potentialclass",{"_index":467,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialmodule",{"_index":500,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/events/potentialstudent",{"_index":523,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["management/src/main.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["management/src/module",{"_index":415,"title":{},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{}}}],["management/src/schemas/potentialclass.schema",{"_index":498,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/potentialclass.schema.ts",{"_index":460,"title":{},"body":{"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialclass.schema.ts:11",{"_index":463,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialclass.schema.ts:8",{"_index":462,"title":{},"body":{"classes/PotentialClass.html":{}}}],["management/src/schemas/potentialmodule.schema.ts",{"_index":492,"title":{},"body":{"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:15",{"_index":495,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:21",{"_index":496,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialmodule.schema.ts:27",{"_index":493,"title":{},"body":{"classes/PotentialModule.html":{}}}],["management/src/schemas/potentialstudent.schema",{"_index":465,"title":{},"body":{"classes/PotentialClass.html":{},"classes/applyClassDto.html":{}}}],["management/src/schemas/potentialstudent.schema.ts",{"_index":509,"title":{},"body":{"classes/PotentialStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:16",{"_index":516,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:23",{"_index":518,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:30",{"_index":517,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/potentialstudent.schema.ts:37",{"_index":513,"title":{},"body":{"classes/PotentialStudent.html":{}}}],["management/src/schemas/teacher.schema",{"_index":497,"title":{},"body":{"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{}}}],["management/src/schemas/teacher.schema.ts",{"_index":709,"title":{},"body":{"classes/Teacher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management/src/schemas/teacher.schema.ts:16",{"_index":710,"title":{},"body":{"classes/Teacher.html":{}}}],["management/src/student",{"_index":630,"title":{},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{}}}],["management/src/teacher/dto/create",{"_index":381,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/dto/update",{"_index":819,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts",{"_index":716,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.controller.ts:23",{"_index":722,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:37",{"_index":731,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.controller.ts:48",{"_index":727,"title":{},"body":{"controllers/TeacherController.html":{}}}],["management/src/teacher/teacher.module",{"_index":798,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["management/src/teacher/teacher.module.ts",{"_index":754,"title":{},"body":{"modules/TeacherModule.html":{}}}],["management/src/teacher/teacher.repository.ts",{"_index":764,"title":{},"body":{"injectables/TeacherRepository.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.repository.ts:14",{"_index":766,"title":{},"body":{"injectables/TeacherRepository.html":{}}}],["management/src/teacher/teacher.service.ts",{"_index":767,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["management/src/teacher/teacher.service.ts:14",{"_index":769,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:33",{"_index":770,"title":{},"body":{"injectables/TeacherService.html":{}}}],["management/src/teacher/teacher.service.ts:43",{"_index":772,"title":{},"body":{"injectables/TeacherService.html":{}}}],["manager",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":158,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["merge",{"_index":345,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["merging",{"_index":275,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["message",{"_index":338,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/TeacherController.html":{}}}],["messagepattern",{"_index":740,"title":{},"body":{"controllers/TeacherController.html":{}}}],["messagepattern('teacher_notifications",{"_index":726,"title":{},"body":{"controllers/TeacherController.html":{}}}],["metadata",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":335,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["methods",{"_index":49,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["microservice",{"_index":599,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{}}}],["minutes",{"_index":552,"title":{},"body":{"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"classes/createPotentialTestDto.html":{}}}],["miscellaneous",{"_index":917,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":953,"title":{},"body":{"index.html":{}}}],["mode",{"_index":945,"title":{},"body":{"index.html":{}}}],["model",{"_index":58,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["models",{"_index":670,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["module",{"_index":174,"title":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialTestDto.html":{},"overview.html":{}}}],["modulemanagement",{"_index":302,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["modulemanagementcontroller",{"_index":414,"title":{"controllers/ModuleManagementController.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"coverage.html":{}}}],["modulemanagementmodule",{"_index":432,"title":{"modules/ModuleManagementModule.html":{}},"body":{"modules/ModuleManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["modulemanagementrepository",{"_index":292,"title":{"injectables/ModuleManagementRepository.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modulemanagementservice",{"_index":426,"title":{"injectables/ModuleManagementService.html":{}},"body":{"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":176,"title":{"modules.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":396,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodb_uri",{"_index":409,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoose",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":42,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["mongoosemodule",{"_index":197,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature",{"_index":445,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":215,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":401,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":966,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":77,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["myśliwiec",{"_index":972,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":489,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["necessary",{"_index":263,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["nest",{"_index":436,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nest.js",{"_index":926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestframework",{"_index":976,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":93,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":199,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":821,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":595,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"dependencies.html":{}}}],["nestjs/microservices/ctx",{"_index":737,"title":{},"body":{"controllers/TeacherController.html":{}}}],["nestjs/mongoose",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["node.js",{"_index":930,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":92,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":107,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["notification",{"_index":487,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["notifications",{"_index":481,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/TeacherController.html":{}}}],["npm",{"_index":940,"title":{},"body":{"index.html":{}}}],["number",{"_index":520,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"modules/DatabaseModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/applyModuleDto.html":{}}}],["objectid",{"_index":39,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["objects",{"_index":733,"title":{},"body":{"controllers/TeacherController.html":{}}}],["open",{"_index":955,"title":{},"body":{"index.html":{}}}],["operation",{"_index":813,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["operations",{"_index":159,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["option",{"_index":662,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["optional",{"_index":62,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":618,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["overview",{"_index":983,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":803,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/TestProgramRepository.html":{}}}],["packages",{"_index":795,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["parameter",{"_index":320,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":805,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["partial",{"_index":87,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["partialtype",{"_index":820,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createteacherdto",{"_index":822,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["pass",{"_index":680,"title":{},"body":{"injectables/StudentManagementRepository.html":{}}}],["passed",{"_index":677,"title":{},"body":{"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{}}}],["passes",{"_index":771,"title":{},"body":{"injectables/TeacherService.html":{}}}],["passing",{"_index":578,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/TestProgramRepository.html":{}}}],["pattern",{"_index":665,"title":{},"body":{"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["patterns",{"_index":741,"title":{},"body":{"controllers/TeacherController.html":{}}}],["payload",{"_index":730,"title":{},"body":{"controllers/TeacherController.html":{}}}],["perform",{"_index":682,"title":{},"body":{"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["performs",{"_index":262,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["phone",{"_index":519,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["phonenumber",{"_index":512,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/createPotentialStudentDto.html":{}}}],["please",{"_index":964,"title":{},"body":{"index.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["potential",{"_index":128,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialclass",{"_index":201,"title":{"classes/PotentialClass.html":{}},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{}}}],["potentialclass.command",{"_index":153,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts",{"_index":252,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"coverage.html":{}}}],["potentialclass.command.handler.ts:10",{"_index":257,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.handler.ts:26",{"_index":260,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclass.command.ts",{"_index":240,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"coverage.html":{}}}],["potentialclass.command.ts:12",{"_index":249,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.command.ts:7",{"_index":245,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{}}}],["potentialclass.name",{"_index":216,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["potentialclassregisteredevent",{"_index":206,"title":{"classes/PotentialClassRegisteredEvent.html":{}},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassregisteredevent(potentialclass",{"_index":274,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["potentialclassregisteredeventhandler",{"_index":473,"title":{"classes/PotentialClassRegisteredEventHandler.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialclassschema",{"_index":202,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/PotentialClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule",{"_index":299,"title":{"classes/PotentialModule.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialmodule.command",{"_index":295,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{}}}],["potentialmodule.command.handler.ts",{"_index":291,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"coverage.html":{}}}],["potentialmodule.command.handler.ts:10",{"_index":293,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.handler.ts:22",{"_index":294,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmodule.command.ts",{"_index":282,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{},"coverage.html":{}}}],["potentialmodule.command.ts:12",{"_index":288,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.command.ts:7",{"_index":286,"title":{},"body":{"classes/CreatePotentialModuleCommand.html":{}}}],["potentialmodule.name",{"_index":446,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["potentialmoduleregisteredevent",{"_index":296,"title":{"classes/PotentialModuleRegisteredEvent.html":{}},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleregisteredevent(potentialmodule",{"_index":303,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["potentialmoduleregisteredeventhandler",{"_index":503,"title":{"classes/PotentialModuleRegisteredEventHandler.html":{}},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialmoduleschema",{"_index":440,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialstudent",{"_index":342,"title":{"classes/PotentialStudent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"coverage.html":{}}}],["potentialstudent.command",{"_index":329,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.command.handler",{"_index":651,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent.command.handler.ts",{"_index":325,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"coverage.html":{}}}],["potentialstudent.command.handler.ts:17",{"_index":328,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.handler.ts:9",{"_index":327,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudent.command.ts",{"_index":310,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"coverage.html":{}}}],["potentialstudent.command.ts:10",{"_index":314,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.command.ts:6",{"_index":313,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{}}}],["potentialstudent.dto",{"_index":316,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"controllers/StudentManagementController.html":{}}}],["potentialstudent.dto.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:10",{"_index":879,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:14",{"_index":878,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:19",{"_index":882,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.dto.ts:23",{"_index":881,"title":{},"body":{"classes/createPotentialStudentDto.html":{}}}],["potentialstudent.name",{"_index":673,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["potentialstudent/create",{"_index":309,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent",{"_index":330,"title":{"classes/PotentialStudentRegisteredEvent.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialstudentregisteredevent(potentialstudent",{"_index":344,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["potentialstudentregisteredeventhandler",{"_index":526,"title":{"classes/PotentialStudentRegisteredEventHandler.html":{}},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["potentialstudentschema",{"_index":521,"title":{},"body":{"classes/PotentialStudent.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest",{"_index":376,"title":{"classes/PotentialTest.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["potentialtest.command",{"_index":369,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.command.handler",{"_index":797,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtest.command.handler.ts",{"_index":363,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["potentialtest.command.handler.ts:10",{"_index":366,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.handler.ts:27",{"_index":367,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtest.command.ts",{"_index":355,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"coverage.html":{}}}],["potentialtest.command.ts:12",{"_index":360,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.command.ts:7",{"_index":359,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{}}}],["potentialtest.dto",{"_index":361,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"controllers/TestProgramController.html":{}}}],["potentialtest.dto.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:13",{"_index":891,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:20",{"_index":892,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:27",{"_index":889,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:34",{"_index":890,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:42",{"_index":893,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.dto.ts:50",{"_index":887,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["potentialtest.name",{"_index":799,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["potentialtestregisteredevent",{"_index":370,"title":{"classes/PotentialTestRegisteredEvent.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["potentialtestregisteredevent(potentialtest",{"_index":378,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["potentialtestregisteredeventhandler",{"_index":566,"title":{"classes/PotentialTestRegisteredEventHandler.html":{}},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["potentialtestschema",{"_index":560,"title":{},"body":{"classes/PotentialTest.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":118,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["processes",{"_index":533,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["production",{"_index":947,"title":{},"body":{"index.html":{}}}],["program",{"_index":693,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["program.controller",{"_index":705,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.controller.ts",{"_index":692,"title":{},"body":{"controllers/StudyProgramController.html":{},"controllers/TestProgramController.html":{},"coverage.html":{}}}],["program.controller.ts:24",{"_index":780,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:34",{"_index":779,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:44",{"_index":782,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["program.controller.ts:9",{"_index":695,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["program.module.ts",{"_index":704,"title":{},"body":{"modules/StudyProgramModule.html":{},"modules/TestProgramModule.html":{}}}],["program.repository",{"_index":372,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{}}}],["program.repository.ts",{"_index":802,"title":{},"body":{"injectables/TestProgramRepository.html":{},"coverage.html":{}}}],["program.repository.ts:14",{"_index":804,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["program.service",{"_index":697,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{}}}],["program.service.ts",{"_index":706,"title":{},"body":{"injectables/StudyProgramService.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["program.service.ts:12",{"_index":811,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:27",{"_index":814,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:36",{"_index":812,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["program.service.ts:5",{"_index":707,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["program/src/commands/create",{"_index":354,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"coverage.html":{}}}],["program/src/constants/services.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/dto/create",{"_index":869,"title":{},"body":{"coverage.html":{},"classes/createPotentialTestDto.html":{}}}],["program/src/events/potentialtest",{"_index":562,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["program/src/main.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["program/src/schemas/potentialtest.schema.ts",{"_index":544,"title":{},"body":{"classes/PotentialTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/potentialtest.schema.ts:13",{"_index":556,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:19",{"_index":557,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:25",{"_index":551,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:31",{"_index":553,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:37",{"_index":558,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/potentialtest.schema.ts:43",{"_index":549,"title":{},"body":{"classes/PotentialTest.html":{}}}],["program/src/schemas/teacher.schema.ts",{"_index":713,"title":{},"body":{"classes/Teacher-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["program/src/schemas/teacher.schema.ts:13",{"_index":714,"title":{},"body":{"classes/Teacher-1.html":{}}}],["program/src/study",{"_index":691,"title":{},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{}}}],["program/src/test",{"_index":776,"title":{},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{}}}],["programs",{"_index":375,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["progressive",{"_index":929,"title":{},"body":{"index.html":{}}}],["project",{"_index":956,"title":{},"body":{"index.html":{}}}],["promise",{"_index":67,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({required",{"_index":461,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["prop({type",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"properties.html":{}}}],["property",{"_index":34,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"classes/PotentialStudent.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/Teacher.html":{},"classes/createPotentialStudentDto.html":{}}}],["provided",{"_index":449,"title":{},"body":{"injectables/ModuleManagementRepository.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"controllers/TeacherController.html":{}}}],["providers",{"_index":181,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["provides",{"_index":647,"title":{},"body":{"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["proxy",{"_index":588,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["public",{"_index":243,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"controllers/TeacherController.html":{}}}],["publish",{"_index":304,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publisher",{"_index":258,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["publishing",{"_index":165,"title":{},"body":{"controllers/ClassManagementController.html":{},"classes/CreatePotentialClassCommandHandler.html":{}}}],["query",{"_index":80,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["questions",{"_index":548,"title":{},"body":{"classes/PotentialTest.html":{},"classes/createPotentialTestDto.html":{}}}],["queue",{"_index":593,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq",{"_index":442,"title":{},"body":{"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{}}}],["rabbitmq.service",{"_index":616,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmq_client",{"_index":623,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rabbitmqservice",{"_index":478,"title":{"injectables/RabbitmqService.html":{}},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":965,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":96,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["received",{"_index":729,"title":{},"body":{"controllers/TeacherController.html":{}}}],["receives",{"_index":633,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["reflect",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":444,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TeacherModule.html":{}}}],["register(undefined",{"_index":608,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":621,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["registered",{"_index":349,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event",{"_index":208,"title":{},"body":{"modules/ClassManagementModule.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler",{"_index":650,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["registered.event.handler.ts",{"_index":474,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"coverage.html":{}}}],["registered.event.handler.ts:12",{"_index":505,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:13",{"_index":479,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:14",{"_index":528,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:23",{"_index":506,"title":{},"body":{"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:24",{"_index":529,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:28",{"_index":483,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["registered.event.handler.ts:9",{"_index":567,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{}}}],["registered.event.ts",{"_index":468,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{},"coverage.html":{}}}],["registered.event.ts:11",{"_index":565,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:12",{"_index":471,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{}}}],["registered.event.ts:5",{"_index":525,"title":{},"body":{"classes/PotentialStudentRegisteredEvent.html":{}}}],["registered.event.ts:6",{"_index":564,"title":{},"body":{"classes/PotentialTestRegisteredEvent.html":{}}}],["registered.event.ts:7",{"_index":469,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{}}}],["registers",{"_index":619,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{}}}],["registration",{"_index":502,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["related",{"_index":143,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEvent.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["repositories",{"_index":801,"title":{},"body":{"modules/TestProgramModule.html":{}}}],["repository",{"_index":233,"title":{},"body":{"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["represented",{"_index":38,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["representing",{"_index":501,"title":{},"body":{"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["represents",{"_index":321,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreateTeacherDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["request",{"_index":634,"title":{},"body":{"controllers/StudentManagementController.html":{}}}],["requests",{"_index":422,"title":{},"body":{"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TeacherController.html":{}}}],["required",{"_index":322,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}],["resolves",{"_index":137,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["response",{"_index":723,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsibility",{"_index":667,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["responsible",{"_index":364,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{}}}],["result",{"_index":264,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"injectables/TestProgramService.html":{}}}],["results",{"_index":43,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":418,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["retrieve",{"_index":425,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["retrieves",{"_index":139,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"modules/DatabaseModule.html":{},"injectables/ModuleManagementService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramService.html":{}}}],["retrieving",{"_index":783,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["return",{"_index":101,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["returns",{"_index":66,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["rmqcontext",{"_index":736,"title":{},"body":{"controllers/TeacherController.html":{}}}],["rmqmodule",{"_index":187,"title":{"modules/RmqModule.html":{}},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":443,"title":{},"body":{"modules/ModuleManagementModule.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["rmqmodule.register({name",{"_index":214,"title":{},"body":{"modules/ClassManagementModule.html":{}}}],["rmqmoduleoptions",{"_index":609,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["run",{"_index":943,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"injectables/RabbitmqService.html":{},"dependencies.html":{}}}],["saved",{"_index":301,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["saving",{"_index":270,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommandHandler.html":{}}}],["scalable",{"_index":934,"title":{},"body":{"index.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"modules/TestProgramModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":464,"title":{},"body":{"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{}}}],["schemafactory.createforclass(potentialclass",{"_index":466,"title":{},"body":{"classes/PotentialClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialmodule",{"_index":499,"title":{},"body":{"classes/PotentialModule.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialstudent",{"_index":522,"title":{},"body":{"classes/PotentialStudent.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(potentialtest",{"_index":561,"title":{},"body":{"classes/PotentialTest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teacher",{"_index":711,"title":{},"body":{"classes/Teacher.html":{},"classes/Teacher-1.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":671,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["schemas/potentialclass.schema",{"_index":203,"title":{},"body":{"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/PotentialClassRegisteredEventHandler.html":{}}}],["schemas/potentialmodule.schema",{"_index":441,"title":{},"body":{"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["schemas/potentialstudent.schema",{"_index":649,"title":{},"body":{"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{}}}],["schemas/potentialtest.schema",{"_index":796,"title":{},"body":{"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["schemas/teacher.schema",{"_index":530,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{}}}],["schematypes",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":40,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["scope",{"_index":658,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["segregation",{"_index":668,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["send",{"_index":486,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{}}}],["sending",{"_index":480,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{}}}],["sendmessage",{"_index":583,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sendmessage(queue",{"_index":589,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sends",{"_index":601,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["sent",{"_index":594,"title":{},"body":{"injectables/RabbitmqService.html":{}}}],["server",{"_index":935,"title":{},"body":{"index.html":{}}}],["service",{"_index":157,"title":{},"body":{"controllers/ClassManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{},"injectables/StudentManagementService.html":{},"injectables/TeacherService.html":{}}}],["services",{"_index":648,"title":{},"body":{"modules/StudentManagementModule.html":{},"modules/TestProgramModule.html":{}}}],["setting",{"_index":663,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["side",{"_index":936,"title":{},"body":{"index.html":{}}}],["single",{"_index":85,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"modules/ClassManagementModule.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"modules/DatabaseModule.html":{},"controllers/ModuleManagementController.html":{},"modules/ModuleManagementModule.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/UpdateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["specified",{"_index":592,"title":{},"body":{"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["specifies",{"_index":755,"title":{},"body":{"modules/TeacherModule.html":{}}}],["specify",{"_index":763,"title":{},"body":{"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["sponsors",{"_index":959,"title":{},"body":{"index.html":{}}}],["start",{"_index":920,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["start:dev",{"_index":946,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":948,"title":{},"body":{"index.html":{}}}],["started",{"_index":928,"title":{"index.html":{}},"body":{}}],["starter",{"_index":938,"title":{},"body":{"index.html":{}}}],["statements",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":607,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["status",{"_index":724,"title":{},"body":{"controllers/TeacherController.html":{}}}],["stay",{"_index":968,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/StudentManagementRepository.html":{},"controllers/StudyProgramController.html":{},"injectables/StudyProgramService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"injectables/TeacherRepository.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":323,"title":{},"body":{"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialClass.html":{},"classes/PotentialStudent.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"classes/applyClassDto.html":{},"classes/createPotentialStudentDto.html":{}}}],["studentmanagementcontroller",{"_index":629,"title":{"controllers/StudentManagementController.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"coverage.html":{}}}],["studentmanagementmodule",{"_index":641,"title":{"modules/StudentManagementModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["studentmanagementrepository",{"_index":326,"title":{"injectables/StudentManagementRepository.html":{}},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["studentmanagementservice",{"_index":635,"title":{"injectables/StudentManagementService.html":{}},"body":{"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["students",{"_index":571,"title":{},"body":{"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/StudentManagementRepository.html":{}}}],["study",{"_index":488,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"controllers/StudentManagementController.html":{},"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"classes/createPotentialStudentDto.html":{}}}],["studyprogramcontroller",{"_index":689,"title":{"controllers/StudyProgramController.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"coverage.html":{}}}],["studyprogrammodule",{"_index":701,"title":{"modules/StudyProgramModule.html":{}},"body":{"modules/StudyProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["studyprogramservice",{"_index":696,"title":{"injectables/StudyProgramService.html":{}},"body":{"controllers/StudyProgramController.html":{},"modules/StudyProgramModule.html":{},"injectables/StudyProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":456,"title":{},"body":{"injectables/ModuleManagementService.html":{},"injectables/RabbitmqService.html":{}}}],["super",{"_index":472,"title":{},"body":{"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialTestRegisteredEvent.html":{}}}],["super(applicationmodel",{"_index":229,"title":{},"body":{"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["support",{"_index":32,"title":{},"body":{"classes/AbstractDocument.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":979,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":806,"title":{},"body":{"injectables/TestProgramRepository.html":{}}}],["tdocument",{"_index":64,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["teacher",{"_index":390,"title":{"classes/Teacher.html":{},"classes/Teacher-1.html":{}},"body":{"classes/CreateTeacherDto.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"modules/TestProgramModule.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacher.controller",{"_index":756,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":735,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":382,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:10",{"_index":384,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.name",{"_index":537,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{}}}],["teacher.repository",{"_index":757,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["teacher.service",{"_index":734,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":653,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["teacher_notifications",{"_index":747,"title":{},"body":{"controllers/TeacherController.html":{}}}],["teachercontroller",{"_index":715,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":645,"title":{"modules/TeacherModule.html":{}},"body":{"modules/StudentManagementModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":753,"title":{"injectables/TeacherRepository.html":{}},"body":{"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["teachers",{"_index":717,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{}}}],["teacherschema",{"_index":652,"title":{},"body":{"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teacherservice",{"_index":732,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":356,"title":{},"body":{"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"classes/createPotentialTestDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":952,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":951,"title":{},"body":{"index.html":{}}}],["testprogramcontroller",{"_index":775,"title":{"controllers/TestProgramController.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"coverage.html":{}}}],["testprogrammodule",{"_index":790,"title":{"modules/TestProgramModule.html":{}},"body":{"modules/TestProgramModule.html":{},"modules.html":{},"overview.html":{}}}],["testprogramrepository",{"_index":365,"title":{"injectables/TestProgramRepository.html":{}},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["testprogramservice",{"_index":784,"title":{"injectables/TestProgramService.html":{}},"body":{"controllers/TestProgramController.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramService.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":777,"title":{},"body":{"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{},"index.html":{}}}],["thanks",{"_index":958,"title":{},"body":{"index.html":{}}}],["this.classmanagementrepository.create(createpotentialclassdto",{"_index":272,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.classmanagementrepository.delete(id",{"_index":238,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementrepository.find",{"_index":237,"title":{},"body":{"injectables/ClassManagementService.html":{}}}],["this.classmanagementservice.deleteapplicationbyid(id",{"_index":173,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.classmanagementservice.getapplications",{"_index":171,"title":{},"body":{"controllers/ClassManagementController.html":{}}}],["this.commandbus.execute(command",{"_index":170,"title":{},"body":{"controllers/ClassManagementController.html":{},"controllers/ModuleManagementController.html":{},"controllers/StudentManagementController.html":{},"controllers/TestProgramController.html":{}}}],["this.model(document",{"_index":100,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.find(filterquery).exec",{"_index":108,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidanddelete(id).exec",{"_index":111,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":109,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.model.findone(filterquery).exec",{"_index":105,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["this.modulemanagementrepository.create(createpotentialmoduledto",{"_index":300,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.modulemanagementrepository.delete(id",{"_index":459,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementrepository.find",{"_index":458,"title":{},"body":{"injectables/ModuleManagementService.html":{}}}],["this.modulemanagementservice.deleteapplicationbyid(id",{"_index":431,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.modulemanagementservice.getapplications",{"_index":430,"title":{},"body":{"controllers/ModuleManagementController.html":{}}}],["this.publisher.mergeobjectcontext(classmanagement",{"_index":278,"title":{},"body":{"classes/CreatePotentialClassCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(modulemanagement",{"_index":306,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(student",{"_index":347,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.publisher.mergeobjectcontext(test",{"_index":379,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.rabbitmqservice.sendmessage('study",{"_index":491,"title":{},"body":{"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{}}}],["this.rabbitmqservice.sendmessage('teacher_notifications",{"_index":543,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.studentmanagementrepository.create(createpotentialstudentdto",{"_index":343,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["this.studentmanagementrepository.find",{"_index":688,"title":{},"body":{"injectables/StudentManagementService.html":{}}}],["this.studyprogramservice.gethello",{"_index":700,"title":{},"body":{"controllers/StudyProgramController.html":{}}}],["this.teacher.findone({}).exec()).toobject",{"_index":535,"title":{},"body":{"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{}}}],["this.teacherrepository.create(createteacherdto",{"_index":773,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.find",{"_index":774,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":744,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":746,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.testprogramrepository.create(createpotentialtestdto",{"_index":377,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{}}}],["this.testprogramrepository.delete(id",{"_index":817,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramrepository.find",{"_index":816,"title":{},"body":{"injectables/TestProgramService.html":{}}}],["this.testprogramservice.deleteapplicationbyid(id",{"_index":786,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["this.testprogramservice.getapplications",{"_index":789,"title":{},"body":{"controllers/TestProgramController.html":{}}}],["throw",{"_index":106,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["throws",{"_index":103,"title":{},"body":{"injectables/AbstractRepository.html":{}}}],["touch",{"_index":969,"title":{},"body":{"index.html":{}}}],["track",{"_index":346,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["transfer",{"_index":247,"title":{},"body":{"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/applyModuleDto.html":{}}}],["transport",{"_index":615,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":624,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["trigger",{"_index":348,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{}}}],["triggered",{"_index":340,"title":{},"body":{"classes/CreatePotentialStudentCommandHandler.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{}}}],["true",{"_index":211,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"modules/StudentManagementModule.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"modules/TestProgramModule.html":{},"classes/createPotentialTestDto.html":{}}}],["true})@isnotempty({each",{"_index":886,"title":{},"body":{"classes/createPotentialTestDto.html":{}}}],["twitter",{"_index":975,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"injectables/AbstractRepository.html":{},"controllers/ClassManagementController.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ClassManagementService.html":{},"classes/CreatePotentialClassCommand.html":{},"classes/CreatePotentialClassCommandHandler.html":{},"classes/CreatePotentialModuleCommand.html":{},"classes/CreatePotentialModuleCommandHandler.html":{},"classes/CreatePotentialStudentCommand.html":{},"classes/CreatePotentialStudentCommandHandler.html":{},"classes/CreatePotentialTestCommand.html":{},"classes/CreatePotentialTestCommandHandler.html":{},"classes/CreateTeacherDto.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/ModuleManagementService.html":{},"classes/PotentialClass.html":{},"classes/PotentialClassRegisteredEvent.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialModule.html":{},"classes/PotentialModuleRegisteredEvent.html":{},"classes/PotentialModuleRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEvent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTest.html":{},"classes/PotentialTestRegisteredEvent.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"coverage.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/UpdateTeacherDto.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["typescript",{"_index":937,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/CreateTeacherDto.html":{},"classes/PotentialClass.html":{},"classes/PotentialModule.html":{},"classes/PotentialStudent.html":{},"classes/PotentialTest.html":{},"classes/Teacher.html":{},"classes/Teacher-1.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{}}}],["unique",{"_index":35,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unit",{"_index":949,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"controllers/ClassManagementController.html":{},"injectables/ClassManagementService.html":{},"controllers/ModuleManagementController.html":{},"injectables/ModuleManagementService.html":{},"controllers/TeacherController.html":{},"controllers/TestProgramController.html":{},"injectables/TestProgramService.html":{}}}],["unlicensed",{"_index":990,"title":{},"body":{"properties.html":{}}}],["up",{"_index":664,"title":{},"body":{"modules/StudentManagementModule.html":{}}}],["update",{"_index":55,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["update(id",{"_index":86,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updated",{"_index":91,"title":{},"body":{"injectables/AbstractRepository.html":{},"injectables/ClassManagementRepository.html":{},"injectables/ModuleManagementRepository.html":{},"injectables/StudentManagementRepository.html":{},"injectables/TeacherRepository.html":{},"injectables/TestProgramRepository.html":{}}}],["updateteacherdto",{"_index":818,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["uri",{"_index":408,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["urls",{"_index":625,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["used",{"_index":374,"title":{},"body":{"classes/CreatePotentialTestCommandHandler.html":{},"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/TestProgramModule.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["usefactory",{"_index":402,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["uses",{"_index":397,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["using",{"_index":305,"title":{},"body":{"classes/CreatePotentialModuleCommandHandler.html":{},"modules/DatabaseModule.html":{},"classes/PotentialClassRegisteredEventHandler.html":{},"classes/PotentialStudent.html":{},"classes/PotentialStudentRegisteredEventHandler.html":{},"classes/PotentialTestRegisteredEventHandler.html":{},"injectables/RabbitmqService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/StudentManagementController.html":{},"modules/StudentManagementModule.html":{},"injectables/StudentManagementRepository.html":{},"injectables/StudentManagementService.html":{},"classes/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherRepository.html":{},"injectables/TeacherService.html":{},"injectables/TestProgramRepository.html":{},"injectables/TestProgramService.html":{}}}],["validation",{"_index":514,"title":{},"body":{"classes/PotentialStudent.html":{},"classes/Teacher.html":{}}}],["validator",{"_index":388,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/applyClassDto.html":{},"classes/applyModuleDto.html":{},"classes/createPotentialStudentDto.html":{},"classes/createPotentialTestDto.html":{},"dependencies.html":{}}}],["value",{"_index":410,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":405,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["variable",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":661,"title":{"miscellaneous/variables.html":{}},"body":{"modules/StudentManagementModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":988,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":944,"title":{},"body":{"index.html":{}}}],["website",{"_index":973,"title":{},"body":{"index.html":{}}}],["world",{"_index":708,"title":{},"body":{"injectables/StudyProgramService.html":{}}}],["you'd",{"_index":962,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/ClassManagementModule.html":{},"modules/ModuleManagementModule.html":{},"modules/RmqModule.html":{},"modules/StudentManagementModule.html":{},"modules/StudyProgramModule.html":{},"modules/TeacherModule.html":{},"modules/TestProgramModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Prop, Schema } from \"@nestjs/mongoose\";\nimport mongoose, { SchemaTypes, Types } from \"mongoose\";\n\n/**\n * @class AbstractDocument\n * @extends AggregateRoot\n * @description Base class for Mongoose schema with CQRS support.\n */\n@Schema()\nexport class AbstractDocument extends AggregateRoot {\n    /**\n     * @property {_id}\n     * @type {Types.ObjectId}\n     * @description Unique identifier for the document, represented by a Mongoose ObjectId.\n     */\n    @Prop({ type: SchemaTypes.ObjectId, default: () => new mongoose.Types.ObjectId()})\n    _id: Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractRepository.html":{"url":"injectables/AbstractRepository.html","title":"injectable - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:14\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:59\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:40\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:25\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/database/abstract.repository.ts:50\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractDocument } from './abstract.schema';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class AbstractRepository {\n  constructor(protected readonly model: Model) {}\n\n  /**\n   * Create a new document.\n   * @param document The document to create.\n   * @returns The created document.\n   */\n  async create(document: TDocument): Promise {\n    const createdDocument = new this.model(document);\n    return createdDocument.save();\n  }\n\n  /**\n   * Find a single document matching the filter query.\n   * @param filterQuery The filter query to find the document.\n   * @returns The found document.\n   * @throws NotFoundException if the document is not found.\n   */\n  async findOne(filterQuery: FilterQuery): Promise {\n    const document = await this.model.findOne(filterQuery).exec();\n\n    if (!document) {\n      throw new NotFoundException('Document not found');\n    }\n\n    return document;\n  }\n\n  /**\n   * Find multiple documents matching the filter query.\n   * @param filterQuery The filter query to find the documents.\n   * @returns An array of found documents.\n   */\n  async find(filterQuery: FilterQuery): Promise {\n    return this.model.find(filterQuery).exec();\n  }\n\n  /**\n   * Update a document by its ID.\n   * @param id The ID of the document to update.\n   * @param document The partial document containing the fields to update.\n   * @returns The updated document.\n   */\n  async update(id: string, document: Partial): Promise {\n    return this.model.findByIdAndUpdate(id, document).exec();\n  }\n\n  /**\n   * Delete a document by its ID.\n   * @param id The ID of the document to delete.\n   * @returns The deleted document.\n   */\n  async delete(id: string): Promise {\n    return this.model.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassManagementController.html":{"url":"controllers/ClassManagementController.html","title":"controller - ClassManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class-management\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialClassDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialClassDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialClassDto(data: applyClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:29\n                \n            \n\n\n            \n                \n                    Creates a potential class.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:49\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/class-management/src/class-management.controller.ts:39\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * Controller for handling class management related endpoints.\n */\nimport { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ClassManagementService } from './class-management.service';\nimport { applyClassDto } from './dto/applyClass.dto';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\n\n@Controller('class-management')\nexport class ClassManagementController {\n    /**\n     * Constructs an instance of ClassManagementController.\n     * @param classManagementService The service for managing class operations.\n     * @param commandBus The command bus for executing commands.\n     * @param eventBus The event bus for publishing events.\n     */\n    constructor(\n        private readonly classManagementService: ClassManagementService,\n        private readonly commandBus: CommandBus,\n        private readonly eventBus: EventBus\n    ) {}\n\n    /**\n     * Creates a potential class.\n     * @param data The data for creating the potential class.\n     */\n    @Post()\n    async createPotentialClassDto(@Body() data: applyClassDto) {\n        const command = new CreatePotentialClassCommand(data);\n        this.commandBus.execute(command);\n    }\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    @Get()\n    async getApplications() {\n        return this.classManagementService.getApplications();\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    @Delete(':id')\n    async deleteApplicationById(@Param('id') id: string) {\n        return this.classManagementService.deleteApplicationById(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassManagementModule.html":{"url":"modules/ClassManagementModule.html","title":"module - ClassManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/class-management/src/class-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassManagementRepository\n                        \n                        \n                            ClassManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialClass, PotentialClassSchema } from './schemas/potentialClass.schema';\nimport { ClassManagementController } from './class-management.controller';\nimport { ClassManagementService } from './class-management.service';\nimport { ClassManagementRepository } from './class-management.repository';\nimport { CreatePotentialClassCommand } from './commands/create-potentialClass.command';\nimport { PotentialClassRegisteredEvent } from './event/potentialClass-registered.event';\n\n\n@Module({\n  imports: [ConfigModule.forRoot({\n    isGlobal: true,\n    envFilePath: '.env'\n  }), RmqModule.register({name: APPLICATION_SERVICE}), DatabaseModule, CqrsModule, MongooseModule.forFeature([{name: PotentialClass.name, schema: PotentialClassSchema}])],\n  controllers: [ClassManagementController],\n  providers: [ClassManagementService, ClassManagementRepository, PotentialClassRegisteredEvent, CreatePotentialClassCommand],\n})\nexport class ClassManagementModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementRepository.html":{"url":"injectables/ClassManagementRepository.html","title":"injectable - ClassManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.repository.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for the PotentialClass schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialClass } from \"./schemas/potentialClass.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n@Injectable()\nexport class ClassManagementRepository extends AbstractRepository {\n    /**\n     * Constructs an instance of ClassManagementRepository.\n     * @param applicationModel The Mongoose model for the PotentialClass schema.\n     */\n    constructor(@InjectModel(PotentialClass.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassManagementService.html":{"url":"injectables/ClassManagementService.html","title":"injectable - ClassManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/class-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/class-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of ClassManagementService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for class management related data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the deleted application.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/class-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the list of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from './schemas/potentialClass.schema';\nimport { ClassManagementRepository } from './class-management.repository';\n\n@Injectable()\nexport class ClassManagementService {\n    /**\n     * Constructs an instance of ClassManagementService.\n     * @param classManagementRepository The repository for class management related data.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name)\n        private readonly classManagementRepository: ClassManagementRepository,\n    ) {}\n\n    /**\n     * Retrieves all applications.\n     * @returns A promise that resolves to the list of applications.\n     */\n    async getApplications() {\n        return this.classManagementRepository.find({});\n    }\n\n    /**\n     * Deletes an application by ID.\n     * @param id The ID of the application to delete.\n     * @returns A promise that resolves to the deleted application.\n     */\n    async deleteApplicationById(id: string) {\n        return this.classManagementRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommand.html":{"url":"classes/CreatePotentialClassCommand.html","title":"class - CreatePotentialClassCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: applyClassDto)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        applyClassDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) containing the data for creating the potential class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyClassDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) containing the data for creating the potential class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyClassDto } from \"../dto/applyClass.dto\";\n\nexport class CreatePotentialClassCommand implements ICommand {\n    /**\n     * Constructs an instance of CreatePotentialClassCommand.\n     * @param createPotentialClassDto The DTO (Data Transfer Object) containing the data for creating the potential class.\n     */\n    constructor(public readonly createPotentialClassDto: applyClassDto) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialClassCommandHandler.html":{"url":"classes/CreatePotentialClassCommandHandler.html","title":"class - CreatePotentialClassCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialClassCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/commands/create-potentialClass.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, classManagementRepository: ClassManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs an instance of CreatePotentialClassCommandHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The event publisher for publishing events.\n\n                                                        \n                                                \n                                                \n                                                        classManagementRepository\n                                                  \n                                                        \n                                                                        ClassManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The repository for managing classes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialClassCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/commands/create-potentialClass.command.handler.ts:26\n                \n            \n\n\n            \n                \n                    Executes the CreatePotentialClassCommand and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialClassCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialClassCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialClassCommand } from \"./create-potentialClass.command\";\nimport { ClassManagementRepository } from \"../class-management.repository\";\nimport { PotentialClassRegisteredEvent } from \"../event/potentialClass-registered.event\";\n\n@CommandHandler(CreatePotentialClassCommand)\nexport class CreatePotentialClassCommandHandler implements ICommandHandler {\n    /**\n     * Constructs an instance of CreatePotentialClassCommandHandler.\n     * @param publisher The event publisher for publishing events.\n     * @param classManagementRepository The repository for managing classes.\n     */\n    constructor(\n        private readonly publisher: EventPublisher,\n        private classManagementRepository: ClassManagementRepository\n    ) {}\n\n    /**\n     * Executes the CreatePotentialClassCommand and performs the necessary operations.\n     * @param command The CreatePotentialClassCommand instance.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialClassCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialClassDto } = command;\n\n        // Saving potential class into the database\n        const potentialClass = await this.classManagementRepository.create(createPotentialClassDto);\n\n        // Creating a PotentialClassRegisteredEvent\n        const classManagement = new PotentialClassRegisteredEvent(potentialClass);\n\n        // Merging the event with the event context and committing it\n        const event = this.publisher.mergeObjectContext(classManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommand.html":{"url":"classes/CreatePotentialModuleCommand.html","title":"class - CreatePotentialModuleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command for creating a potential module.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: applyModuleDto)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the CreatePotentialModuleCommand class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        applyModuleDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating a potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         applyModuleDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating a potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { applyModuleDto } from \"../dto/applyModule.dto\";\n\n/**\n * Command for creating a potential module.\n */\nexport class CreatePotentialModuleCommand implements ICommand {\n    /**\n     * Initializes a new instance of the CreatePotentialModuleCommand class.\n     * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating a potential module.\n     */\n    constructor(public readonly createPotentialModuleDto: applyModuleDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialModuleCommandHandler.html":{"url":"classes/CreatePotentialModuleCommandHandler.html","title":"class - CreatePotentialModuleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialModuleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/commands/create-potentialModule.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler for creating potential modules.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialModuleCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/commands/create-potentialModule.command.handler.ts:22\n                \n            \n\n\n            \n                \n                    Executes the create potential module command.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialModuleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The create potential module command.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialModuleCommand } from \"./create-potentialModule.command\";\nimport { ModuleManagementRepository } from \"../module-management.repository\";\nimport { PotentialModuleRegisteredEvent } from \"../events/potentialModule-registered.event\"\n\n/**\n * Command handler for creating potential modules.\n */\n@CommandHandler(CreatePotentialModuleCommand)\nexport class CreatePotentialModuleCommandHandler implements ICommandHandler {\n\n    constructor(\n        private readonly publisher: EventPublisher,\n        private moduleManagementRepository: ModuleManagementRepository\n    ) {}\n\n    /**\n     * Executes the create potential module command.\n     * @param command The create potential module command.\n     * @returns A promise that resolves to the result of the execution.\n     */\n    async execute(command: CreatePotentialModuleCommand): Promise {\n        console.log(\"Triggered Command Handler\")\n\n        const { createPotentialModuleDto } = command;\n\n        // Saving potential module into the database\n        const potentialModule = await this.moduleManagementRepository.create(createPotentialModuleDto);\n        \n        // Create a PotentialModuleRegisteredEvent with the saved potential module\n        const moduleManagement = new PotentialModuleRegisteredEvent(potentialModule);\n\n        // Publish the event using the EventPublisher\n        const event = this.publisher.mergeObjectContext(moduleManagement);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommand.html":{"url":"classes/CreatePotentialStudentCommand.html","title":"class - CreatePotentialStudentCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: createPotentialStudentDto)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        createPotentialStudentDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialStudentDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from '../../dto/create-potentialStudent.dto';\n\n// Define the CreatePotentialStudentCommand class implementing ICommand interface\nexport class CreatePotentialStudentCommand implements ICommand {\n  // Constructor for the CreatePotentialStudentCommand class\n  constructor(\n    // The createPotentialStudentDto parameter represents the data required to create a potential student\n    public readonly createPotentialStudentDto: createPotentialStudentDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialStudentCommandHandler.html":{"url":"classes/CreatePotentialStudentCommandHandler.html","title":"class - CreatePotentialStudentCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialStudentCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialStudentCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialStudentCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialStudentCommand } from \"./create-potentialStudent.command\";\nimport { PotentialStudentRegisteredEvent } from \"../../events/potentialStudent-registered.event\";\nimport { StudentManagementRepository } from \"../../student-management.repository\";\n\n// Define the command handler for the CreatePotentialStudentCommand\n@CommandHandler(CreatePotentialStudentCommand)\nexport class CreatePotentialStudentCommandHandler implements ICommandHandler {\n\n    // Constructor for the CreatePotentialStudentCommandHandler class\n    // It injects the EventPublisher and StudentManagementRepository instances\n    constructor(\n        private readonly publisher: EventPublisher, private studentManagementRepository: StudentManagementRepository) {}\n\n    // Execute method that handles the command\n    async execute(command: CreatePotentialStudentCommand): Promise {\n        // Log a message to indicate that the command handler has been triggered\n        console.log(\"Triggered Command Handler\")\n\n        // Extract the createPotentialStudentDto from the command\n        const { createPotentialStudentDto } = command;\n\n        // Saving the potential student data into the database\n        const potentialStudent = await this.studentManagementRepository.create(createPotentialStudentDto);\n\n        // Creating a new PotentialStudentRegisteredEvent with the potentialStudent data\n        const student = new PotentialStudentRegisteredEvent(potentialStudent);\n\n        // Merge the event with the EventPublisher context to track its operations\n        const event = this.publisher.mergeObjectContext(student);\n\n        // Publish the event to trigger any registered event handlers for this event\n        event.publish(event);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommand.html":{"url":"classes/CreatePotentialTestCommand.html","title":"class - CreatePotentialTestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command class for creating a potential test.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: createPotentialTestDto)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreatePotentialTestCommand.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        createPotentialTestDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for creating a potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         createPotentialTestDto\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.ts:12\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for creating a potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from \"@nestjs/cqrs\";\nimport { createPotentialTestDto } from \"../dto/create-potentialTest.dto\";\n\n/**\n * Command class for creating a potential test.\n */\nexport class CreatePotentialTestCommand implements ICommand {\n    /**\n     * Creates an instance of CreatePotentialTestCommand.\n     * @param createPotentialTestDto The DTO object containing the data for creating a potential test.\n     */\n    constructor(public readonly createPotentialTestDto: createPotentialTestDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePotentialTestCommandHandler.html":{"url":"classes/CreatePotentialTestCommandHandler.html","title":"class - CreatePotentialTestCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePotentialTestCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/commands/create-potentialTest.command.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handler class responsible for handling the CreatePotentialTestCommand.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisher: EventPublisher, testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePotentialTestCommand)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/commands/create-potentialTest.command.handler.ts:27\n                \n            \n\n\n            \n                \n                    Executes the command handler logic.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePotentialTestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The CreatePotentialTestCommand instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves to the result of the command execution.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { CreatePotentialTestCommand } from \"./create-potentialTest.command\";\nimport { PotentialTestRegisteredEvent } from \"../events/potentialTest-registered.event\";\nimport { TestProgramRepository } from \"../test-program.repository\";\n\n/**\n * Command handler class responsible for handling the CreatePotentialTestCommand.\n */\n@CommandHandler(CreatePotentialTestCommand)\nexport class CreatePotentialTestCommandHandler implements ICommandHandler {\n    constructor(\n        /**\n         * The event publisher used to publish events.\n         */\n        private readonly publisher: EventPublisher,\n        /**\n         * The repository for managing test programs.\n         */\n        private testProgramRepository: TestProgramRepository\n    ) {}\n\n    /**\n     * Executes the command handler logic.\n     * @param command The CreatePotentialTestCommand instance.\n     * @returns A promise that resolves to the result of the command execution.\n     */\n    async execute(command: CreatePotentialTestCommand): Promise {\n        console.log(\"Triggered Command Handler\");\n\n        const { createPotentialTestDto } = command;\n\n        // Saving the test into the database\n        const potentialTest = await this.testProgramRepository.create(createPotentialTestDto);\n        const test = new PotentialTestRegisteredEvent(potentialTest);\n\n        const event = this.publisher.mergeObjectContext(test);\n        event.commit();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/create-teacher.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/teacher/dto/create-teacher.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n// Define the CreateTeacherDto class extending AbstractDocument\nexport class CreateTeacherDto extends AbstractDocument {\n  // The name property represents the name of the teacher\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // Import necessary dependencies\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * @module DatabaseModule\n * @description Module for configuring the database connection using Mongoose.\n */\n@Module({\n  imports: [\n    /**\n     * @module MongooseModule\n     * @description Mongoose module for connecting to the MongoDB database.\n     * It uses the `forRootAsync` method to configure the connection asynchronously.\n     */\n    MongooseModule.forRootAsync({\n      /**\n       * @method useFactory\n       * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n       * @returns {Object} - The Mongoose connection configuration object.\n       * @description Factory function for creating the Mongoose connection configuration object.\n       * It retrieves the MongoDB URI from the `MONGODB_URI` configuration value using the ConfigService.\n       */\n      useFactory: (configService: ConfigService) => ({\n          uri: configService.get('MONGODB_URI')\n      }),\n      /**\n       * @property {Array} inject\n       * @description An array of dependencies to inject into the factory function.\n       * In this case, it injects the ConfigService.\n       */\n      inject: [ConfigService]\n    })\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModuleManagementController.html":{"url":"controllers/ModuleManagementController.html","title":"controller - ModuleManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModuleManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module-management\n            \n\n\n            \n                Description\n            \n            \n                Controller for module management related HTTP endpoints.\nResponsible for handling module creation, retrieval, and deletion.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialModuleDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialModuleDto(data: applyModuleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:24\n                \n            \n\n\n            \n                \n                    Handles HTTP POST requests to create a potential module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                applyModuleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating a potential module.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:44\n                \n            \n\n\n            \n                \n                    Handles HTTP DELETE requests to delete an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/module-management/src/module-management.controller.ts:34\n                \n            \n\n\n            \n                \n                    Handles HTTP GET requests to retrieve all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to the applications.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { ModuleManagementService } from './module-management.service';\nimport { applyModuleDto } from './dto/applyModule.dto';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Controller for module management related HTTP endpoints.\n * Responsible for handling module creation, retrieval, and deletion.\n */\n@Controller('module-management')\nexport class ModuleManagementController {\n  constructor(\n    private readonly moduleManagementService: ModuleManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus\n  ) {}\n\n  /**\n   * Handles HTTP POST requests to create a potential module.\n   * @param data The data for creating a potential module.\n   */\n  @Post()\n  async createPotentialModuleDto(@Body() data: applyModuleDto) {\n    const command = new CreatePotentialModuleCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Handles HTTP GET requests to retrieve all applications.\n   * @returns A promise that resolves to the applications.\n   */\n  @Get()\n  async getApplications() {\n    return this.moduleManagementService.getApplications();\n  }\n\n  /**\n   * Handles HTTP DELETE requests to delete an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is deleted.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.moduleManagementService.deleteApplicationById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModuleManagementModule.html":{"url":"modules/ModuleManagementModule.html","title":"module - ModuleManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModuleManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_ModuleManagementModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/module-management/src/module-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Nest module for managing the module management feature.\nResponsible for importing dependencies, configuring providers, and controllers.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModuleManagementRepository\n                        \n                        \n                            ModuleManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModuleManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialModule, PotentialModuleSchema } from './schemas/potentialModule.schema';\nimport { ModuleManagementService } from './module-management.service';\nimport { ModuleManagementController } from './module-management.controller';\nimport { ModuleManagementRepository } from './module-management.repository';\nimport { PotentialModuleRegisteredEvent } from './events/potentialModule-registered.event';\nimport { CreatePotentialModuleCommand } from './commands/create-potentialModule.command';\n\n/**\n * Nest module for managing the module management feature.\n * Responsible for importing dependencies, configuring providers, and controllers.\n */\n@Module({\n  imports: [\n    // Import configuration module\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env'\n    }),\n\n    // Import RabbitMQ module\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    // Import database module\n    DatabaseModule,\n\n    // Import CQRS module\n    CqrsModule,\n\n    // Import Mongoose module and register potential module schema\n    MongooseModule.forFeature([{ name: PotentialModule.name, schema: PotentialModuleSchema }])\n  ],\n  controllers: [ModuleManagementController],\n  providers: [\n    // Configure module management service and repository\n    ModuleManagementService,\n    ModuleManagementRepository,\n\n    // Configure event and command handlers\n    PotentialModuleRegisteredEvent,\n    CreatePotentialModuleCommand\n  ],\n})\nexport class ModuleManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementRepository.html":{"url":"injectables/ModuleManagementRepository.html","title":"injectable - ModuleManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repository class for handling database operations related to the PotentialModule entity.\nExtends the abstract repository class provided by the common module.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.repository.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs the ModuleManagementRepository instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected Mongoose model for the PotentialModule schema.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialModule } from \"./schemas/potentialModule.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Repository class for handling database operations related to the `PotentialModule` entity.\n * Extends the abstract repository class provided by the common module.\n */\n@Injectable()\nexport class ModuleManagementRepository extends AbstractRepository {\n    /**\n     * Constructs the `ModuleManagementRepository` instance.\n     * @param applicationModel The injected Mongoose model for the `PotentialModule` schema.\n     */\n    constructor(@InjectModel(PotentialModule.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleManagementService.html":{"url":"injectables/ModuleManagementService.html","title":"injectable - ModuleManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/module-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for handling business logic related to the module management feature.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleManagementRepository: ModuleManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/module-management.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleManagementRepository\n                                                  \n                                                        \n                                                                        ModuleManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:33\n                \n            \n\n\n            \n                \n                    Deletes an application by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves when the application is successfully deleted.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/module-management.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieves all applications.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A promise that resolves to an array of applications.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialModule } from './schemas/potentialModule.schema';\nimport { ModuleManagementRepository } from './module-management.repository';\n\n/**\n * Service class for handling business logic related to the module management feature.\n */\n@Injectable()\nexport class ModuleManagementService {\n  constructor(\n    /**\n     * Injects the module management repository.\n     * @param moduleManagementRepository The injected module management repository.\n     */\n    @InjectModel(PotentialModule.name)\n    private readonly moduleManagementRepository: ModuleManagementRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications.\n   * @returns A promise that resolves to an array of applications.\n   */\n  async getApplications() {\n    return this.moduleManagementRepository.find({});\n  }\n\n  /**\n   * Deletes an application by ID.\n   * @param id The ID of the application to delete.\n   * @returns A promise that resolves when the application is successfully deleted.\n   */\n  async deleteApplicationById(id: string) {\n    return this.moduleManagementRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClass.html":{"url":"classes/PotentialClass.html","title":"class - PotentialClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/schemas/potentialClass.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/schemas/potentialClass.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { PotentialStudent } from 'apps/student-management/src/schemas/potentialStudent.schema';\n\n@Schema()\nexport class PotentialClass extends AbstractDocument {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  student: PotentialStudent;\n\n}\n\nexport const PotentialClassSchema = SchemaFactory.createForClass(PotentialClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEvent.html":{"url":"classes/PotentialClassRegisteredEvent.html","title":"class - PotentialClassRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialClassDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialClassDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialClassDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data related to the potential class being registered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialClassDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The data related to the potential class being registered.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\nexport class PotentialClassRegisteredEvent extends AggregateRoot {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEvent.\n     * @param createPotentialClassDto The data related to the potential class being registered.\n     */\n    constructor(public readonly createPotentialClassDto: any) {\n        super();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialClassRegisteredEventHandler.html":{"url":"classes/PotentialClassRegisteredEventHandler.html","title":"class - PotentialClassRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialClassRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/event/potentialClass-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialClass: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs an instance of PotentialClassRegisteredEventHandler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        potentialClass\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose model for PotentialClass.\n\n                                                        \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The RabbitmqService for sending notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialClassRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/class-management/src/event/potentialClass-registered.event.handler.ts:28\n                \n            \n\n\n            \n                \n                    Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialClassRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialClassRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialClassRegisteredEvent } from './potentialClass-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialClass } from '../schemas/potentialClass.schema';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialClassRegisteredEvent)\nexport class PotentialClassRegisteredEventHandler implements IEventHandler {\n    /**\n     * Constructs an instance of PotentialClassRegisteredEventHandler.\n     * @param potentialClass The Mongoose model for PotentialClass.\n     * @param rabbitmqService The RabbitmqService for sending notifications.\n     */\n    constructor(\n        @InjectModel(PotentialClass.name) private readonly potentialClass: Model,\n        private readonly rabbitmqService: RabbitmqService\n    ) {}\n\n    /**\n     * Handles the PotentialClassRegisteredEvent and performs the necessary operations.\n     * @param event The PotentialClassRegisteredEvent instance.\n     */\n    async handle(event: PotentialClassRegisteredEvent): Promise {\n        // Send a notification to the study using RabbitMQ\n        const message = `A new class named: ${PotentialClass.name} has been made`;\n\n        await this.rabbitmqService.sendMessage('study-notification', message);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModule.html":{"url":"classes/PotentialModule.html","title":"class - PotentialModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/schemas/potentialModule.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialModule entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:27\n                        \n                    \n\n            \n                \n                    Class associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:15\n                        \n                    \n\n            \n                \n                    Name of the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/schemas/potentialModule.schema.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the potential module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\nimport { Teacher } from 'apps/student-management/src/schemas/teacher.schema';\nimport { PotentialClass } from 'apps/class-management/src/schemas/potentialClass.schema';\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\n@Schema()\nexport class PotentialModule extends AbstractDocument {\n  /**\n   * Name of the potential module.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * Teacher associated with the potential module.\n   */\n  @Prop({ required: true })\n  teacher: Teacher;\n\n  /**\n   * Class associated with the potential module.\n   */\n  @Prop({ required: true})\n  class: PotentialClass;\n}\n\n/**\n * Mongoose schema for the PotentialModule entity.\n */\nexport const PotentialModuleSchema = SchemaFactory.createForClass(PotentialModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEvent.html":{"url":"classes/PotentialModuleRegisteredEvent.html","title":"class - PotentialModuleRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event representing the registration of a potential module.\nExtends the AggregateRoot class.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialModuleDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialModuleDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the PotentialModuleRegisteredEvent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialModuleDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO (Data Transfer Object) for creating the potential module.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialModuleDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.ts:12\n                        \n                    \n\n            \n                \n                    The DTO (Data Transfer Object) for creating the potential module.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event representing the registration of a potential module.\n * Extends the AggregateRoot class.\n */\nexport class PotentialModuleRegisteredEvent extends AggregateRoot {\n  /**\n   * Initializes a new instance of the PotentialModuleRegisteredEvent class.\n   * @param createPotentialModuleDto The DTO (Data Transfer Object) for creating the potential module.\n   */\n  constructor(public readonly createPotentialModuleDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialModuleRegisteredEventHandler.html":{"url":"classes/PotentialModuleRegisteredEventHandler.html","title":"class - PotentialModuleRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialModuleRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/events/potentialModule-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Event handler for the PotentialModuleRegisteredEvent.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(potentialModule: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        potentialModule\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialModuleRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/module-management/src/events/potentialModule-registered.event.handler.ts:23\n                \n            \n\n\n            \n                \n                    Handles the PotentialModuleRegisteredEvent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialModuleRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialModuleRegisteredEvent instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise that resolves when the event handling is complete.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialModuleRegisteredEvent } from './potentialModule-registered.event';\nimport { AbstractRepository, RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PotentialModule } from '../schemas/potentialModule.schema';\n\n/**\n * Event handler for the PotentialModuleRegisteredEvent.\n */\n@EventsHandler(PotentialModuleRegisteredEvent)\nexport class PotentialModuleRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(PotentialModule.name) private readonly potentialModule: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * Handles the PotentialModuleRegisteredEvent.\n   * @param event The PotentialModuleRegisteredEvent instance.\n   * @returns A promise that resolves when the event handling is complete.\n   */\n  async handle(event: PotentialModuleRegisteredEvent): Promise {\n    const message = `A new module named: ${PotentialModule.name} has been made`;\n    await this.rabbitmqService.sendMessage('study-notification', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudent.html":{"url":"classes/PotentialStudent.html","title":"class - PotentialStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/potentialStudent.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:37\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:30\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/potentialStudent.schema.ts:23\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * @description Mongoose schema for the PotentialStudent class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class PotentialStudent extends AbstractDocument {\n  /**\n   * @description Property representing the name of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * @description Property representing the study of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  study: string;\n\n  /**\n   * @description Property representing the phone number of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  phoneNumber: string;\n\n  /**\n   * @description Property representing the email of the potential student.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  email: string;\n}\n\n/**\n * @description Mongoose schema for the PotentialStudent class created using SchemaFactory.\n */\nexport const PotentialStudentSchema = SchemaFactory.createForClass(PotentialStudent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEvent.html":{"url":"classes/PotentialStudentRegisteredEvent.html","title":"class - PotentialStudentRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialStudentDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialStudentDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialStudentDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialStudentDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot, IEvent } from '@nestjs/cqrs';\n\n// Define the PotentialStudentRegisteredEvent class extending AggregateRoot and implementing IEvent\nexport class PotentialStudentRegisteredEvent extends AggregateRoot implements IEvent {\n  // Constructor for the PotentialStudentRegisteredEvent class\n  constructor(public readonly createPotentialStudentDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialStudentRegisteredEventHandler.html":{"url":"classes/PotentialStudentRegisteredEventHandler.html","title":"class - PotentialStudentRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialStudentRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Implements the IEventHandler interface for the event.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialStudentRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/events/potentialStudent-registered.event.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialStudentRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The PotentialStudentRegisteredEvent object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEvent } from './potentialStudent-registered.event';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RabbitmqService } from '@app/common';\nimport { Teacher } from '../schemas/teacher.schema';\n\n/**\n * @description Event handler for the PotentialStudentRegisteredEvent.\n * Implements the IEventHandler interface for the event.\n */\n@EventsHandler(PotentialStudentRegisteredEvent)\nexport class PotentialStudentRegisteredEventHandler implements IEventHandler {\n  constructor(\n    @InjectModel(Teacher.name) private readonly teacher: Model,\n    private readonly rabbitmqService: RabbitmqService\n  ) {}\n\n  /**\n   * @description Handle method that processes the PotentialStudentRegisteredEvent.\n   * @param event The PotentialStudentRegisteredEvent object.\n   */\n  async handle(event: PotentialStudentRegisteredEvent): Promise {\n    // Log a message to indicate that the event handler has been triggered\n    console.log(\"Triggered event handler\")\n\n    // Find a teacher and convert it to an object\n    const teacher = (await this.teacher.findOne({}).exec()).toObject();\n\n    // Extract the createPotentialStudentDto from the event\n    const { createPotentialStudentDto } = event;\n\n    // Create a notification message for the teacher\n    const message = `Hello ${teacher.name}, ${createPotentialStudentDto.name} has applied for the study ${createPotentialStudentDto.study}. Contact: ${createPotentialStudentDto.email}, ${createPotentialStudentDto.phoneNumber}`;\n\n    // Send the notification message to the teacher using RabbitMQ\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTest.html":{"url":"classes/PotentialTest.html","title":"class - PotentialTest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/potentialTest.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the PotentialTest entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answers\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                ec\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:43\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:25\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:31\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:19\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/potentialTest.schema.ts:37\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n/**\n * Mongoose schema for the PotentialTest entity.\n */\n@Schema()\nexport class PotentialTest extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @Prop({ required: true })\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @Prop({ required: true })\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @Prop({ required: true })\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @Prop({ required: true, type: [String] })\n  answers: string[];\n}\n\n/**\n * Mongoose schema definition for the PotentialTest entity.\n */\nexport const PotentialTestSchema = SchemaFactory.createForClass(PotentialTest);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEvent.html":{"url":"classes/PotentialTestRegisteredEvent.html","title":"class - PotentialTestRegisteredEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event class for indicating the registration of a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createPotentialTestDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createPotentialTestDto: any)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of PotentialTestRegisteredEvent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        createPotentialTestDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The DTO object containing the data for the registered potential test.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createPotentialTestDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.ts:11\n                        \n                    \n\n            \n                \n                    The DTO object containing the data for the registered potential test.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from \"@nestjs/cqrs\";\n\n/**\n * Event class for indicating the registration of a potential test.\n */\nexport class PotentialTestRegisteredEvent extends AggregateRoot {\n  /**\n   * Creates an instance of PotentialTestRegisteredEvent.\n   * @param createPotentialTestDto The DTO object containing the data for the registered potential test.\n   */\n  constructor(public readonly createPotentialTestDto: any) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PotentialTestRegisteredEventHandler.html":{"url":"classes/PotentialTestRegisteredEventHandler.html","title":"class - PotentialTestRegisteredEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PotentialTestRegisteredEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/events/potentialTest-registered.event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacher: Model, rabbitmqService: RabbitmqService)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacher\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rabbitmqService\n                                                  \n                                                        \n                                                                        RabbitmqService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PotentialTestRegisteredEvent)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/events/potentialTest-registered.event.handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PotentialTestRegisteredEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEvent } from './potentialTest-registered.event';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { RabbitmqService } from '@app/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n@EventsHandler(PotentialTestRegisteredEvent)\nexport class PotentialTestRegisteredEventHandler implements IEventHandler {\n  // constructor(@InjectModel(PotentialTest.name) private readonly potentialTest : Model,  private readonly rabbitmqService: RabbitmqService) {}\n  constructor(@InjectModel(Teacher.name) private readonly teacher : Model,  private readonly rabbitmqService: RabbitmqService) {}\n\n  async handle(event: PotentialTestRegisteredEvent): Promise {\n    console.log(\"Triggered event handler\")\n    \n    const teacher =  (await this.teacher.findOne({}).exec()).toObject();\n    const { createPotentialTestDto } = event;\n\n    // Send a notification to the students using RabbitMQ\n    const message = `Hello everyone, ${teacher.name} has added a new test for ${createPotentialTestDto.module}, it's about ${createPotentialTestDto.name}, it will have a duration of ${createPotentialTestDto.duration} minutes, passing this test will give ${createPotentialTestDto.ec} ECs`\n    await this.rabbitmqService.sendMessage('teacher_notifications', message);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitmqService.html":{"url":"injectables/RabbitmqService.html","title":"injectable - RabbitmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:11\n                            \n                        \n\n                \n                    \n                            It injects the RabbitMQ client proxy into the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe RabbitMQ client proxy instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(queue: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.service.ts:31\n                \n            \n\n\n            \n                \n                    It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the queue to send the message to.\n\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be sent.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the message is sent successfully.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n/**\n * @class RabbitmqService\n * @description Service for interacting with RabbitMQ microservice client.\n */\n@Injectable()\nexport class RabbitmqService {\n\n  /**\n   * @constructor\n   * @param {ClientProxy} clientProxy - The RabbitMQ client proxy instance.\n   * @description Constructs an instance of the RabbitmqService.\n   * It injects the RabbitMQ client proxy into the service.\n   */\n  constructor(\n    @Inject('RABBITMQ_CLIENT') private readonly clientProxy: ClientProxy,\n  ) {}\n\n  /**\n   * @method sendMessage\n   * @param {string} queue - The name of the queue to send the message to.\n   * @param {string} message - The message to be sent.\n   * @returns {Promise} - A promise that resolves when the message is sent successfully.\n   * @description Sends a message to the specified queue using the RabbitMQ client proxy.\n   * It emits the message to the specified queue and returns a promise that resolves when the message is sent.\n   */\n  sendMessage(queue: string, message: string): Promise {\n    return lastValueFrom(this.clientProxy.emit(queue, message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/rabbitmq/rabbitmq.module.ts:31\n                \n            \n\n\n            \n                \n                    It returns a dynamically generated module configuration that can be used for importing the module.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RmqModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \nThe dynamically generated module configuration.\n\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // Import necessary dependencies\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rabbitmq/rabbitmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitmqService } from './rabbitmq.service';\n\n/**\n * @interface RmqModuleOptions\n * @description Interface defining the options for configuring the RabbitMQ module.\n */\ninterface RmqModuleOptions {\n  name: string;\n}\n\n/**\n * @module RmqModule\n * @description Module for configuring RabbitMQ microservice client.\n */\n@Module({\n  providers: [RabbitmqService],\n  exports: [RabbitmqService],\n})\nexport class RmqModule {\n  /**\n   * @method register\n   * @param {RmqModuleOptions} options - The options for configuring the RabbitMQ module.\n   * @returns {DynamicModule} - The dynamically generated module configuration.\n   * @description Registers the RabbitMQ module with the specified options.\n   * It returns a dynamically generated module configuration that can be used for importing the module.\n   */\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    return {\n      module: RmqModule,\n      imports: [\n        /**\n         * @module ClientsModule\n         * @description Module for creating microservice clients.\n         * It uses the `registerAsync` method to configure the RabbitMQ client asynchronously.\n         */\n        ClientsModule.registerAsync([\n          {\n            name: 'RABBITMQ_CLIENT',\n            /**\n             * @method useFactory\n             * @param {ConfigService} configService - The ConfigService instance used for accessing configuration values.\n             * @returns {Object} - The RabbitMQ client configuration object.\n             * @description Factory function for creating the RabbitMQ client configuration object.\n             * It retrieves the RabbitMQ URI and queue name from the configuration using the ConfigService.\n             */\n            useFactory: (configService: ConfigService) => ({\n              transport: Transport.RMQ,\n              options: {\n                urls: [configService.get('RABBIT_MQ_URI')],\n                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`),\n              },\n            }),\n            /**\n             * @property {Array} inject\n             * @description An array of dependencies to inject into the factory function.\n             * In this case, it injects the ConfigService.\n             */\n            inject: [ConfigService],\n          },\n        ]),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentManagementController.html":{"url":"controllers/StudentManagementController.html","title":"controller - StudentManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student-management\n            \n\n\n            \n                Description\n            \n            \n                It handles HTTP requests related to student management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                applyForStudy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        applyForStudy\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyForStudy(data: createPotentialStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/student-management.controller.ts:29\n                \n            \n\n\n            \n                \n                    It receives a POST request and creates a potential student using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialStudentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData for creating a potential student.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to the created student.\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { StudentManagementService } from './student-management.service';\nimport { CreatePotentialStudentCommand } from './commands/create-potentialStudent/create-potentialStudent.command';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { createPotentialStudentDto } from './dto/create-potentialStudent.dto';\n\n/**\n * @class StudentManagementController\n * @description Controller for managing student-related operations.\n * It handles HTTP requests related to student management.\n */\n@Controller('student-management')\nexport class StudentManagementController {\n  constructor(\n    private readonly studentManagementService: StudentManagementService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * @method applyForStudy\n   * @param {createPotentialStudentDto} data - Data for creating a potential student.\n   * @returns {Promise} - A promise that resolves to the created student.\n   * @description Endpoint for applying for study.\n   * It receives a POST request and creates a potential student using the provided data.\n   */\n  @Post()\n  async applyForStudy(@Body() data: createPotentialStudentDto): Promise {\n    // Create a new CreatePotentialStudentCommand with the provided data\n    const command = new CreatePotentialStudentCommand(data);\n\n    // Execute the command using the command bus\n    const student = this.commandBus.execute(command);\n\n    // Return the student\n    return student;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentManagementModule.html":{"url":"modules/StudentManagementModule.html","title":"module - StudentManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/student-management.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports necessary dependencies, configures the module, and provides controllers and services.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentManagementRepository\n                        \n                        \n                            StudentManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            TeacherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { StudentManagementController } from './student-management.controller';\nimport { StudentManagementService } from './student-management.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialStudent, PotentialStudentSchema } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialStudentRegisteredEventHandler } from './events/potentialStudent-registered.event.handler';\nimport { CreatePotentialStudentCommandHandler } from './commands/create-potentialStudent/create-potentialStudent.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from './teacher/teacher.module';\n\n/**\n * @module StudentManagementModule\n * @description Module for managing student-related functionality.\n * It imports necessary dependencies, configures the module, and provides controllers and services.\n */\n@Module({\n  // Configure the module imports\n  imports: [\n    /**\n     * @module ConfigModule\n     * @description Module for handling configuration files.\n     * It is imported with global scope and loads the environment variables from '.env' file.\n     */\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    /**\n     * @module RmqModule\n     * @description Module for configuring RabbitMQ microservice client.\n     * It is imported with the provided 'APPLICATION_SERVICE' name as an option.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    /**\n     * @module DatabaseModule\n     * @description Module for configuring the database connection.\n     * It is responsible for setting up the database connection using Mongoose.\n     */\n    DatabaseModule,\n    /**\n     * @module CqrsModule\n     * @description Module for implementing the CQRS pattern.\n     * It enables the Command Query Responsibility Segregation (CQRS) pattern in the application.\n     */\n    CqrsModule,\n    /**\n     * @module MongooseModule\n     * @description Module for integrating Mongoose into the Nest application.\n     * It registers Mongoose models and schemas as features for the module.\n     */\n    MongooseModule.forFeature([\n      { name: PotentialStudent.name, schema: PotentialStudentSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n    /**\n     * @module TeacherModule\n     * @description Module for managing teacher-related functionality.\n     * It encapsulates teacher-related controllers, services, and providers.\n     */\n    TeacherModule,\n  ],\n  // Configure the module controllers\n  controllers: [StudentManagementController],\n  // Configure the module providers\n  providers: [\n    StudentManagementService,\n    StudentManagementRepository,\n    PotentialStudentRegisteredEventHandler,\n    CreatePotentialStudentCommandHandler,\n  ],\n})\nexport class StudentManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementRepository.html":{"url":"injectables/StudentManagementRepository.html","title":"injectable - StudentManagementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the PotentialStudent model using the @InjectModel decorator.\nThe injected model is passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the PotentialStudent schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialStudent } from \"./schemas/potentialStudent.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * @class StudentManagementRepository\n * @description Repository class for managing potential students.\n * It extends the AbstractRepository class and provides methods for interacting with the PotentialStudent model.\n */\n@Injectable()\nexport class StudentManagementRepository extends AbstractRepository {\n  /**\n   * @constructor\n   * @param {Model} applicationModel - The Mongoose model for the PotentialStudent schema.\n   * @description Constructs an instance of the StudentManagementRepository.\n   * It injects the PotentialStudent model using the @InjectModel decorator.\n   * The injected model is passed to the constructor of the AbstractRepository class.\n   */\n  constructor(@InjectModel(PotentialStudent.name) applicationModel: Model) {\n    // Call the constructor of the AbstractRepository class and pass the applicationModel\n    super(applicationModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentManagementService.html":{"url":"injectables/StudentManagementService.html","title":"injectable - StudentManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/student-management.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the StudentManagementRepository to perform application-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentManagementRepository: StudentManagementRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/student-management.service.ts:13\n                            \n                        \n\n                \n                    \n                            It injects the StudentManagementRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentManagementRepository\n                                                  \n                                                        \n                                                                        StudentManagementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for student management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/student-management.service.ts:31\n                \n            \n\n\n            \n                \n                    It calls the find method of the StudentManagementRepository to get all application documents.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to an array of application documents.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialStudent } from './schemas/potentialStudent.schema';\nimport { StudentManagementRepository } from './student-management.repository';\n\n/**\n * @class StudentManagementService\n * @description Service class for managing student applications.\n * It interacts with the StudentManagementRepository to perform application-related operations.\n */\n@Injectable()\nexport class StudentManagementService {\n  /**\n   * @constructor\n   * @param {StudentManagementRepository} studentManagementRepository - The repository for student management.\n   * @description Constructs an instance of the StudentManagementService.\n   * It injects the StudentManagementRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(PotentialStudent.name)\n    private readonly studentManagementRepository: StudentManagementRepository,\n  ) {}\n\n  /**\n   * @method getApplications\n   * @returns {Promise} - A promise that resolves to an array of application documents.\n   * @description Retrieves all applications.\n   * It calls the find method of the StudentManagementRepository to get all application documents.\n   */\n  async getApplications(): Promise {\n    return this.studentManagementRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudyProgramController.html":{"url":"controllers/StudyProgramController.html","title":"controller - StudyProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudyProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                study-program\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/study-program/src/study-program.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { StudyProgramService } from './study-program.service';\n\n@Controller('study-program')\nexport class StudyProgramController {\n  constructor(private readonly studyProgramService: StudyProgramService) {}\n\n  @Get()\n  getHello(): string {\n    return this.studyProgramService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudyProgramModule.html":{"url":"modules/StudyProgramModule.html","title":"module - StudyProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    StudyProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/study-program/src/study-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudyProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudyProgramController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudyProgramController } from './study-program.controller';\nimport { StudyProgramService } from './study-program.service';\n\n@Module({\n  imports: [],\n  controllers: [StudyProgramController],\n  providers: [StudyProgramService],\n})\nexport class StudyProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudyProgramService.html":{"url":"injectables/StudyProgramService.html","title":"injectable - StudyProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudyProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/study-program/src/study-program.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/study-program/src/study-program.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StudyProgramService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher.html":{"url":"classes/Teacher.html","title":"class - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Inherits from the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/schemas/teacher.schema.ts:16\n                        \n                    \n\n            \n                \n                    Required validation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * @description Mongoose schema for the Teacher class.\n * Inherits from the AbstractDocument class.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * @description Property representing the name of the teacher.\n   * Required validation is applied.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * @description Mongoose schema for the Teacher class created using SchemaFactory.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teacher-1.html":{"url":"classes/Teacher-1.html","title":"class - Teacher-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/schemas/teacher.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Mongoose schema for the Teacher entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/schemas/teacher.schema.ts:13\n                        \n                    \n\n            \n                \n                    The name of the teacher.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\n/**\n * Mongoose schema for the Teacher entity.\n */\n@Schema()\nexport class Teacher extends AbstractDocument {\n  /**\n   * The name of the teacher.\n   */\n  @Prop({ required: true })\n  name: string;\n}\n\n/**\n * Mongoose schema definition for the Teacher entity.\n */\nexport const TeacherSchema = SchemaFactory.createForClass(Teacher);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n\n            \n                Description\n            \n            \n                It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                execute\n                            \n                            \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:23\n                \n            \n\n\n            \n                \n                    It creates a new teacher using the provided data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DTO object containing teacher data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A response object with status and message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('teacher_notifications')\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:48\n                \n            \n\n\n            \n                \n                    It logs the received message.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The payload data of the received message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.controller.ts:37\n                \n            \n\n\n            \n                \n                    It retrieves all teachers from the teacherService.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An array of teacher objects.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // Import necessary modules and classes\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { RmqContext } from '@nestjs/microservices/ctx-host/rmq.context';\nimport { Ctx, MessagePattern, Payload } from '@nestjs/microservices';\n\n/**\n * @description Controller class for handling teacher-related HTTP requests and message patterns.\n * It defines endpoints for creating teachers, finding all teachers, and handling teacher notifications.\n */\n@Controller('teachers')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  /**\n   * @description Handler for the POST /teachers endpoint.\n   * It creates a new teacher using the provided data.\n   * @param createTeacherDto The DTO object containing teacher data.\n   * @returns A response object with status and message.\n   */\n  @Post()\n  async create(@Body() createTeacherDto: CreateTeacherDto) {\n    // Call the teacherService to create a teacher\n    await this.teacherService.create(createTeacherDto);\n\n    // Return a response object with status and message\n    return { status: 201, message: 'Created Teacher' };\n  }\n\n  /**\n   * @description Handler for the GET /teachers endpoint.\n   * It retrieves all teachers from the teacherService.\n   * @returns An array of teacher objects.\n   */\n  @Get()\n  findAll() {\n    // Call the teacherService to find all teachers\n    return this.teacherService.findAll();\n  }\n\n  /**\n   * @description Message handler for 'teacher_notifications' pattern.\n   * It logs the received message.\n   * @param data The payload data of the received message.\n   */\n  @MessagePattern('teacher_notifications')\n  public async execute(@Payload() data: any) {\n    // Log the received message\n    console.log('Message: ', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            It imports the required modules and specifies the controllers and providers for the teacher feature.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherRepository\n                        \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes\nimport { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TeacherRepository } from './teacher.repository';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Teacher, TeacherSchema } from '../schemas/teacher.schema';\nimport { RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from '../constants/services';\n\n/**\n * @module TeacherModule\n * @description Module for managing teachers.\n * It imports the required modules and specifies the controllers and providers for the teacher feature.\n */\n@Module({\n  // Import required modules\n  imports: [\n    /**\n     * @description Register the RmqModule with the given name.\n     * It allows communication with RabbitMQ microservice.\n     */\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n\n    /**\n     * @description Register the MongooseModule with the Teacher schema.\n     * It provides the Mongoose connection and access to the Teacher collection.\n     */\n    MongooseModule.forFeature([{ name: Teacher.name, schema: TeacherSchema }])\n  ],\n  // Specify the controllers\n  controllers: [TeacherController],\n  // Specify the providers\n  providers: [TeacherService, TeacherRepository]\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherRepository.html":{"url":"injectables/TeacherRepository.html","title":"injectable - TeacherRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                It extends the AbstractRepository class and provides CRUD operations for teachers.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.repository.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\nThe injected model is then passed to the constructor of the AbstractRepository class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the Teacher schema.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { Teacher } from \"../schemas/teacher.schema\";\n\n/**\n * @class TeacherRepository\n * @description Repository class for managing teacher data.\n * It extends the AbstractRepository class and provides CRUD operations for teachers.\n */\n@Injectable()\nexport class TeacherRepository extends AbstractRepository {\n    /**\n     * @constructor\n     * @param {Model} applicationModel - The Mongoose model for the Teacher schema.\n     * @description Constructs an instance of the TeacherRepository.\n     * It injects the Mongoose model for the Teacher schema using the @InjectModel decorator.\n     * The injected model is then passed to the constructor of the AbstractRepository class.\n     */\n    constructor(@InjectModel(Teacher.name) applicationModel: Model) {\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/teacher.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It interacts with the TeacherRepository to perform teacher-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: TeacherRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/student-management/src/teacher/teacher.service.ts:14\n                            \n                        \n\n                \n                    \n                            It injects the TeacherRepository using the @InjectModel decorator.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        TeacherRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe repository for teacher management.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTeacherDto: CreateTeacherDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:33\n                \n            \n\n\n            \n                \n                    It calls the create method of the TeacherRepository and passes the createTeacherDto.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createTeacherDto\n                                    \n                                                CreateTeacherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe DTO object containing teacher data.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves when the teacher is created.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/student-management/src/teacher/teacher.service.ts:43\n                \n            \n\n\n            \n                \n                    It calls the find method of the TeacherRepository to get all teacher documents.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to an array of teacher documents.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Teacher } from '../schemas/teacher.schema';\nimport { TeacherRepository } from './teacher.repository';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\n\n/**\n * @class TeacherService\n * @description Service class for managing teachers.\n * It interacts with the TeacherRepository to perform teacher-related operations.\n */\n@Injectable()\nexport class TeacherService {\n  /**\n   * @constructor\n   * @param {TeacherRepository} teacherRepository - The repository for teacher management.\n   * @description Constructs an instance of the TeacherService.\n   * It injects the TeacherRepository using the @InjectModel decorator.\n   */\n  constructor(\n    @InjectModel(Teacher.name)\n    private readonly teacherRepository: TeacherRepository,\n  ) {}\n\n  /**\n   * @method create\n   * @param {CreateTeacherDto} createTeacherDto - The DTO object containing teacher data.\n   * @returns {Promise} - A promise that resolves when the teacher is created.\n   * @description Creates a new teacher.\n   * It calls the create method of the TeacherRepository and passes the createTeacherDto.\n   */\n  async create(createTeacherDto: CreateTeacherDto): Promise {\n    await this.teacherRepository.create(createTeacherDto);\n  }\n\n  /**\n   * @method findAll\n   * @returns {Promise} - A promise that resolves to an array of teacher documents.\n   * @description Retrieves all teachers.\n   * It calls the find method of the TeacherRepository to get all teacher documents.\n   */\n  async findAll(): Promise {\n    return this.teacherRepository.find({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestProgramController.html":{"url":"controllers/TestProgramController.html","title":"controller - TestProgramController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestProgramController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test-program\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing potential tests in the test-program module.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createPotentialTestDto\n                            \n                            \n                                    \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createPotentialTestDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPotentialTestDto(data: createPotentialTestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:34\n                \n            \n\n\n            \n                \n                    Endpoint for creating a new potential test.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createPotentialTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data for creating the potential test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A Promise that resolves to the created potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:24\n                \n            \n\n\n            \n                \n                    Endpoint for deleting a potential test by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the potential test to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the deleted potential test.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/test-program/src/test-program.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint for retrieving all potential tests.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { TestProgramService } from './test-program.service';\nimport { createPotentialTestDto } from './dto/create-potentialTest.dto';\nimport { CommandBus, EventBus } from '@nestjs/cqrs';\nimport { CreatePotentialTestCommand } from './commands/create-potentialTest.command';\n\n/**\n * Controller class for managing potential tests in the test-program module.\n */\n@Controller('test-program')\nexport class TestProgramController {\n  constructor(\n    private readonly testProgramService: TestProgramService,\n    private readonly commandBus: CommandBus,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Endpoint for deleting a potential test by its ID.\n   * @param id The ID of the potential test to be deleted.\n   * @returns A Promise that resolves to the deleted potential test.\n   */\n  @Delete(':id')\n  async deleteApplicationById(@Param('id') id: string) {\n    return this.testProgramService.deleteApplicationById(id);\n  }\n\n  /**\n   * Endpoint for creating a new potential test.\n   * @param data The data for creating the potential test.\n   * @returns A Promise that resolves to the created potential test.\n   */\n  @Post()\n  async createPotentialTestDto(@Body() data: createPotentialTestDto) {\n    const command = new CreatePotentialTestCommand(data);\n    this.commandBus.execute(command);\n  }\n\n  /**\n   * Endpoint for retrieving all potential tests.\n   * @returns A Promise that resolves to an array of potential tests.\n   */\n  @Get()\n  async getApplications() {\n    return this.testProgramService.getApplications();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestProgramModule.html":{"url":"modules/TestProgramModule.html","title":"module - TestProgramModule","body":"\n                   \n\n\n\n\n    Modules\n    TestProgramModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_imports\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/test-program/src/test-program.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestProgramRepository\n                        \n                        \n                            TestProgramService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestProgramController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Import necessary modules and classes from external packages\nimport { Module } from '@nestjs/common';\nimport { TestProgramController } from './test-program.controller';\nimport { TestProgramService } from './test-program.service';\nimport { DatabaseModule, RmqModule } from '@app/common';\nimport { APPLICATION_SERVICE } from './constants/services';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PotentialTest, PotentialTestSchema } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\nimport { ConfigModule } from '@nestjs/config';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { PotentialTestRegisteredEventHandler } from './events/potentialTest-registered.event.handler';\nimport { CreatePotentialTestCommandHandler } from './commands/create-potentialTest.command.handler';\nimport { Teacher, TeacherSchema } from './schemas/teacher.schema';\nimport { TeacherModule } from 'apps/student-management/src/teacher/teacher.module';\n\n@Module({\n  // Import and configure modules for the TestProgramModule\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    RmqModule.register({ name: APPLICATION_SERVICE }),\n    DatabaseModule,\n    CqrsModule,\n    // Import MongooseModule and specify the schemas to be used\n    MongooseModule.forFeature([\n      { name: PotentialTest.name, schema: PotentialTestSchema },\n      { name: Teacher.name, schema: TeacherSchema },\n    ]),\n  ],\n  // Specify the controllers to be included in the TestProgramModule\n  controllers: [TestProgramController],\n  // Specify the services and repositories to be included in the TestProgramModule\n  providers: [\n    TestProgramService,\n    TestProgramRepository,\n    PotentialTestRegisteredEventHandler,\n    CreatePotentialTestCommandHandler,\n  ],\n})\nexport class TestProgramModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramRepository.html":{"url":"injectables/TestProgramRepository.html","title":"injectable - TestProgramRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramRepository class.\nThis class extends the AbstractRepository class from the \"@app/common\" package.\nIt provides data access methods for the \"PotentialTest\" entity.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.repository.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramRepository class.\n                        This model is used for executing database operations related to the \"PotentialTest\" entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Mongoose Model for the \"PotentialTest\" entity, injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: TDocument)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:14\n\n                \n            \n\n\n            \n                \n                    Create a new document.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            TDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to create.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The created document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:59\n\n                \n            \n\n\n            \n                \n                    Delete a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The deleted document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:40\n\n                \n            \n\n\n            \n                \n                    Find multiple documents matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the documents.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        An array of found documents.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filterQuery: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:25\n\n                \n            \n\n\n            \n                \n                    Find a single document matching the filter query.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter query to find the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The found document.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, document: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractRepository\n\n                \n            \n            \n                \n                        Defined in         AbstractRepository:50\n\n                \n            \n\n\n            \n                \n                    Update a document by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the document to update.\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The partial document containing the fields to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The updated document.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PotentialTest } from \"./schemas/potentialTest.schema\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\n\n/**\n * Injectable TestProgramRepository class.\n * This class extends the AbstractRepository class from the \"@app/common\" package.\n * It provides data access methods for the \"PotentialTest\" entity.\n */\n@Injectable()\nexport class TestProgramRepository extends AbstractRepository {\n    /**\n     * Constructor for the TestProgramRepository class.\n     * @param applicationModel The Mongoose Model for the \"PotentialTest\" entity, injected using @InjectModel decorator.\n     *                         This model is used for executing database operations related to the \"PotentialTest\" entity.\n     */\n    constructor(@InjectModel(PotentialTest.name) applicationModel: Model) {\n        // Call the constructor of the parent AbstractRepository class passing the injected \"applicationModel\".\n        // The parent class takes care of creating basic CRUD operations for the \"PotentialTest\" entity.\n        super(applicationModel);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestProgramService.html":{"url":"injectables/TestProgramService.html","title":"injectable - TestProgramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestProgramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/test-program.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable TestProgramService class.\nThis class provides methods to interact with the test program data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteApplicationById\n                            \n                            \n                                    Async\n                                getApplications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testProgramRepository: TestProgramRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/test-program/src/test-program.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the TestProgramService class.\n                            This repository is used to execute database operations related to the test program.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testProgramRepository\n                                                  \n                                                        \n                                                                        TestProgramRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The TestProgramRepository instance injected using\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteApplicationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteApplicationById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes an application from the test program by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the application to be deleted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to the result of the delete operation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getApplications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplications()\n                \n            \n\n\n            \n                \n                    Defined in apps/test-program/src/test-program.service.ts:27\n                \n            \n\n\n            \n                \n                    Retrieves all applications from the test program.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A Promise that resolves to an array of potential tests (applications).\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PotentialTest } from './schemas/potentialTest.schema';\nimport { TestProgramRepository } from './test-program.repository';\n\n/**\n * Injectable TestProgramService class.\n * This class provides methods to interact with the test program data.\n */\n@Injectable()\nexport class TestProgramService {\n  /**\n   * Constructor for the TestProgramService class.\n   * @param testProgramRepository The TestProgramRepository instance injected using @InjectModel decorator.\n   *                             This repository is used to execute database operations related to the test program.\n   */\n  constructor(\n    @InjectModel(PotentialTest.name)\n    private readonly testProgramRepository: TestProgramRepository,\n  ) {}\n\n  /**\n   * Retrieves all applications from the test program.\n   * @returns A Promise that resolves to an array of potential tests (applications).\n   */\n  async getApplications() {\n    return this.testProgramRepository.find({});\n  }\n\n  /**\n   * Deletes an application from the test program by its ID.\n   * @param id The ID of the application to be deleted.\n   * @returns A Promise that resolves to the result of the delete operation.\n   */\n  async deleteApplicationById(id: string) {\n    return this.testProgramRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\n// Define the UpdateTeacherDto class extending PartialType(CreateTeacherDto)\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyClassDto.html":{"url":"classes/applyClassDto.html","title":"class - applyClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/class-management/src/dto/applyClass.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                student\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:15\n                        \n                    \n\n            \n                \n                    The name of the class to apply for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialStudent\n\n                    \n                \n                    \n                        \n                                Defined in apps/class-management/src/dto/applyClass.dto.ts:20\n                        \n                    \n\n            \n                \n                    The potential student applying for the class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { AbstractDocument } from \"@app/common\";\nimport { PotentialStudent } from \"apps/student-management/src/schemas/potentialStudent.schema\";\n\nexport class applyClassDto extends AbstractDocument {\n    /**\n     * The name of the class to apply for.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * The potential student applying for the class.\n     */\n    student: PotentialStudent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/applyModuleDto.html":{"url":"classes/applyModuleDto.html","title":"class - applyModuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  applyModuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/module-management/src/dto/applyModule.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for applying a module.\nExtends the AbstractDocument class.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                teacher\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PotentialClass\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:26\n                        \n                    \n\n            \n                \n                    Class associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:16\n                        \n                    \n\n            \n                \n                    Name of the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Teacher\n\n                    \n                \n                    \n                        \n                                Defined in apps/module-management/src/dto/applyModule.dto.ts:21\n                        \n                    \n\n            \n                \n                    Teacher associated with the module.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { PotentialClass } from \"apps/class-management/src/schemas/potentialClass.schema\";\nimport { Teacher } from \"apps/student-management/src/schemas/teacher.schema\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\n/**\n * DTO (Data Transfer Object) for applying a module.\n * Extends the AbstractDocument class.\n */\nexport class applyModuleDto extends AbstractDocument {\n    /**\n     * Name of the module.\n     */\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    /**\n     * Teacher associated with the module.\n     */\n    teacher: Teacher;\n\n    /**\n     * Class associated with the module.\n     */\n    class: PotentialClass;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/class-management/src/class-management.controller.ts\n            \n            controller\n            ClassManagementController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.repository.ts\n            \n            injectable\n            ClassManagementRepository\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/class-management/src/class-management.service.ts\n            \n            injectable\n            ClassManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.handler.ts\n            \n            class\n            CreatePotentialClassCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/commands/create-potentialClass.command.ts\n            \n            class\n            CreatePotentialClassCommand\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/dto/applyClass.dto.ts\n            \n            class\n            applyClassDto\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.handler.ts\n            \n            class\n            PotentialClassRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/event/potentialClass-registered.event.ts\n            \n            class\n            PotentialClassRegisteredEvent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            class\n            PotentialClass\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/class-management/src/schemas/potentialClass.schema.ts\n            \n            variable\n            PotentialClassSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.handler.ts\n            \n            class\n            CreatePotentialModuleCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/commands/create-potentialModule.command.ts\n            \n            class\n            CreatePotentialModuleCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/constants/service.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/dto/applyModule.dto.ts\n            \n            class\n            applyModuleDto\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.handler.ts\n            \n            class\n            PotentialModuleRegisteredEventHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/events/potentialModule-registered.event.ts\n            \n            class\n            PotentialModuleRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.controller.ts\n            \n            controller\n            ModuleManagementController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.repository.ts\n            \n            injectable\n            ModuleManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/module-management/src/module-management.service.ts\n            \n            injectable\n            ModuleManagementService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            class\n            PotentialModule\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/module-management/src/schemas/potentialModule.schema.ts\n            \n            variable\n            PotentialModuleSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.handler.ts\n            \n            class\n            CreatePotentialStudentCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/commands/create-potentialStudent/create-potentialStudent.command.ts\n            \n            class\n            CreatePotentialStudentCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/dto/create-potentialStudent.dto.ts\n            \n            class\n            createPotentialStudentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.handler.ts\n            \n            class\n            PotentialStudentRegisteredEventHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/events/potentialStudent-registered.event.ts\n            \n            class\n            PotentialStudentRegisteredEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/main.ts\n            \n            function\n            configureSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            class\n            PotentialStudent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/potentialStudent.schema.ts\n            \n            variable\n            PotentialStudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.controller.ts\n            \n            controller\n            StudentManagementController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.repository.ts\n            \n            injectable\n            StudentManagementRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/student-management.service.ts\n            \n            injectable\n            StudentManagementService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.repository.ts\n            \n            injectable\n            TeacherRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/student-management/src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/study-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.controller.ts\n            \n            controller\n            StudyProgramController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/study-program/src/study-program.service.ts\n            \n            injectable\n            StudyProgramService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.handler.ts\n            \n            class\n            CreatePotentialTestCommandHandler\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/commands/create-potentialTest.command.ts\n            \n            class\n            CreatePotentialTestCommand\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/constants/services.ts\n            \n            variable\n            APPLICATION_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/dto/create-potentialTest.dto.ts\n            \n            class\n            createPotentialTestDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.handler.ts\n            \n            class\n            PotentialTestRegisteredEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/events/potentialTest-registered.event.ts\n            \n            class\n            PotentialTestRegisteredEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/main.ts\n            \n            function\n            configureSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            class\n            PotentialTest\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/potentialTest.schema.ts\n            \n            variable\n            PotentialTestSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            class\n            Teacher\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                apps/test-program/src/schemas/teacher.schema.ts\n            \n            variable\n            TeacherSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.controller.ts\n            \n            controller\n            TestProgramController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.repository.ts\n            \n            injectable\n            TestProgramRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/test-program/src/test-program.service.ts\n            \n            injectable\n            TestProgramService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            injectable\n            AbstractRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rabbitmq/rabbitmq.service.ts\n            \n            injectable\n            RabbitmqService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialStudentDto.html":{"url":"classes/createPotentialStudentDto.html","title":"class - createPotentialStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/student-management/src/dto/create-potentialStudent.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                study\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        study\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/student-management/src/dto/create-potentialStudent.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from \"class-validator\";\n\n// Define the createPotentialStudentDto class extending AbstractDocument\nexport class createPotentialStudentDto extends AbstractDocument {\n    // The name property represents the name of the potential student\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    // The email property represents the email address of the potential student\n    @IsEmail()\n    email: string;\n\n    // The study property represents the field of study of the potential student\n    @IsString()\n    @IsNotEmpty()\n    study: string;\n  \n    // The phoneNumber property represents the phone number of the potential student\n    @IsPhoneNumber()\n    phoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createPotentialTestDto.html":{"url":"classes/createPotentialTestDto.html","title":"class - createPotentialTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createPotentialTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/test-program/src/dto/create-potentialTest.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO class for creating a potential test.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractDocument\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                ec\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:50\n                        \n                    \n\n            \n                \n                    An array of answers corresponding to the questions of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:27\n                        \n                    \n\n            \n                \n                    The duration of the potential test (in minutes).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:34\n                        \n                    \n\n            \n                \n                    The educational credits (EC) associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:13\n                        \n                    \n\n            \n                \n                    The module associated with the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:20\n                        \n                    \n\n            \n                \n                    The name of the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/test-program/src/dto/create-potentialTest.dto.ts:42\n                        \n                    \n\n            \n                \n                    An array of questions for the potential test.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDocument\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDocument:19\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDocument } from \"@app/common\";\nimport { IsArray, IsNotEmpty, IsString, IsNumber } from \"class-validator\";\n\n/**\n * DTO class for creating a potential test.\n */\nexport class createPotentialTestDto extends AbstractDocument {\n  /**\n   * The module associated with the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  /**\n   * The name of the potential test.\n   */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * The duration of the potential test (in minutes).\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /**\n   * The educational credits (EC) associated with the potential test.\n   */\n  @IsNumber()\n  @IsNotEmpty()\n  ec: number;\n\n  /**\n   * An array of questions for the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  questions: string[];\n\n  /**\n   * An array of answers corresponding to the questions of the potential test.\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @IsNotEmpty({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.4\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.4\n        \n            @nestjs/cqrs : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.0.4\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.4\n        \n            @nestjs/swagger : ^7.0.12\n        \n            amqp-connection-manager : ^4.1.13\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                        \n                            configureSwagger   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The NestJS application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/module-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger for API documentation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/student-management/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Nest application instance.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/study-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/test-program/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap function to start the Nest.js application.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSwagger\n                        \n                    \n                \n            \n            \n                \nconfigureSwagger(app)\n                \n            \n\n\n\n\n            \n                \n                    Configures Swagger documentation for the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Nest.js application instance.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ClassManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModuleManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudyProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestProgramModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassManagementModule\n\n\n\ncluster_ClassManagementModule_imports\n\n\n\ncluster_ClassManagementModule_providers\n\n\n\ncluster_ModuleManagementModule\n\n\n\ncluster_ModuleManagementModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_StudentManagementModule\n\n\n\ncluster_StudentManagementModule_imports\n\n\n\ncluster_StudentManagementModule_providers\n\n\n\ncluster_StudyProgramModule\n\n\n\ncluster_StudyProgramModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TestProgramModule\n\n\n\ncluster_TestProgramModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nClassManagementModule\n\nClassManagementModule\n\nClassManagementModule -->\n\nDatabaseModule->ClassManagementModule\n\n\n\n\n\nModuleManagementModule\n\nModuleManagementModule\n\nModuleManagementModule -->\n\nDatabaseModule->ModuleManagementModule\n\n\n\n\n\nStudentManagementModule\n\nStudentManagementModule\n\nStudentManagementModule -->\n\nDatabaseModule->StudentManagementModule\n\n\n\n\n\nTestProgramModule\n\nTestProgramModule\n\nTestProgramModule -->\n\nDatabaseModule->TestProgramModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nClassManagementModule -->\n\nRmqModule->ClassManagementModule\n\n\n\nModuleManagementModule -->\n\nRmqModule->ModuleManagementModule\n\n\n\n\n\nRabbitmqService \n\nRabbitmqService \n\nRabbitmqService  -->\n\nRmqModule->RabbitmqService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nRmqModule->TeacherModule\n\n\n\nStudentManagementModule -->\n\nRmqModule->StudentManagementModule\n\n\n\nTestProgramModule -->\n\nRmqModule->TestProgramModule\n\n\n\n\n\nClassManagementRepository\n\nClassManagementRepository\n\nClassManagementModule -->\n\nClassManagementRepository->ClassManagementModule\n\n\n\n\n\nClassManagementService\n\nClassManagementService\n\nClassManagementModule -->\n\nClassManagementService->ClassManagementModule\n\n\n\n\n\nModuleManagementRepository\n\nModuleManagementRepository\n\nModuleManagementModule -->\n\nModuleManagementRepository->ModuleManagementModule\n\n\n\n\n\nModuleManagementService\n\nModuleManagementService\n\nModuleManagementModule -->\n\nModuleManagementService->ModuleManagementModule\n\n\n\n\n\nRabbitmqService\n\nRabbitmqService\n\nRmqModule -->\n\nRabbitmqService->RmqModule\n\n\n\nStudentManagementModule -->\n\nTeacherModule->StudentManagementModule\n\n\n\n\n\nStudentManagementRepository\n\nStudentManagementRepository\n\nStudentManagementModule -->\n\nStudentManagementRepository->StudentManagementModule\n\n\n\n\n\nStudentManagementService\n\nStudentManagementService\n\nStudentManagementModule -->\n\nStudentManagementService->StudentManagementModule\n\n\n\n\n\nStudyProgramService\n\nStudyProgramService\n\n\n\nStudyProgramModule\n\nStudyProgramModule\n\nStudyProgramModule -->\n\nStudyProgramService->StudyProgramModule\n\n\n\n\n\nTeacherRepository\n\nTeacherRepository\n\nTeacherModule -->\n\nTeacherRepository->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nTestProgramRepository\n\nTestProgramRepository\n\nTestProgramModule -->\n\nTestProgramRepository->TestProgramModule\n\n\n\n\n\nTestProgramService\n\nTestProgramService\n\nTestProgramModule -->\n\nTestProgramService->TestProgramModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../service.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            APPLICATION_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            PotentialClassSchema   (apps/.../potentialClass.schema.ts)\n                        \n                        \n                            PotentialModuleSchema   (apps/.../potentialModule.schema.ts)\n                        \n                        \n                            PotentialStudentSchema   (apps/.../potentialStudent.schema.ts)\n                        \n                        \n                            PotentialTestSchema   (apps/.../potentialTest.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                        \n                            TeacherSchema   (apps/.../teacher.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/class-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/constants/service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/student-management/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APPLICATION_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'APPLICATION'\n                    \n                \n\n\n        \n    \n\n    apps/class-management/src/schemas/potentialClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialClass)\n                    \n                \n\n\n        \n    \n\n    apps/module-management/src/schemas/potentialModule.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialModuleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialModule)\n                    \n                \n\n            \n                \n                    Mongoose schema for the PotentialModule entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/potentialStudent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialStudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialStudent)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/potentialTest.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PotentialTestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PotentialTest)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the PotentialTest entity.\n\n                \n            \n\n        \n    \n\n    apps/student-management/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n\n        \n    \n\n    apps/test-program/src/schemas/teacher.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeacherSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Teacher)\n                    \n                \n\n            \n                \n                    Mongoose schema definition for the Teacher entity.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
